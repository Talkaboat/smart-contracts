{
	"id": "a63c9c84404dca9755d1abc527e7e177",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BaseFlipPool.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.7;\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\";\nimport \"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\";\nimport \"./interfaces/IMasterChefContractor.sol\";\nimport \"./flip_interfaces/IPancakeSwapMasterChef.sol\";\nimport \"./libraries/TransferHelper.sol\";\n\ncontract BaseFlipPool is Ownable, IMasterChefContractor {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n    using Address for address;    \n    \n    /* =====================================================================================================================\n                                                        Variables\n    ===================================================================================================================== */\n    IPancakeSwapMasterChef masterChef;\n    IERC20 public rewardToken;  //What do we get as reward?\n    IERC20 public stakeToken;   //What do we stake to get reward?\n    IERC20 public flipToken;    //What do we swap to?\n    address public rewardSystem;\n    \n    IUniswapV2Router02 router;\n    \n    address masterEntertainer;\n    \n    uint256 public minAmountToSwap = 1 ether;\n    /* =====================================================================================================================\n                                                        Events\n    ===================================================================================================================== */\n    event SetRewardSystem(address indexed user, address indexed newAddress);\n    event SetMasterEntertainer(address indexed masterEntertainer);\n    event SetRouter(address indexed router);\n    event SetMinAmountToSwap(uint256 amount);\n    /* =====================================================================================================================\n                                                        Modifier\n    ===================================================================================================================== */\n    modifier onlyMasterEntertainer {\n        require(address(msg.sender) == masterEntertainer, \"ABOAT::onlyMasterEntertainer: Only the master entertainer is allowed to call this method!\");\n        _;\n    }\n    \n    \n    constructor(IERC20 _flipToken, IERC20 _stakeToken, IERC20 _rewardToken, address _rewardSystem, IPancakeSwapMasterChef _masterChef, address _masterEntertainer) {\n        require(address(_flipToken) != address(0), \"Flip Token can't be zero address\");\n        require(address(_stakeToken) != address(0), \"Stake Token can't be zero address\");\n        require(address(_rewardToken) != address(0), \"Reward Token can't be zero address\");\n        require(_rewardSystem != address(0), \"Reward System can't be zero address\");\n        require(address(_masterChef) != address(0), \"Master Chef can't be zero address\");\n        require(_masterEntertainer != address(0), \"Master Entertainer can't be zero address\");\n        flipToken = _flipToken;\n        masterChef = _masterChef;\n        masterEntertainer = _masterEntertainer;\n        stakeToken = _stakeToken;\n        rewardToken = _rewardToken;\n        rewardSystem = _rewardSystem;\n    }  \n\n    /* =====================================================================================================================\n                                                        Set Functions\n    ===================================================================================================================== */\n    function setRewardSystem(address _rewardSystem) public onlyOwner{\n        require(_rewardSystem != address(0), \"Reward System can't be set to zero address\");\n        rewardSystem = _rewardSystem;\n        emit SetRewardSystem(msg.sender, rewardSystem);\n    }\n    \n    function setRouter(IUniswapV2Router02 _router) public onlyOwner {\n        require(address(_router) != address(0), \"Router can't be set to zero address\");\n        router = _router;\n        emit SetRouter(address(router));\n    }\n    \n    function setMasterEntertainer(address _masterEntertainer) public onlyOwner {\n        require(_masterEntertainer != address(0), \"Master Entertainer can't be set to zero address\");\n        masterEntertainer = _masterEntertainer;\n        emit SetMasterEntertainer(masterEntertainer);\n    }\n    \n    function setMinAmountToSwap(uint256 _minAmount) public onlyOwner {\n        minAmountToSwap = _minAmount;\n        emit SetMinAmountToSwap(minAmountToSwap);\n    }\n    \n    /* =====================================================================================================================\n                                                        Get Functions\n    ===================================================================================================================== */\n    function getMasterChef() external override view returns (address) {\n        return address(masterChef);\n    }\n    \n    function getLiquidity(uint256 _pid) external override view returns (uint256) {\n        (uint256 amount, ) = masterChef.userInfo(_pid, address(this));\n        return amount;\n    }\n    \n    function getDepositFee(uint256 _pid) external override view returns (uint256) {\n        return 0;\n    }\n    \n    /* =====================================================================================================================\n                                                    Utility Functions\n    ===================================================================================================================== */\n    receive() external payable {}\n    \n    function deposit(uint256 _pid, uint256 _amount) external override onlyMasterEntertainer {\n        _deposit(_pid, _amount);\n    }\n    \n    function _deposit(uint256 _pid, uint256 _amount) internal {\n        stakeToken.safeTransferFrom(address(msg.sender), address(this), _amount);\n        stakeToken.approve(address(masterChef), _amount);\n        if(_pid == 0) {\n            enterStake(_pid, _amount);\n        } else {\n            masterChef.deposit(_pid, _amount);\n        }\n        swapToken();\n    }\n    \n    function withdraw(uint256 _pid, uint256 _amount, address _sender) external override onlyMasterEntertainer {\n        if(_pid == 0) {\n            leaveStake(_pid, _amount);\n        } else {\n            masterChef.withdraw(_pid, _amount);\n        }\n        if(_amount > 0) {\n            stakeToken.safeTransfer(_sender, _amount);\n        }\n        swapToken();\n    }\n    \n    \n    function emergencyWithdraw(uint256 _pid, uint256 _amount, address _sender) external override onlyMasterEntertainer {\n        masterChef.withdrawWithoutRewards(_pid);\n        safeTokenTransfer(stakeToken, _sender, _amount);\n        _deposit(_pid, stakeToken.balanceOf(address(this)));\n        \n    }\n    \n    function enterStake(uint256 _pid, uint256 _amount) internal {\n        masterChef.deposit(_pid, _amount);\n        swapToken();\n    }\n    \n    function leaveStake(uint256 _pid, uint256 _amount) internal {\n        masterChef.withdraw(_pid, _amount);\n    }\n    \n    \n    function swapToken() internal {\n        uint256 balanceToSwap = rewardToken.balanceOf(address(this));\n        if(address(router) == address(0) && balanceToSwap > 0) {\n            safeTokenTransfer(rewardToken, owner(), balanceToSwap);\n        }\n        else if(balanceToSwap >= minAmountToSwap) {\n            uint256 ethBalance = swapForEth(rewardToken, balanceToSwap);\n            swapEthForTokens(ethBalance);\n        }\n       \n    }\n    \n    function swapForEth(IERC20 token, uint256 amount) internal returns (uint256) {\n        uint256 initialBalance = address(this).balance;\n                \n        // swap tokens for ETH\n        swapTokensForEth(token, amount);\n        \n        return address(this).balance.sub(initialBalance);\n    }\n    \n    function swapTokensForEth(IERC20 token, uint256 tokenAmount) internal {\n        // generate the Enodi pair path of token -> weth\n        address[] memory path = new address[](2);\n        path[0] = address(token);\n        path[1] = router.WETH();\n\n        token.approve(address(router), tokenAmount);\n\n        // make the swap\n        router.swapExactTokensForETHSupportingFeeOnTransferTokens(\n            tokenAmount,\n            0, // accept any amount of ETH\n            path,\n            address(this),\n            block.timestamp\n        );\n    }\n    \n    function swapEthForTokens(uint256 tokenAmount) internal {\n        address[] memory path = new address[](2);\n        path[0] = router.WETH();\n        path[1] = address(flipToken);\n        \n        router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: tokenAmount}(\n            0, // accept any amount of ETH\n            path,\n            rewardSystem,\n            block.timestamp\n        );\n    }\n    \n    function safeTokenTransfer(IERC20 token, address _to, uint256 _amount) internal {\n        uint256 tokenBalance = token.balanceOf(address(this));\n        bool transferSuccess = false;\n        if (_amount > tokenBalance) {\n            transferSuccess = token.transfer(_to, tokenBalance);\n        } else {\n            transferSuccess = token.transfer(_to, _amount);\n        }\n        require(transferSuccess, \"ABOAT::safeTokenTransfer: transfer failed\");\n    }\n    \n}"
			},
			"contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity 0.8.7;\n\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\nlibrary TransferHelper {\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::safeTransfer: transfer failed\"\n        );\n    }\n\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::transferFrom: transferFrom failed\"\n        );\n    }\n\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(\n            success,\n            \"TransferHelper::safeTransferETH: ETH transfer failed\"\n        );\n    }\n}\n"
			},
			"contracts/flip_interfaces/IPancakeSwapMasterChef.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.7;\n\ninterface IPancakeSwapMasterChef {\n    function pendingCake(uint256 _pid, address _user) external view returns (uint256);\n    function deposit(uint256 _pid, uint256 _amount) external;\n    function withdraw(uint256 _pid, uint256 _amount) external;\n    function enterStaking(uint256 _amount) external;\n    function leaveStaking(uint256 _amount) external;\n    function withdrawWithoutRewards(uint256 _pid) external;\n    function userInfo(uint256 _pid, address _user) external view returns (uint256, uint256);\n    function poolInfo(uint256 _pid) external view returns (uint256);\n}"
			},
			"contracts/interfaces/IMasterChefContractor.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ninterface IMasterChefContractor {\n    function getMasterChef() external view returns (address);\n    function getDepositFee(uint256 _pid) external view returns (uint256);\n    function getLiquidity(uint256 _pid) external view returns (uint256);\n    function deposit(uint256 _pid, uint256 _amount) external;\n    function withdraw(uint256 _pid, uint256 _amount, address sender) external;\n    function emergencyWithdraw(uint256 _pid, uint256 _amount, address _sender) external;\n}"
			},
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV2Pair {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n    function factory() external view returns (address);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function price0CumulativeLast() external view returns (uint);\n    function price1CumulativeLast() external view returns (uint);\n    function kLast() external view returns (uint);\n\n    function mint(address to) external returns (uint liquidity);\n    function burn(address to) external returns (uint amount0, uint amount1);\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n    function skim(address to) external;\n    function sync() external;\n\n    function initialize(address, address) external;\n}\n"
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"content": "pragma solidity >=0.6.2;\n\nimport './IUniswapV2Router01.sol';\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        unchecked {\n            _approve(sender, _msgSender(), currentAllowance - amount);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[sender] = senderBalance - amount;\n        }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n\n        _afterTokenTransfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _setOwner(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _setOwner(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _setOwner(newOwner);\n    }\n\n    function _setOwner(address newOwner) private {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) private pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"content": "pragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd\",\"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 114,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:11737  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:11737  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:899   */\ntag_22:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:143   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:143   */\ntag_24:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:257   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:476   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:619   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:619   */\ntag_30:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_31:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:869   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:869   */\ntag_34:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":14:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1084   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1084   */\ntag_36:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1203   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1203   */\ntag_37:\n    /* \"#utility.yul\":1222:1283   */\n  tag_38\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1378   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1378   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_40\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":904:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1851   */\ntag_11:\n    /* \"#utility.yul\":1550:1551   */\n  0x01\n    /* \"#utility.yul\":1546:1558   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1593:1605   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1614:1675   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1668:1672   */\n  0x7f\n    /* \"#utility.yul\":1660:1666   */\n  dup3\n    /* \"#utility.yul\":1656:1673   */\n  and\n    /* \"#utility.yul\":1646:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1675   */\ntag_42:\n    /* \"#utility.yul\":1721:1723   */\n  0x20\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1710:1724   */\n  lt\n    /* \"#utility.yul\":1690:1708   */\n  dup2\n    /* \"#utility.yul\":1687:1725   */\n  eq\n    /* \"#utility.yul\":1684:1845   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1767:1777   */\n  0x4e487b71\n    /* \"#utility.yul\":1762:1765   */\n  0xe0\n    /* \"#utility.yul\":1758:1778   */\n  shl\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1779   */\n  mstore\n    /* \"#utility.yul\":1802:1806   */\n  0x22\n    /* \"#utility.yul\":1799:1800   */\n  0x04\n    /* \"#utility.yul\":1792:1807   */\n  mstore\n    /* \"#utility.yul\":1830:1834   */\n  0x24\n    /* \"#utility.yul\":1827:1828   */\n  0x00\n    /* \"#utility.yul\":1820:1835   */\n  revert\n    /* \"#utility.yul\":1684:1845   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1471:1851   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1856:1983   */\ntag_27:\n    /* \"#utility.yul\":1917:1927   */\n  0x4e487b71\n    /* \"#utility.yul\":1912:1915   */\n  0xe0\n    /* \"#utility.yul\":1908:1928   */\n  shl\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1898:1929   */\n  mstore\n    /* \"#utility.yul\":1948:1952   */\n  0x41\n    /* \"#utility.yul\":1945:1946   */\n  0x04\n    /* \"#utility.yul\":1938:1953   */\n  mstore\n    /* \"#utility.yul\":1972:1976   */\n  0x24\n    /* \"#utility.yul\":1969:1970   */\n  0x00\n    /* \"#utility.yul\":1962:1977   */\n  revert\n    /* \"#utility.yul\":1856:1983   */\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:11737  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:11737  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2172  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4171:4337  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1405:1419   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1398:1420   */\n      iszero\n        /* \"#utility.yul\":1380:1421   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1368:1370   */\n      0x20\n        /* \"#utility.yul\":1353:1371   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4171:4337  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1240:1427   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3162:3268  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3249:3261  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3162:3268  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":5020:5045   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5008:5010   */\n      0x20\n        /* \"#utility.yul\":4993:5011   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3162:3268  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":4874:5051   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4804:5282  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3011:3102  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3095  18 */\n      0x12\n        /* \"#utility.yul\":5198:5234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5186:5188   */\n      0x20\n        /* \"#utility.yul\":5171:5189   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3011:3102  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":5056:5240   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5677:5889  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3326:3451  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3426:3444  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3426:3444  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3326:3451  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2285:2387  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6781  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3654:3826  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3884:4033  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3999:4017  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3973:3980  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3999:4017  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3999:4010  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3999:4017  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3999:4026  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3884:4033  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2172  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2128:2141  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2160:2165  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2153:2165  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2172  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4171:4337  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4254:4258  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4270:4309  _approve(_msgSender(), spender, amount) */\n      tag_71\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4300  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4302:4308  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4270:4278  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4270:4309  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_71:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4326:4330  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4171:4337  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4804:5282  function transferFrom(... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4940:4944  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4956:4992  _transfer(sender, recipient, amount) */\n      tag_77\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4972  sender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4974:4983  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4985:4991  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4956:4965  _transfer */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4956:4992  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5030:5049  _allowances[sender] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5003:5027  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5030:5049  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5030:5041  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5030:5049  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5030:5063  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5081:5107  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5073:5152  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3450:3452   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5073:5152  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3432:3453   */\n      mstore\n        /* \"#utility.yul\":3489:3491   */\n      0x28\n        /* \"#utility.yul\":3469:3487   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3462:3492   */\n      mstore\n        /* \"#utility.yul\":3528:3562   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":3508:3526   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3501:3563   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":3579:3597   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3572:3610   */\n      mstore\n        /* \"#utility.yul\":3627:3646   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5073:5152  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5186:5243  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5195:5201  sender */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5236:5242  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5217:5233  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5217:5242  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5186:5194  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5186:5243  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_83:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5271:5275  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4804:5282  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5677:5889  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5765:5769  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5838  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5824  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5838  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5847  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5765:5769  bool */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5781:5861  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_71\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5804:5811  spender */\n      dup6\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5860  _allowances[_msgSender()][spender] + addedValue */\n      tag_90\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5850:5860  addedValue */\n      dup7\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5860  _allowances[_msgSender()][spender] + addedValue */\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5781:5789  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5781:5861  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2285:2387  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2341:2354  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2373:2380  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2366:2380  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6781  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6469:6473  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6537  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6523  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6537  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6546  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6564:6599  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6556:6641  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4670:4672   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6556:6641  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4652:4673   */\n      mstore\n        /* \"#utility.yul\":4709:4711   */\n      0x25\n        /* \"#utility.yul\":4689:4707   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4682:4712   */\n      mstore\n        /* \"#utility.yul\":4748:4782   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4728:4746   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4721:4783   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4799:4817   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4792:4827   */\n      mstore\n        /* \"#utility.yul\":4844:4863   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6556:6641  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_81\n        /* \"#utility.yul\":4468:4869   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6556:6641  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6675:6742  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_104\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6698:6705  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6726:6741  subtractedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6707:6723  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6707:6741  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6675:6683  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6675:6742  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_104:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6770:6774  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6781  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3654:3826  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3744  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3756:3798  _transfer(_msgSender(), recipient, amount) */\n      tag_71\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3780:3789  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3791:3797  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3756:3765  _transfer */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3756:3798  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9952:10322  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10083:10102  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10143  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4265:4267   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10143  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4247:4268   */\n      mstore\n        /* \"#utility.yul\":4304:4306   */\n      0x24\n        /* \"#utility.yul\":4284:4302   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4277:4307   */\n      mstore\n        /* \"#utility.yul\":4343:4377   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4323:4341   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4316:4378   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4394:4412   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4387:4421   */\n      mstore\n        /* \"#utility.yul\":4438:4457   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10143  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":4063:4463   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10143  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10161:10182  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10153:10221  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2640:2642   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10153:10221  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2622:2643   */\n      mstore\n        /* \"#utility.yul\":2679:2681   */\n      0x22\n        /* \"#utility.yul\":2659:2677   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2652:2682   */\n      mstore\n        /* \"#utility.yul\":2718:2752   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2698:2716   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2691:2753   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":2769:2787   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2762:2794   */\n      mstore\n        /* \"#utility.yul\":2811:2830   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10153:10221  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":2438:2836   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10153:10221  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10232:10250  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10232:10243  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10232:10250  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10232:10259  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10232:10268  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10283:10315  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":5020:5045   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10283:10315  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":4993:5011   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10283:10315  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9952:10322  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7255:7968  function _transfer(... */\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7390:7410  sender != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7382:7452  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3859:3861   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7382:7452  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3841:3862   */\n      mstore\n        /* \"#utility.yul\":3898:3900   */\n      0x25\n        /* \"#utility.yul\":3878:3896   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3871:3901   */\n      mstore\n        /* \"#utility.yul\":3937:3971   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3917:3935   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3910:3972   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":3988:4006   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3981:4016   */\n      mstore\n        /* \"#utility.yul\":4033:4052   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7382:7452  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":3657:4058   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7382:7452  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7470:7493  recipient != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7462:7533  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2236:2238   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7462:7533  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2218:2239   */\n      mstore\n        /* \"#utility.yul\":2275:2277   */\n      0x23\n        /* \"#utility.yul\":2255:2273   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2248:2278   */\n      mstore\n        /* \"#utility.yul\":2314:2348   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2294:2312   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2287:2349   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2365:2383   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2358:2391   */\n      mstore\n        /* \"#utility.yul\":2408:2427   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7462:7533  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":2034:2433   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7462:7533  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7626:7643  _balances[sender] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7602:7623  uint256 senderBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7626:7643  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7661:7684  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7727  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3043:3045   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7727  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3025:3046   */\n      mstore\n        /* \"#utility.yul\":3082:3084   */\n      0x26\n        /* \"#utility.yul\":3062:3080   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3055:3085   */\n      mstore\n        /* \"#utility.yul\":3121:3155   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3101:3119   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3094:3156   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3172:3190   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3165:3201   */\n      mstore\n        /* \"#utility.yul\":3218:3237   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7727  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_81\n        /* \"#utility.yul\":2841:3243   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7727  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7761:7778  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7761:7770  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7761:7778  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7781:7803  senderBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7761:7803  _balances[sender] = senderBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7823:7843  _balances[recipient] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7823:7853  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7797:7803  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7761:7770  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7823:7853  _balances[recipient] += amount */\n      tag_131\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7797:7803  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7823:7853  _balances[recipient] += amount */\n      tag_91\n      jump\t// in\n    tag_131:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7886:7895  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7869:7904  Transfer(sender, recipient, amount) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7878:7884  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7869:7904  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7897:7903  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7869:7904  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_132\n      swap2\n        /* \"#utility.yul\":5020:5045   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5008:5010   */\n      0x20\n        /* \"#utility.yul\":4993:5011   */\n      add\n      swap1\n        /* \"#utility.yul\":4874:5051   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7869:7904  Transfer(sender, recipient, amount) */\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7372:7968  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7255:7968  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_138:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_140\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_140:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_44:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_142:\n        /* \"#utility.yul\":343:372   */\n      tag_143\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_138\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:643   */\n    tag_60:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_145:\n        /* \"#utility.yul\":551:580   */\n      tag_146\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_138\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_147\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_138\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_31:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_149:\n        /* \"#utility.yul\":833:862   */\n      tag_150\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_138\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_151\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_138\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_21:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1130   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1130   */\n    tag_153:\n        /* \"#utility.yul\":1149:1178   */\n      tag_154\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_138\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1432:2029   */\n    tag_18:\n        /* \"#utility.yul\":1544:1548   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x20\n        /* \"#utility.yul\":1602:1604   */\n      dup1\n        /* \"#utility.yul\":1591:1600   */\n      dup4\n        /* \"#utility.yul\":1584:1605   */\n      mstore\n        /* \"#utility.yul\":1634:1640   */\n      dup4\n        /* \"#utility.yul\":1628:1641   */\n      mload\n        /* \"#utility.yul\":1677:1683   */\n      dup1\n        /* \"#utility.yul\":1672:1674   */\n      dup3\n        /* \"#utility.yul\":1661:1670   */\n      dup6\n        /* \"#utility.yul\":1657:1675   */\n      add\n        /* \"#utility.yul\":1650:1684   */\n      mstore\n        /* \"#utility.yul\":1702:1703   */\n      0x00\n        /* \"#utility.yul\":1712:1852   */\n    tag_157:\n        /* \"#utility.yul\":1726:1732   */\n      dup2\n        /* \"#utility.yul\":1723:1724   */\n      dup2\n        /* \"#utility.yul\":1720:1733   */\n      lt\n        /* \"#utility.yul\":1712:1852   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":1821:1835   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1817:1840   */\n      dup4\n      add\n        /* \"#utility.yul\":1811:1841   */\n      mload\n        /* \"#utility.yul\":1787:1804   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1806:1808   */\n      0x40\n        /* \"#utility.yul\":1783:1809   */\n      add\n        /* \"#utility.yul\":1776:1842   */\n      mstore\n        /* \"#utility.yul\":1741:1751   */\n      dup3\n      add\n        /* \"#utility.yul\":1712:1852   */\n      jump(tag_157)\n    tag_159:\n        /* \"#utility.yul\":1870:1876   */\n      dup2\n        /* \"#utility.yul\":1867:1868   */\n      dup2\n        /* \"#utility.yul\":1864:1877   */\n      gt\n        /* \"#utility.yul\":1861:1952   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":1940:1941   */\n      0x00\n        /* \"#utility.yul\":1935:1937   */\n      0x40\n        /* \"#utility.yul\":1926:1932   */\n      dup4\n        /* \"#utility.yul\":1915:1924   */\n      dup8\n        /* \"#utility.yul\":1911:1933   */\n      add\n        /* \"#utility.yul\":1907:1938   */\n      add\n        /* \"#utility.yul\":1900:1942   */\n      mstore\n        /* \"#utility.yul\":1861:1952   */\n    tag_160:\n      pop\n        /* \"#utility.yul\":2013:2015   */\n      0x1f\n        /* \"#utility.yul\":1992:2007   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1988:2017   */\n      and\n        /* \"#utility.yul\":1973:2018   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2020:2022   */\n      0x40\n        /* \"#utility.yul\":1969:2023   */\n      add\n      swap4\n        /* \"#utility.yul\":1432:2029   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5245:5470   */\n    tag_91:\n        /* \"#utility.yul\":5285:5288   */\n      0x00\n        /* \"#utility.yul\":5316:5317   */\n      dup3\n        /* \"#utility.yul\":5312:5318   */\n      not\n        /* \"#utility.yul\":5309:5310   */\n      dup3\n        /* \"#utility.yul\":5306:5319   */\n      gt\n        /* \"#utility.yul\":5303:5439   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":5361:5371   */\n      0x4e487b71\n        /* \"#utility.yul\":5356:5359   */\n      0xe0\n        /* \"#utility.yul\":5352:5372   */\n      shl\n        /* \"#utility.yul\":5349:5350   */\n      0x00\n        /* \"#utility.yul\":5342:5373   */\n      mstore\n        /* \"#utility.yul\":5396:5400   */\n      0x11\n        /* \"#utility.yul\":5393:5394   */\n      0x04\n        /* \"#utility.yul\":5386:5401   */\n      mstore\n        /* \"#utility.yul\":5424:5428   */\n      0x24\n        /* \"#utility.yul\":5421:5422   */\n      0x00\n        /* \"#utility.yul\":5414:5429   */\n      revert\n        /* \"#utility.yul\":5303:5439   */\n    tag_171:\n      pop\n        /* \"#utility.yul\":5455:5464   */\n      add\n      swap1\n        /* \"#utility.yul\":5245:5470   */\n      jump\t// out\n        /* \"#utility.yul\":5475:5855   */\n    tag_65:\n        /* \"#utility.yul\":5554:5555   */\n      0x01\n        /* \"#utility.yul\":5550:5562   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5597:5609   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5618:5679   */\n      tag_173\n      jumpi\n        /* \"#utility.yul\":5672:5676   */\n      0x7f\n        /* \"#utility.yul\":5664:5670   */\n      dup3\n        /* \"#utility.yul\":5660:5677   */\n      and\n        /* \"#utility.yul\":5650:5677   */\n      swap2\n      pop\n        /* \"#utility.yul\":5618:5679   */\n    tag_173:\n        /* \"#utility.yul\":5725:5727   */\n      0x20\n        /* \"#utility.yul\":5717:5723   */\n      dup3\n        /* \"#utility.yul\":5714:5728   */\n      lt\n        /* \"#utility.yul\":5694:5712   */\n      dup2\n        /* \"#utility.yul\":5691:5729   */\n      eq\n        /* \"#utility.yul\":5688:5849   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":5771:5781   */\n      0x4e487b71\n        /* \"#utility.yul\":5766:5769   */\n      0xe0\n        /* \"#utility.yul\":5762:5782   */\n      shl\n        /* \"#utility.yul\":5759:5760   */\n      0x00\n        /* \"#utility.yul\":5752:5783   */\n      mstore\n        /* \"#utility.yul\":5806:5810   */\n      0x22\n        /* \"#utility.yul\":5803:5804   */\n      0x04\n        /* \"#utility.yul\":5796:5811   */\n      mstore\n        /* \"#utility.yul\":5834:5838   */\n      0x24\n        /* \"#utility.yul\":5831:5832   */\n      0x00\n        /* \"#utility.yul\":5824:5839   */\n      revert\n        /* \"#utility.yul\":5688:5849   */\n    tag_174:\n      pop\n        /* \"#utility.yul\":5475:5855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200d913f179ddd67dc31f5e072c57f2a849ca702c7050833c23f61bd65fb3b214e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:16",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:16"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:16"
															},
															"nodeType": "YulIf",
															"src": "88:55:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:16",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:16"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:16"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:16"
															},
															"nodeType": "YulIf",
															"src": "221:36:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:16"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:16"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:16",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:16"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:16",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:16"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:16"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:16",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:16"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:16"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:16"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:16"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:16"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:16"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:16"
															},
															"nodeType": "YulIf",
															"src": "404:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:16",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:16"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:16",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:16"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:16"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:16"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:16"
															},
															"nodeType": "YulIf",
															"src": "566:53:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:16"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:16"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:16"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:16"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:16"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:16"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:16"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:16"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:16",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:16"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:16",
																"statements": []
															},
															"src": "647:133:16"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:16"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:16"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:16"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:16"
															},
															"nodeType": "YulIf",
															"src": "789:80:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:16",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:16",
														"type": ""
													}
												],
												"src": "14:885:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:16"
															},
															"nodeType": "YulIf",
															"src": "1032:52:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:16"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:16",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:16"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:16"
															},
															"nodeType": "YulIf",
															"src": "1169:34:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:16"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:16"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:16"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:16"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:16"
															},
															"nodeType": "YulIf",
															"src": "1342:36:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:16"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:16"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:16",
														"type": ""
													}
												],
												"src": "904:562:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:325:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:22:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:1:16",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1597:4:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1571:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:31:16",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1646:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1660:6:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1624:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:26:16"
															},
															"nodeType": "YulIf",
															"src": "1614:61:16"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1762:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1767:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1758:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1758:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:31:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1802:4:16",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1792:15:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:15:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1690:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1710:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:38:16"
															},
															"nodeType": "YulIf",
															"src": "1684:161:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1506:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1515:6:16",
														"type": ""
													}
												],
												"src": "1471:380:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1917:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1856:127:16"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b5638038062000b568339810160408190526200003491620001c5565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b82805462000076906200022f565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200012057600080fd5b81516001600160401b03808211156200013d576200013d6200026c565b604051601f8301601f19908116603f011681019082821181831017156200016857620001686200026c565b816040528381526020925086838588010111156200018557600080fd5b600091505b83821015620001a957858201830151818301840152908201906200018a565b83821115620001bb5760008385830101525b9695505050505050565b60008060408385031215620001d957600080fd5b82516001600160401b0380821115620001f157600080fd5b620001ff868387016200010e565b935060208501519150808211156200021657600080fd5b5062000225858286016200010e565b9150509250929050565b600181811c908216806200024457607f821691505b602082108114156200026657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6108c480620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107d8565b60405180910390f35b6100df6100da3660046107ae565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610772565b61026e565b604051601281526020016100c3565b6100df6101313660046107ae565b61031d565b6100f361014436600461071d565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df6101753660046107ae565b610368565b6100df6101883660046107ae565b610401565b6100f361019b36600461073f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610853565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610853565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161026591859061035490869061082d565b61040e565b6060600480546101d590610853565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a790849061082d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b80356001600160a01b038116811461071857600080fd5b919050565b60006020828403121561072f57600080fd5b61073882610701565b9392505050565b6000806040838503121561075257600080fd5b61075b83610701565b915061076960208401610701565b90509250929050565b60008060006060848603121561078757600080fd5b61079084610701565b925061079e60208501610701565b9150604084013590509250925092565b600080604083850312156107c157600080fd5b6107ca83610701565b946020939093013593505050565b600060208083528351808285015260005b81811015610805578581018301518582016040015282016107e9565b81811115610817576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561084e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061086757607f821691505b6020821081141561088857634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212200d913f179ddd67dc31f5e072c57f2a849ca702c7050833c23f61bd65fb3b214e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB56 CODESIZE SUB DUP1 PUSH3 0xB56 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C5 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x22F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13D JUMPI PUSH3 0x13D PUSH3 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0x26C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A9 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18A JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FF DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x225 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x8C4 DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x73F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x82D JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x738 DUP3 PUSH2 0x701 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75B DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH2 0x769 PUSH1 0x20 DUP5 ADD PUSH2 0x701 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x790 DUP5 PUSH2 0x701 JUMP JUMPDEST SWAP3 POP PUSH2 0x79E PUSH1 0x20 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7CA DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x805 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7E9 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x867 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x888 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP2 EXTCODEHASH OR SWAP14 0xDD PUSH8 0xDC31F5E072C57F2A DUP5 SWAP13 0xA7 MUL 0xC7 SDIV ADDMOD CALLER 0xC2 EXTCODEHASH PUSH2 0xBD65 0xFB EXTCODESIZE 0x21 0x4E PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1321:10416:2:-:0;;;1896:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1962:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1985:17:2;;;;:7;;:17;;;;;:::i;:::-;;1896:113;;1321:10416;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1321:10416:2;;;-1:-1:-1;1321:10416:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:16;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:16;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:16;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:16:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:16;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;1321:10416:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_688": {
									"entryPoint": null,
									"id": 688,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_666": {
									"entryPoint": 1038,
									"id": 666,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_677": {
									"entryPoint": null,
									"id": 677,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_1323": {
									"entryPoint": null,
									"id": 1323,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_493": {
									"entryPoint": 1330,
									"id": 493,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_281": {
									"entryPoint": null,
									"id": 281,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 600,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_242": {
									"entryPoint": null,
									"id": 242,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_218": {
									"entryPoint": null,
									"id": 218,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_416": {
									"entryPoint": 872,
									"id": 416,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_377": {
									"entryPoint": 797,
									"id": 377,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_198": {
									"entryPoint": 454,
									"id": 198,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_208": {
									"entryPoint": 857,
									"id": 208,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_228": {
									"entryPoint": null,
									"id": 228,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_350": {
									"entryPoint": 622,
									"id": 350,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_263": {
									"entryPoint": 1025,
									"id": 263,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5857:16",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:16"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:16",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:16"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:16"
															},
															"nodeType": "YulIf",
															"src": "111:70:16"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:16",
														"type": ""
													}
												],
												"src": "14:173:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:16"
															},
															"nodeType": "YulIf",
															"src": "272:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:16",
														"type": ""
													}
												],
												"src": "192:186:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:16"
															},
															"nodeType": "YulIf",
															"src": "480:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:16",
														"type": ""
													}
												],
												"src": "383:260:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:16"
															},
															"nodeType": "YulIf",
															"src": "762:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:16"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:16",
														"type": ""
													}
												],
												"src": "648:328:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:16"
															},
															"nodeType": "YulIf",
															"src": "1078:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:16",
														"type": ""
													}
												],
												"src": "981:254:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:92:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1345:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1357:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1368:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1345:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1387:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1412:6:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1405:6:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1405:14:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1398:6:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1398:22:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:41:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1380:41:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1304:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1315:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1326:4:16",
														"type": ""
													}
												],
												"src": "1240:187:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1553:476:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1563:12:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1573:2:16",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1567:2:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1591:9:16"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1602:2:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1584:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1584:21:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1614:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1634:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1628:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:13:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1618:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1661:9:16"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1672:2:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1657:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1657:18:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1677:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1650:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1650:34:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1693:10:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1702:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1697:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1762:90:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1791:9:16"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1802:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1787:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1787:17:16"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1806:2:16",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1783:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1783:26:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1825:6:16"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1833:1:16"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1821:3:16"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1821:14:16"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1837:2:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1817:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1817:23:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1811:5:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1811:30:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1776:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1776:66:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1776:66:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1723:1:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1726:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1720:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:13:16"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1734:19:16",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1736:15:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1745:1:16"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1748:2:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1741:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1741:10:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1736:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1716:3:16",
																"statements": []
															},
															"src": "1712:140:16"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1886:66:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1915:9:16"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1926:6:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1911:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1911:22:16"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1935:2:16",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1907:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1907:31:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1940:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1900:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1900:42:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1900:42:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1867:1:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1870:6:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1864:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:13:16"
															},
															"nodeType": "YulIf",
															"src": "1861:91:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1961:62:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1977:9:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1996:6:16"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2004:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1992:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1992:15:16"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2013:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2009:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2009:7:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1988:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1988:29:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1973:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:45:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2020:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1969:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1969:54:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1961:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1522:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1533:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1544:4:16",
														"type": ""
													}
												],
												"src": "1432:597:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2208:225:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2225:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2218:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2218:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2218:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2259:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2270:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2255:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2275:2:16",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2248:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2248:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2298:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2309:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:18:16"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2314:34:16",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2287:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2287:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2287:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2369:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2380:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2365:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2365:18:16"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2385:5:16",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2358:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2358:33:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2400:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2412:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2423:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2408:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2408:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2400:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2199:4:16",
														"type": ""
													}
												],
												"src": "2034:399:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2612:224:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2629:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2640:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2622:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2622:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2622:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2663:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2674:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2659:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2659:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2679:2:16",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2652:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2702:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2713:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2698:18:16"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2718:34:16",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2691:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2691:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2691:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2773:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2784:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2769:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2769:18:16"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2789:4:16",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:32:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2762:32:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2803:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2815:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2826:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2811:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2811:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2803:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2589:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2603:4:16",
														"type": ""
													}
												],
												"src": "2438:398:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3015:228:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3032:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3043:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3025:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3025:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3025:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3066:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3077:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3062:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3062:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3082:2:16",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3055:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3055:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3116:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3101:18:16"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3121:34:16",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3094:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3094:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3176:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3187:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3172:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3172:18:16"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3192:8:16",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3165:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3165:36:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3165:36:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3210:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3222:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3233:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3218:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3218:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3210:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2992:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3006:4:16",
														"type": ""
													}
												],
												"src": "2841:402:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3422:230:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3439:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3432:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3432:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3473:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3484:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3469:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3469:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3489:2:16",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3462:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3462:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3462:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3512:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3523:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3508:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3508:18:16"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3528:34:16",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3501:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3501:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3501:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3583:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3594:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3579:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3579:18:16"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3599:10:16",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3572:38:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3572:38:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3619:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3631:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3642:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3627:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3619:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3399:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3413:4:16",
														"type": ""
													}
												],
												"src": "3248:404:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3831:227:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3848:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3859:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3841:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3841:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3882:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3893:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3878:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3878:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3898:2:16",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3871:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3871:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3921:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3932:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3917:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3917:18:16"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3937:34:16",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3910:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3910:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3910:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3992:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4003:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3988:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3988:18:16"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4008:7:16",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3981:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:35:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3981:35:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4025:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4037:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4048:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4033:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4033:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4025:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3808:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3822:4:16",
														"type": ""
													}
												],
												"src": "3657:401:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4237:226:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4254:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4265:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4247:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4247:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4247:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4288:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4299:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4284:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4284:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4304:2:16",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4277:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4277:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4277:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4327:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4338:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4323:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4323:18:16"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4343:34:16",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4316:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4316:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4398:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4409:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4394:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4394:18:16"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4414:6:16",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4387:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4387:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4387:34:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4430:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4442:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4453:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4438:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4438:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4430:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4214:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4228:4:16",
														"type": ""
													}
												],
												"src": "4063:400:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4642:227:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4659:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4670:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4652:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4652:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4652:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4693:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4704:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4689:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4689:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4709:2:16",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4682:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4682:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4682:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4732:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4743:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4728:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4728:18:16"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4748:34:16",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4721:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4721:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4721:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4803:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4814:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4799:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4799:18:16"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4819:7:16",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4792:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4792:35:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4792:35:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4836:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4848:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4859:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4844:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4844:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4836:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4619:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4633:4:16",
														"type": ""
													}
												],
												"src": "4468:401:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4975:76:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4985:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4997:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5008:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4993:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4993:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4985:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5027:9:16"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5038:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5020:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5020:25:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5020:25:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4944:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4955:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4966:4:16",
														"type": ""
													}
												],
												"src": "4874:177:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5153:87:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5163:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5175:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5186:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5171:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5171:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5163:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5205:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5220:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5228:4:16",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5216:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5216:17:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5198:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5198:36:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5198:36:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5122:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5133:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5144:4:16",
														"type": ""
													}
												],
												"src": "5056:184:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5293:177:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5328:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5349:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5356:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5361:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5352:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5352:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5342:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5342:31:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5342:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5393:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5396:4:16",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5386:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5386:15:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5386:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5421:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5424:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5414:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5414:15:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5414:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5309:1:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5316:1:16"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5312:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5312:6:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5306:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5306:13:16"
															},
															"nodeType": "YulIf",
															"src": "5303:136:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5448:16:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5459:1:16"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5462:1:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5455:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5455:9:16"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5448:3:16"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5276:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5279:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5285:3:16",
														"type": ""
													}
												],
												"src": "5245:225:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5530:325:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5540:22:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5554:1:16",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5557:4:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5550:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5550:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5540:6:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5571:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5601:4:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5607:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5597:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5597:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5575:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5648:31:16",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5650:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5664:6:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5672:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5660:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5660:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5650:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5628:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5621:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5621:26:16"
															},
															"nodeType": "YulIf",
															"src": "5618:61:16"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5738:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5759:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5766:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5771:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5762:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5762:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5752:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5752:31:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5752:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5803:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5806:4:16",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5796:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5796:15:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5796:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5831:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5834:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5824:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5824:15:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5824:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5694:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5717:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5725:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5714:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5714:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5691:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5691:38:16"
															},
															"nodeType": "YulIf",
															"src": "5688:161:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5510:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5519:6:16",
														"type": ""
													}
												],
												"src": "5475:380:16"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107d8565b60405180910390f35b6100df6100da3660046107ae565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610772565b61026e565b604051601281526020016100c3565b6100df6101313660046107ae565b61031d565b6100f361014436600461071d565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df6101753660046107ae565b610368565b6100df6101883660046107ae565b610401565b6100f361019b36600461073f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610853565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610853565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161026591859061035490869061082d565b61040e565b6060600480546101d590610853565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a790849061082d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b80356001600160a01b038116811461071857600080fd5b919050565b60006020828403121561072f57600080fd5b61073882610701565b9392505050565b6000806040838503121561075257600080fd5b61075b83610701565b915061076960208401610701565b90509250929050565b60008060006060848603121561078757600080fd5b61079084610701565b925061079e60208501610701565b9150604084013590509250925092565b600080604083850312156107c157600080fd5b6107ca83610701565b946020939093013593505050565b600060208083528351808285015260005b81811015610805578581018301518582016040015282016107e9565b81811115610817576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561084e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061086757607f821691505b6020821081141561088857634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212200d913f179ddd67dc31f5e072c57f2a849ca702c7050833c23f61bd65fb3b214e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x73F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x82D JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x738 DUP3 PUSH2 0x701 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75B DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH2 0x769 PUSH1 0x20 DUP5 ADD PUSH2 0x701 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x790 DUP5 PUSH2 0x701 JUMP JUMPDEST SWAP3 POP PUSH2 0x79E PUSH1 0x20 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7CA DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x805 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7E9 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x867 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x888 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP2 EXTCODEHASH OR SWAP14 0xDD PUSH8 0xDC31F5E072C57F2A DUP5 SWAP13 0xA7 MUL 0xC7 SDIV ADDMOD CALLER 0xC2 EXTCODEHASH PUSH2 0xBD65 0xFB EXTCODESIZE 0x21 0x4E PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1321:10416:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4171:166;;;;;;:::i;:::-;;:::i;:::-;;;1405:14:16;;1398:22;1380:41;;1368:2;1353:18;4171:166:2;1240:187:16;3162:106:2;3249:12;;3162:106;;;5020:25:16;;;5008:2;4993:18;3162:106:2;4874:177:16;4804:478:2;;;;;;:::i;:::-;;:::i;3011:91::-;;;3093:2;5198:36:16;;5186:2;5171:18;3011:91:2;5056:184:16;5677:212:2;;;;;;:::i;:::-;;:::i;3326:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3426:18:2;3400:7;3426:18;;;;;;;;;;;;3326:125;2285:102;;;:::i;6376:405::-;;;;;;:::i;:::-;;:::i;3654:172::-;;;;;;:::i;:::-;;:::i;3884:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3999:18:2;;;3973:7;3999:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3884:149;2074:98;2128:13;2160:5;2153:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98;:::o;4171:166::-;4254:4;4270:39;665:10:7;4293:7:2;4302:6;4270:8;:39::i;:::-;-1:-1:-1;4326:4:2;4171:166;;;;:::o;4804:478::-;4940:4;4956:36;4966:6;4974:9;4985:6;4956:9;:36::i;:::-;-1:-1:-1;;;;;5030:19:2;;5003:24;5030:19;;;:11;:19;;;;;;;;665:10:7;5030:33:2;;;;;;;;5081:26;;;;5073:79;;;;-1:-1:-1;;;5073:79:2;;3450:2:16;5073:79:2;;;3432:21:16;3489:2;3469:18;;;3462:30;3528:34;3508:18;;;3501:62;-1:-1:-1;;;3579:18:16;;;3572:38;3627:19;;5073:79:2;;;;;;;;;5186:57;5195:6;665:10:7;5236:6:2;5217:16;:25;5186:8;:57::i;:::-;-1:-1:-1;5271:4:2;;4804:478;-1:-1:-1;;;;4804:478:2:o;5677:212::-;665:10:7;5765:4:2;5813:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5813:34:2;;;;;;;;;;5765:4;;5781:80;;5804:7;;5813:47;;5850:10;;5813:47;:::i;:::-;5781:8;:80::i;2285:102::-;2341:13;2373:7;2366:14;;;;;:::i;6376:405::-;665:10:7;6469:4:2;6512:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6512:34:2;;;;;;;;;;6564:35;;;;6556:85;;;;-1:-1:-1;;;6556:85:2;;4670:2:16;6556:85:2;;;4652:21:16;4709:2;4689:18;;;4682:30;4748:34;4728:18;;;4721:62;-1:-1:-1;;;4799:18:16;;;4792:35;4844:19;;6556:85:2;4468:401:16;6556:85:2;6675:67;665:10:7;6698:7:2;6726:15;6707:16;:34;6675:8;:67::i;:::-;-1:-1:-1;6770:4:2;;6376:405;-1:-1:-1;;;6376:405:2:o;3654:172::-;3740:4;3756:42;665:10:7;3780:9:2;3791:6;3756:9;:42::i;9952:370::-;-1:-1:-1;;;;;10083:19:2;;10075:68;;;;-1:-1:-1;;;10075:68:2;;4265:2:16;10075:68:2;;;4247:21:16;4304:2;4284:18;;;4277:30;4343:34;4323:18;;;4316:62;-1:-1:-1;;;4394:18:16;;;4387:34;4438:19;;10075:68:2;4063:400:16;10075:68:2;-1:-1:-1;;;;;10161:21:2;;10153:68;;;;-1:-1:-1;;;10153:68:2;;2640:2:16;10153:68:2;;;2622:21:16;2679:2;2659:18;;;2652:30;2718:34;2698:18;;;2691:62;-1:-1:-1;;;2769:18:16;;;2762:32;2811:19;;10153:68:2;2438:398:16;10153:68:2;-1:-1:-1;;;;;10232:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10283:32;;5020:25:16;;;10283:32:2;;4993:18:16;10283:32:2;;;;;;;9952:370;;;:::o;7255:713::-;-1:-1:-1;;;;;7390:20:2;;7382:70;;;;-1:-1:-1;;;7382:70:2;;3859:2:16;7382:70:2;;;3841:21:16;3898:2;3878:18;;;3871:30;3937:34;3917:18;;;3910:62;-1:-1:-1;;;3988:18:16;;;3981:35;4033:19;;7382:70:2;3657:401:16;7382:70:2;-1:-1:-1;;;;;7470:23:2;;7462:71;;;;-1:-1:-1;;;7462:71:2;;2236:2:16;7462:71:2;;;2218:21:16;2275:2;2255:18;;;2248:30;2314:34;2294:18;;;2287:62;-1:-1:-1;;;2365:18:16;;;2358:33;2408:19;;7462:71:2;2034:399:16;7462:71:2;-1:-1:-1;;;;;7626:17:2;;7602:21;7626:17;;;;;;;;;;;7661:23;;;;7653:74;;;;-1:-1:-1;;;7653:74:2;;3043:2:16;7653:74:2;;;3025:21:16;3082:2;3062:18;;;3055:30;3121:34;3101:18;;;3094:62;-1:-1:-1;;;3172:18:16;;;3165:36;3218:19;;7653:74:2;2841:402:16;7653:74:2;-1:-1:-1;;;;;7761:17:2;;;:9;:17;;;;;;;;;;;7781:22;;;7761:42;;7823:20;;;;;;;;:30;;7797:6;;7761:9;7823:30;;7797:6;;7823:30;:::i;:::-;;;;;;;;7886:9;-1:-1:-1;;;;;7869:35:2;7878:6;-1:-1:-1;;;;;7869:35:2;;7897:6;7869:35;;;;5020:25:16;;5008:2;4993:18;;4874:177;7869:35:2;;;;;;;;7372:596;7255:713;;;:::o;14:173:16:-;82:20;;-1:-1:-1;;;;;131:31:16;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:16:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:16:o;1432:597::-;1544:4;1573:2;1602;1591:9;1584:21;1634:6;1628:13;1677:6;1672:2;1661:9;1657:18;1650:34;1702:1;1712:140;1726:6;1723:1;1720:13;1712:140;;;1821:14;;;1817:23;;1811:30;1787:17;;;1806:2;1783:26;1776:66;1741:10;;1712:140;;;1870:6;1867:1;1864:13;1861:91;;;1940:1;1935:2;1926:6;1915:9;1911:22;1907:31;1900:42;1861:91;-1:-1:-1;2013:2:16;1992:15;-1:-1:-1;;1988:29:16;1973:45;;;;2020:2;1969:54;;1432:597;-1:-1:-1;;;1432:597:16:o;5245:225::-;5285:3;5316:1;5312:6;5309:1;5306:13;5303:136;;;5361:10;5356:3;5352:20;5349:1;5342:31;5396:4;5393:1;5386:15;5424:4;5421:1;5414:15;5303:136;-1:-1:-1;5455:9:16;;5245:225::o;5475:380::-;5554:1;5550:12;;;;5597;;;5618:61;;5672:4;5664:6;5660:17;5650:27;;5618:61;5725:2;5717:6;5714:14;5694:18;5691:38;5688:161;;;5771:10;5766:3;5762:20;5759:1;5752:31;5806:4;5803:1;5796:15;5834:4;5831:1;5824:15;5688:161;;5475:380;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "448800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24619",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "26954",
								"increaseAllowance(address,uint256)": "26934",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51253",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 88,
									"end": 143,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 88,
									"end": 143,
									"name": "tag",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 221,
									"end": 257,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 221,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "26"
								},
								{
									"begin": 221,
									"end": 257,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 16,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 16,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 16,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 404,
									"end": 476,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 404,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "29"
								},
								{
									"begin": 404,
									"end": 476,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 16,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 16,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 566,
									"end": 619,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 566,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 566,
									"end": 619,
									"name": "tag",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 16,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 789,
									"end": 869,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 789,
									"end": 869,
									"name": "tag",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 16
								},
								{
									"begin": 14,
									"end": 899,
									"name": "SWAP6",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMP",
									"source": 16,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "tag",
									"source": 16,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "tag",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 16,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "tag",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 16,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMP",
									"source": 16,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "tag",
									"source": 16,
									"value": "11"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "PUSH",
									"source": 16,
									"value": "7F"
								},
								{
									"begin": 1660,
									"end": 1666,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1656,
									"end": 1673,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "tag",
									"source": 16,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1687,
									"end": 1725,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1767,
									"end": 1777,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B71"
								},
								{
									"begin": 1762,
									"end": 1765,
									"name": "PUSH",
									"source": 16,
									"value": "E0"
								},
								{
									"begin": 1758,
									"end": 1778,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1779,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1802,
									"end": 1806,
									"name": "PUSH",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 1799,
									"end": 1800,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 1792,
									"end": 1807,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1830,
									"end": 1834,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 1827,
									"end": 1828,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1820,
									"end": 1835,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "tag",
									"source": 16,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMP",
									"source": 16,
									"value": "[out]"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1917,
									"end": 1927,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B71"
								},
								{
									"begin": 1912,
									"end": 1915,
									"name": "PUSH",
									"source": 16,
									"value": "E0"
								},
								{
									"begin": 1908,
									"end": 1928,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1898,
									"end": 1929,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1948,
									"end": 1952,
									"name": "PUSH",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 1938,
									"end": 1953,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1972,
									"end": 1976,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1977,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 16,
									"value": "21"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200d913f179ddd67dc31f5e072c57f2a849ca702c7050833c23f61bd65fb3b214e64736f6c63430008070033",
									".code": [
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1398,
											"end": 1420,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1368,
											"end": 1370,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1240,
											"end": 1427,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3249,
											"end": 3261,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3249,
											"end": 3261,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5008,
											"end": 5010,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 4874,
											"end": 5051,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 5198,
											"end": 5234,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5198,
											"end": 5234,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5186,
											"end": 5188,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5171,
											"end": 5189,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 5056,
											"end": 5240,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3973,
											"end": 3980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4010,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2160,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4254,
											"end": 4258,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4270,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4293,
											"end": 4300,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4308,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4270,
											"end": 4309,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4270,
											"end": 4309,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4270,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4326,
											"end": 4330,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4940,
											"end": 4944,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4956,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4966,
											"end": 4972,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4974,
											"end": 4983,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 4991,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4956,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4956,
											"end": 4992,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4956,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4956,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5027,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5041,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5081,
											"end": 5107,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5081,
											"end": 5107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5081,
											"end": 5107,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5081,
											"end": 5107,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3452,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3432,
											"end": 3453,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3489,
											"end": 3491,
											"name": "PUSH",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3462,
											"end": 3492,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "PUSH",
											"source": 16,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3627,
											"end": 3646,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 3627,
											"end": 3646,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5186,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 5195,
											"end": 5201,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5236,
											"end": 5242,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5217,
											"end": 5233,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5217,
											"end": 5242,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5186,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5186,
											"end": 5243,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5186,
											"end": 5243,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 5186,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5271,
											"end": 5275,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5271,
											"end": 5275,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5765,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5824,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5765,
											"end": 5769,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5765,
											"end": 5769,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5781,
											"end": 5861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5781,
											"end": 5861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5804,
											"end": 5811,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5804,
											"end": 5811,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5850,
											"end": 5860,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5850,
											"end": 5860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5781,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5781,
											"end": 5861,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2341,
											"end": 2354,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2373,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6469,
											"end": 6473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6523,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6564,
											"end": 6599,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6564,
											"end": 6599,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6564,
											"end": 6599,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6564,
											"end": 6599,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4672,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4652,
											"end": 4673,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4709,
											"end": 4711,
											"name": "PUSH",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4682,
											"end": 4712,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4748,
											"end": 4782,
											"name": "PUSH",
											"source": 16,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4721,
											"end": 4783,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4799,
											"end": 4817,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 4799,
											"end": 4817,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4799,
											"end": 4817,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4792,
											"end": 4827,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4844,
											"end": 4863,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 4844,
											"end": 4863,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4468,
											"end": 4869,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6675,
											"end": 6742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6698,
											"end": 6705,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6726,
											"end": 6741,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6723,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6741,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6675,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 6675,
											"end": 6742,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6675,
											"end": 6742,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 6675,
											"end": 6742,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6770,
											"end": 6774,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6770,
											"end": 6774,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3744,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3756,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3789,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3791,
											"end": 3797,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3756,
											"end": 3798,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10083,
											"end": 10102,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10083,
											"end": 10102,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4267,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4268,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4304,
											"end": 4306,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4277,
											"end": 4307,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4343,
											"end": 4377,
											"name": "PUSH",
											"source": 16,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4316,
											"end": 4378,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4387,
											"end": 4421,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4438,
											"end": 4457,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 4438,
											"end": 4457,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4063,
											"end": 4463,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10161,
											"end": 10182,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10161,
											"end": 10182,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2640,
											"end": 2642,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2622,
											"end": 2643,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2679,
											"end": 2681,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2652,
											"end": 2682,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2718,
											"end": 2752,
											"name": "PUSH",
											"source": 16,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2691,
											"end": 2753,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2762,
											"end": 2794,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2438,
											"end": 2836,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10243,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10268,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10268,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7390,
											"end": 7410,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7390,
											"end": 7410,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3859,
											"end": 3861,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3841,
											"end": 3862,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3900,
											"name": "PUSH",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3871,
											"end": 3901,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3937,
											"end": 3971,
											"name": "PUSH",
											"source": 16,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3910,
											"end": 3972,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3981,
											"end": 4016,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4033,
											"end": 4052,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 4033,
											"end": 4052,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3657,
											"end": 4058,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7470,
											"end": 7493,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7493,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2236,
											"end": 2238,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2239,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2275,
											"end": 2277,
											"name": "PUSH",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2314,
											"end": 2348,
											"name": "PUSH",
											"source": 16,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2349,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2358,
											"end": 2391,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2034,
											"end": 2433,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7602,
											"end": 7623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7661,
											"end": 7684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7661,
											"end": 7684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7661,
											"end": 7684,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7661,
											"end": 7684,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3043,
											"end": 3045,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3082,
											"end": 3084,
											"name": "PUSH",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3055,
											"end": 3085,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3121,
											"end": 3155,
											"name": "PUSH",
											"source": 16,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3165,
											"end": 3201,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2841,
											"end": 3243,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7770,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7781,
											"end": 7803,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7781,
											"end": 7803,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7781,
											"end": 7803,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7803,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7803,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7797,
											"end": 7803,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7797,
											"end": 7803,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7797,
											"end": 7803,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7797,
											"end": 7803,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7886,
											"end": 7895,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7878,
											"end": 7884,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7897,
											"end": 7903,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5008,
											"end": 5010,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4874,
											"end": 5051,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 16,
											"value": "138"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "142"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 16,
											"value": "142"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "143"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "138"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 16,
											"value": "143"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "145"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 16,
											"value": "145"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "146"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "138"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 16,
											"value": "146"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "147"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "138"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 16,
											"value": "147"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "149"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 16,
											"value": "149"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "150"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "138"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 16,
											"value": "150"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "151"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "138"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 16,
											"value": "151"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "153"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "tag",
											"source": 16,
											"value": "153"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "154"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "138"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 16,
											"value": "154"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "tag",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1602,
											"end": 1604,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1591,
											"end": 1600,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1584,
											"end": 1605,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1634,
											"end": 1640,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1628,
											"end": 1641,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1661,
											"end": 1670,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 16,
											"value": "157"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "159"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1811,
											"end": 1841,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1783,
											"end": 1809,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1776,
											"end": 1842,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "157"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 16,
											"value": "159"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1870,
											"end": 1876,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "160"
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1937,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1915,
											"end": 1924,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 1911,
											"end": 1933,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1907,
											"end": 1938,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1900,
											"end": 1942,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "tag",
											"source": 16,
											"value": "160"
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 1992,
											"end": 2007,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1988,
											"end": 2017,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2020,
											"end": 2022,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 5245,
											"end": 5470,
											"name": "tag",
											"source": 16,
											"value": "91"
										},
										{
											"begin": 5245,
											"end": 5470,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5285,
											"end": 5288,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5316,
											"end": 5317,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5318,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 5309,
											"end": 5310,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5306,
											"end": 5319,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "171"
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5361,
											"end": 5371,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 5356,
											"end": 5359,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 5352,
											"end": 5372,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5350,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5342,
											"end": 5373,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5396,
											"end": 5400,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 5393,
											"end": 5394,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5386,
											"end": 5401,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5424,
											"end": 5428,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 5421,
											"end": 5422,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5414,
											"end": 5429,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "tag",
											"source": 16,
											"value": "171"
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5455,
											"end": 5464,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5455,
											"end": 5464,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5245,
											"end": 5470,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "tag",
											"source": 16,
											"value": "65"
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5554,
											"end": 5555,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "173"
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5672,
											"end": 5676,
											"name": "PUSH",
											"source": 16,
											"value": "7F"
										},
										{
											"begin": 5664,
											"end": 5670,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5660,
											"end": 5677,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5650,
											"end": 5677,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5650,
											"end": 5677,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "tag",
											"source": 16,
											"value": "173"
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5725,
											"end": 5727,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5717,
											"end": 5723,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5714,
											"end": 5728,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5691,
											"end": 5729,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "174"
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5771,
											"end": 5781,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 5766,
											"end": 5769,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 5762,
											"end": 5782,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 5759,
											"end": 5760,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5752,
											"end": 5783,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5806,
											"end": 5810,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 5803,
											"end": 5804,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5796,
											"end": 5811,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5834,
											"end": 5838,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 5831,
											"end": 5832,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5824,
											"end": 5839,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "tag",
											"source": 16,
											"value": "174"
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x418cfe64226a974419f8ab7287ad4bb413156a4d7af8ab5d9bcaa5678d1a2f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f65118c99d5d6cfe602720418b8551c2da6c3de650e61c5231b0be4396aae0d\",\"dweb:/ipfs/QmdLmkRHJhEifzzDjF44MHXcQx2SXc5EzhpHzN2z1vUq8H\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":578:3848  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":578:3848  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122037975c4818e57d374f1f5a87f87c3be4d7f049ec3b598b2f86d22eedac4f109b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122037975c4818e57d374f1f5a87f87c3be4d7f049ec3b598b2f86d22eedac4f109b64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP8 0x5C BASEFEE XOR 0xE5 PUSH30 0x374F1F5A87F87C3BE4D7F049EC3B598B2F86D22EEDAC4F109B64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "578:3270:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;578:3270:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122037975c4818e57d374f1f5a87f87c3be4d7f049ec3b598b2f86d22eedac4f109b64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP8 0x5C BASEFEE XOR 0xE5 PUSH30 0x374F1F5A87F87C3BE4D7F049EC3B598B2F86D22EEDAC4F109B64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "578:3270:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122037975c4818e57d374f1f5a87f87c3be4d7f049ec3b598b2f86d22eedac4f109b64736f6c63430008070033",
									".code": [
										{
											"begin": 578,
											"end": 3848,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 578,
											"end": 3848,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 578,
											"end": 3848,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 578,
											"end": 3848,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 578,
											"end": 3848,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 578,
											"end": 3848,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 578,
											"end": 3848,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 3848,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 578,
											"end": 3848,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d41d627f4ef9c6006df8c2d01227d3cf4a6c3359b5704c629d88933272eecadd\",\"dweb:/ipfs/QmYDo7MvMsvuDxuJZ9RC9zFganS3Tm8RYzSmBP5qSmJfuY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":126:7644  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":126:7644  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD DUP2 PUSH19 0x36EA324C6089A89723964C09C65C4EFCCDDEAD 0xD6 PUSH15 0xBB7AD707EE6A66D364736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "126:7518:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;126:7518:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD DUP2 PUSH19 0x36EA324C6089A89723964C09C65C4EFCCDDEAD 0xD6 PUSH15 0xBB7AD707EE6A66D364736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "126:7518:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033",
									".code": [
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":398:6699  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":398:6699  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0x5D PUSH31 0x1A311286B46BF95E8A0E977CEDB7964D5B8B00AE9F01D43F1D773788586473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "398:6301:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;398:6301:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0x5D PUSH31 0x1A311286B46BF95E8A0E977CEDB7964D5B8B00AE9F01D43F1D773788586473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "398:6301:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033",
									".code": [
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
				"IUniswapV2Pair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b\",\"urls\":[\"bzz-raw://85d5ad2dd23ee127f40907a12865a1e8cb5828814f6f2480285e1827dd72dedf\",\"dweb:/ipfs/QmayKQWJgWmr46DqWseADyUanmqxh662hPNdAkdHRjiQQH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BaseFlipPool.sol": {
				"BaseFlipPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_flipToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_stakeToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_rewardToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardSystem",
									"type": "address"
								},
								{
									"internalType": "contract IPancakeSwapMasterChef",
									"name": "_masterChef",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_masterEntertainer",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "masterEntertainer",
									"type": "address"
								}
							],
							"name": "SetMasterEntertainer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "SetMinAmountToSwap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "SetRewardSystem",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "router",
									"type": "address"
								}
							],
							"name": "SetRouter",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "flipToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "getDepositFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "getLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMasterChef",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minAmountToSwap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardSystem",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_masterEntertainer",
									"type": "address"
								}
							],
							"name": "setMasterEntertainer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_minAmount",
									"type": "uint256"
								}
							],
							"name": "setMinAmountToSwap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardSystem",
									"type": "address"
								}
							],
							"name": "setRewardSystem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "_router",
									"type": "address"
								}
							],
							"name": "setRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BaseFlipPool.sol\":754:9669  contract BaseFlipPool is Ownable, IMasterChefContractor {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BaseFlipPool.sol\":1598:1605  1 ether */\n  0x0de0b6b3a7640000\n    /* \"contracts/BaseFlipPool.sol\":1565:1605  uint256 public minAmountToSwap = 1 ether */\n  0x08\n  sstore\n    /* \"contracts/BaseFlipPool.sol\":2690:3618  constructor(IERC20 _flipToken, IERC20 _stakeToken, IERC20 _rewardToken, address _rewardSystem, IPancakeSwapMasterChef _masterChef, address _masterEntertainer) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":867:890  _setOwner(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":867:876  _setOwner */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":867:890  _setOwner(_msgSender()) */\n  jump\t// in\ntag_7:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/BaseFlipPool.sol\":2867:2900  address(_flipToken) != address(0) */\n  dup7\n  and\n    /* \"contracts/BaseFlipPool.sol\":2859:2937  require(address(_flipToken) != address(0), \"Flip Token can't be zero address\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1620:1622   */\n  0x20\n    /* \"contracts/BaseFlipPool.sol\":2859:2937  require(address(_flipToken) != address(0), \"Flip Token can't be zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1602:1623   */\n  dup2\n  swap1\n  mstore\n    /* \"#utility.yul\":1639:1657   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1632:1662   */\n  mstore\n    /* \"#utility.yul\":1698:1732   */\n  0x466c697020546f6b656e2063616e2774206265207a65726f2061646472657373\n    /* \"#utility.yul\":1678:1696   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1671:1733   */\n  mstore\n    /* \"#utility.yul\":1750:1768   */\n  0x64\n  add\n    /* \"contracts/BaseFlipPool.sol\":2859:2937  require(address(_flipToken) != address(0), \"Flip Token can't be zero address\") */\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/BaseFlipPool.sol\":2955:2989  address(_stakeToken) != address(0) */\n  dup6\n  and\n    /* \"contracts/BaseFlipPool.sol\":2947:3027  require(address(_stakeToken) != address(0), \"Stake Token can't be zero address\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1218:1220   */\n  0x20\n    /* \"contracts/BaseFlipPool.sol\":2947:3027  require(address(_stakeToken) != address(0), \"Stake Token can't be zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1200:1221   */\n  mstore\n    /* \"#utility.yul\":1257:1259   */\n  0x21\n    /* \"#utility.yul\":1237:1255   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1230:1260   */\n  mstore\n    /* \"#utility.yul\":1296:1330   */\n  0x5374616b6520546f6b656e2063616e2774206265207a65726f20616464726573\n    /* \"#utility.yul\":1276:1294   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1269:1331   */\n  mstore\n  shl(0xf8, 0x73)\n    /* \"#utility.yul\":1347:1365   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":1340:1371   */\n  mstore\n    /* \"#utility.yul\":1388:1407   */\n  0x84\n  add\n    /* \"contracts/BaseFlipPool.sol\":2947:3027  require(address(_stakeToken) != address(0), \"Stake Token can't be zero address\") */\n  tag_13\n    /* \"#utility.yul\":1016:1413   */\n  jump\n    /* \"contracts/BaseFlipPool.sol\":2947:3027  require(address(_stakeToken) != address(0), \"Stake Token can't be zero address\") */\ntag_15:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/BaseFlipPool.sol\":3045:3080  address(_rewardToken) != address(0) */\n  dup5\n  and\n    /* \"contracts/BaseFlipPool.sol\":3037:3119  require(address(_rewardToken) != address(0), \"Reward Token can't be zero address\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2390:2392   */\n  0x20\n    /* \"contracts/BaseFlipPool.sol\":3037:3119  require(address(_rewardToken) != address(0), \"Reward Token can't be zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2372:2393   */\n  mstore\n    /* \"#utility.yul\":2429:2431   */\n  0x22\n    /* \"#utility.yul\":2409:2427   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2402:2432   */\n  mstore\n    /* \"#utility.yul\":2468:2502   */\n  0x52657761726420546f6b656e2063616e2774206265207a65726f206164647265\n    /* \"#utility.yul\":2448:2466   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2441:2503   */\n  mstore\n  shl(0xf0, 0x7373)\n    /* \"#utility.yul\":2519:2537   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":2512:2544   */\n  mstore\n    /* \"#utility.yul\":2561:2580   */\n  0x84\n  add\n    /* \"contracts/BaseFlipPool.sol\":3037:3119  require(address(_rewardToken) != address(0), \"Reward Token can't be zero address\") */\n  tag_13\n    /* \"#utility.yul\":2188:2586   */\n  jump\n    /* \"contracts/BaseFlipPool.sol\":3037:3119  require(address(_rewardToken) != address(0), \"Reward Token can't be zero address\") */\ntag_18:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/BaseFlipPool.sol\":3137:3164  _rewardSystem != address(0) */\n  dup4\n  and\n    /* \"contracts/BaseFlipPool.sol\":3129:3204  require(_rewardSystem != address(0), \"Reward System can't be zero address\") */\n  tag_21\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2793:2795   */\n  0x20\n    /* \"contracts/BaseFlipPool.sol\":3129:3204  require(_rewardSystem != address(0), \"Reward System can't be zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2775:2796   */\n  mstore\n    /* \"#utility.yul\":2832:2834   */\n  0x23\n    /* \"#utility.yul\":2812:2830   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2805:2835   */\n  mstore\n    /* \"#utility.yul\":2871:2905   */\n  0x5265776172642053797374656d2063616e2774206265207a65726f2061646472\n    /* \"#utility.yul\":2851:2869   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2844:2906   */\n  mstore\n  shl(0xe8, 0x657373)\n    /* \"#utility.yul\":2922:2940   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":2915:2948   */\n  mstore\n    /* \"#utility.yul\":2965:2984   */\n  0x84\n  add\n    /* \"contracts/BaseFlipPool.sol\":3129:3204  require(_rewardSystem != address(0), \"Reward System can't be zero address\") */\n  tag_13\n    /* \"#utility.yul\":2591:2990   */\n  jump\n    /* \"contracts/BaseFlipPool.sol\":3129:3204  require(_rewardSystem != address(0), \"Reward System can't be zero address\") */\ntag_21:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/BaseFlipPool.sol\":3222:3256  address(_masterChef) != address(0) */\n  dup3\n  and\n    /* \"contracts/BaseFlipPool.sol\":3214:3294  require(address(_masterChef) != address(0), \"Master Chef can't be zero address\") */\n  tag_24\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":3197:3199   */\n  0x20\n    /* \"contracts/BaseFlipPool.sol\":3214:3294  require(address(_masterChef) != address(0), \"Master Chef can't be zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3179:3200   */\n  mstore\n    /* \"#utility.yul\":3236:3238   */\n  0x21\n    /* \"#utility.yul\":3216:3234   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":3209:3239   */\n  mstore\n    /* \"#utility.yul\":3275:3309   */\n  0x4d617374657220436865662063616e2774206265207a65726f20616464726573\n    /* \"#utility.yul\":3255:3273   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":3248:3310   */\n  mstore\n  shl(0xf8, 0x73)\n    /* \"#utility.yul\":3326:3344   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":3319:3350   */\n  mstore\n    /* \"#utility.yul\":3367:3386   */\n  0x84\n  add\n    /* \"contracts/BaseFlipPool.sol\":3214:3294  require(address(_masterChef) != address(0), \"Master Chef can't be zero address\") */\n  tag_13\n    /* \"#utility.yul\":2995:3392   */\n  jump\n    /* \"contracts/BaseFlipPool.sol\":3214:3294  require(address(_masterChef) != address(0), \"Master Chef can't be zero address\") */\ntag_24:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/BaseFlipPool.sol\":3312:3344  _masterEntertainer != address(0) */\n  dup2\n  and\n    /* \"contracts/BaseFlipPool.sol\":3304:3389  require(_masterEntertainer != address(0), \"Master Entertainer can't be zero address\") */\n  tag_27\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1981:1983   */\n  0x20\n    /* \"contracts/BaseFlipPool.sol\":3304:3389  require(_masterEntertainer != address(0), \"Master Entertainer can't be zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1963:1984   */\n  mstore\n    /* \"#utility.yul\":2020:2022   */\n  0x28\n    /* \"#utility.yul\":2000:2018   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1993:2023   */\n  mstore\n    /* \"#utility.yul\":2059:2093   */\n  0x4d617374657220456e7465727461696e65722063616e2774206265207a65726f\n    /* \"#utility.yul\":2039:2057   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2032:2094   */\n  mstore\n  shl(0xc0, 0x2061646472657373)\n    /* \"#utility.yul\":2110:2128   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":2103:2141   */\n  mstore\n    /* \"#utility.yul\":2158:2177   */\n  0x84\n  add\n    /* \"contracts/BaseFlipPool.sol\":3304:3389  require(_masterEntertainer != address(0), \"Master Entertainer can't be zero address\") */\n  tag_13\n    /* \"#utility.yul\":1779:2183   */\n  jump\n    /* \"contracts/BaseFlipPool.sol\":3304:3389  require(_masterEntertainer != address(0), \"Master Entertainer can't be zero address\") */\ntag_27:\n    /* \"contracts/BaseFlipPool.sol\":3399:3408  flipToken */\n  0x04\n    /* \"contracts/BaseFlipPool.sol\":3399:3421  flipToken = _flipToken */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap9\n  dup10\n  and\n  or\n  swap1\n  swap2\n  sstore\n  0x01\n    /* \"contracts/BaseFlipPool.sol\":3431:3455  masterChef = _masterChef */\n  dup1\n  sload\n  dup3\n  and\n  swap4\n  dup9\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/BaseFlipPool.sol\":3465:3482  masterEntertainer */\n  0x07\n    /* \"contracts/BaseFlipPool.sol\":3465:3503  masterEntertainer = _masterEntertainer */\n  dup1\n  sload\n  dup4\n  and\n  swap2\n  dup8\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  0x03\n    /* \"contracts/BaseFlipPool.sol\":3513:3537  stakeToken = _stakeToken */\n  dup1\n  sload\n  dup3\n  and\n  swap5\n  dup7\n  and\n  swap5\n  swap1\n  swap5\n  or\n  swap1\n  swap4\n  sstore\n    /* \"contracts/BaseFlipPool.sol\":3547:3558  rewardToken */\n  0x02\n    /* \"contracts/BaseFlipPool.sol\":3547:3573  rewardToken = _rewardToken */\n  dup1\n  sload\n  dup5\n  and\n  swap3\n  dup6\n  and\n  swap3\n  swap1\n  swap3\n  or\n  swap1\n  swap2\n  sstore\n  0x05\n    /* \"contracts/BaseFlipPool.sol\":3583:3611  rewardSystem = _rewardSystem */\n  dup1\n  sload\n  swap1\n  swap3\n  and\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/BaseFlipPool.sol\":754:9669  contract BaseFlipPool is Ownable, IMasterChefContractor {... */\n  jump(tag_33)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2041:2210  function _setOwner(address newOwner) private {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2096:2112  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2115:2121  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2131:2148  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2115:2121  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2096:2112  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2086:2210  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2041:2210  function _setOwner(address newOwner) private {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:1011   */\ntag_3:\n    /* \"#utility.yul\":202:208   */\n  0x00\n    /* \"#utility.yul\":210:216   */\n  dup1\n    /* \"#utility.yul\":218:224   */\n  0x00\n    /* \"#utility.yul\":226:232   */\n  dup1\n    /* \"#utility.yul\":234:240   */\n  0x00\n    /* \"#utility.yul\":242:248   */\n  dup1\n    /* \"#utility.yul\":295:298   */\n  0xc0\n    /* \"#utility.yul\":283:292   */\n  dup8\n    /* \"#utility.yul\":274:281   */\n  dup10\n    /* \"#utility.yul\":270:293   */\n  sub\n    /* \"#utility.yul\":266:299   */\n  slt\n    /* \"#utility.yul\":263:316   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":312:313   */\n  0x00\n    /* \"#utility.yul\":309:310   */\n  dup1\n    /* \"#utility.yul\":302:314   */\n  revert\n    /* \"#utility.yul\":263:316   */\ntag_35:\n    /* \"#utility.yul\":344:353   */\n  dup7\n    /* \"#utility.yul\":338:354   */\n  mload\n    /* \"#utility.yul\":363:394   */\n  tag_36\n    /* \"#utility.yul\":388:393   */\n  dup2\n    /* \"#utility.yul\":363:394   */\n  tag_37\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":463:465   */\n  0x20\n    /* \"#utility.yul\":448:466   */\n  dup9\n  add\n    /* \"#utility.yul\":442:467   */\n  mload\n    /* \"#utility.yul\":413:418   */\n  swap1\n  swap7\n  pop\n    /* \"#utility.yul\":476:509   */\n  tag_38\n    /* \"#utility.yul\":442:467   */\n  dup2\n    /* \"#utility.yul\":476:509   */\n  tag_37\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":580:582   */\n  0x40\n    /* \"#utility.yul\":565:583   */\n  dup9\n  add\n    /* \"#utility.yul\":559:584   */\n  mload\n    /* \"#utility.yul\":528:535   */\n  swap1\n  swap6\n  pop\n    /* \"#utility.yul\":593:626   */\n  tag_39\n    /* \"#utility.yul\":559:584   */\n  dup2\n    /* \"#utility.yul\":593:626   */\n  tag_37\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":697:699   */\n  0x60\n    /* \"#utility.yul\":682:700   */\n  dup9\n  add\n    /* \"#utility.yul\":676:701   */\n  mload\n    /* \"#utility.yul\":645:652   */\n  swap1\n  swap5\n  pop\n    /* \"#utility.yul\":710:743   */\n  tag_40\n    /* \"#utility.yul\":676:701   */\n  dup2\n    /* \"#utility.yul\":710:743   */\n  tag_37\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":814:817   */\n  0x80\n    /* \"#utility.yul\":799:818   */\n  dup9\n  add\n    /* \"#utility.yul\":793:819   */\n  mload\n    /* \"#utility.yul\":762:769   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":828:861   */\n  tag_41\n    /* \"#utility.yul\":793:819   */\n  dup2\n    /* \"#utility.yul\":828:861   */\n  tag_37\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":932:935   */\n  0xa0\n    /* \"#utility.yul\":917:936   */\n  dup9\n  add\n    /* \"#utility.yul\":911:937   */\n  mload\n    /* \"#utility.yul\":880:887   */\n  swap1\n  swap3\n  pop\n    /* \"#utility.yul\":946:979   */\n  tag_42\n    /* \"#utility.yul\":911:937   */\n  dup2\n    /* \"#utility.yul\":946:979   */\n  tag_37\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":998:1005   */\n  dup1\n    /* \"#utility.yul\":988:1005   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":14:1011   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  jump\t// out\n    /* \"#utility.yul\":3397:3528   */\ntag_37:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3472:3503   */\n  dup2\n  and\n    /* \"#utility.yul\":3462:3504   */\n  dup2\n  eq\n    /* \"#utility.yul\":3452:3522   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":3518:3519   */\n  0x00\n    /* \"#utility.yul\":3515:3516   */\n  dup1\n    /* \"#utility.yul\":3508:3520   */\n  revert\n    /* \"#utility.yul\":3452:3522   */\ntag_50:\n    /* \"#utility.yul\":3397:3528   */\n  pop\n  jump\t// out\ntag_33:\n    /* \"contracts/BaseFlipPool.sol\":754:9669  contract BaseFlipPool is Ownable, IMasterChefContractor {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BaseFlipPool.sol\":754:9669  contract BaseFlipPool is Ownable, IMasterChefContractor {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xc0d78655\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xc0d78655\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf72b2a4c\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x951583c3\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9fbe42e3\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb5644963\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x51ed6a30\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x51ed6a30\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x54613450\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5945365e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x73d38793\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x0ad58d2f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x13f43a57\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2b0a696d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2b3ea9e1\n      eq\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BaseFlipPool.sol\":6525:6888  function withdraw(uint256 _pid, uint256 _amount, address _sender) external override onlyMasterEntertainer {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"contracts/BaseFlipPool.sol\":1565:1605  uint256 public minAmountToSwap = 1 ether */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      sload(0x08)\n      dup2\n      jump\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":9314:9339   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":9302:9304   */\n      0x20\n        /* \"#utility.yul\":9287:9305   */\n      add\n        /* \"contracts/BaseFlipPool.sol\":1565:1605  uint256 public minAmountToSwap = 1 ether */\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BaseFlipPool.sol\":4745:4905  function setMinAmountToSwap(uint256 _minAmount) public onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_27\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n        /* \"contracts/BaseFlipPool.sol\":3946:4203  function setRewardSystem(address _rewardSystem) public onlyOwner{... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_27\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"contracts/BaseFlipPool.sol\":1335:1359  IERC20 public stakeToken */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      sload(0x03)\n      tag_47\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_47:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3257:3289   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3239:3290   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3227:3229   */\n      0x20\n        /* \"#utility.yul\":3212:3230   */\n      add\n        /* \"contracts/BaseFlipPool.sol\":1335:1359  IERC20 public stakeToken */\n      tag_34\n        /* \"#utility.yul\":3093:3296   */\n      jump\n        /* \"contracts/BaseFlipPool.sol\":4449:4735  function setMasterEntertainer(address _masterEntertainer) public onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_27\n      tag_53\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n        /* \"contracts/BaseFlipPool.sol\":1401:1424  IERC20 public flipToken */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      sload(0x04)\n      tag_47\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1605:1697  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_27\n      tag_61\n      jump\t// in\n        /* \"contracts/BaseFlipPool.sol\":1455:1482  address public rewardSystem */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      sload(0x05)\n      tag_47\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n      jump(tag_47)\n        /* \"contracts/BaseFlipPool.sol\":5354:5532  function getLiquidity(uint256 _pid) external override view returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_32\n      tag_73\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"contracts/BaseFlipPool.sol\":5542:5645  function getDepositFee(uint256 _pid) external override view returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_32\n      tag_78\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_78:\n      pop\n        /* \"contracts/BaseFlipPool.sol\":5611:5618  uint256 */\n      0x00\n      swap1\n        /* \"contracts/BaseFlipPool.sol\":5542:5645  function getDepositFee(uint256 _pid) external override view returns (uint256) {... */\n      jump\n        /* \"contracts/BaseFlipPool.sol\":5235:5344  function getMasterChef() external override view returns (address) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n        /* \"contracts/BaseFlipPool.sol\":5326:5336  masterChef */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/BaseFlipPool.sol\":5235:5344  function getMasterChef() external override view returns (address) {... */\n      jump(tag_47)\n        /* \"contracts/BaseFlipPool.sol\":4213:4439  function setRouter(IUniswapV2Router02 _router) public onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_27\n      tag_87\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n        /* \"contracts/BaseFlipPool.sol\":6014:6142  function deposit(uint256 _pid, uint256 _amount) external override onlyMasterEntertainer {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_27\n      tag_92\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1846:2035  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_27\n      tag_97\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n        /* \"contracts/BaseFlipPool.sol\":6903:7201  function emergencyWithdraw(uint256 _pid, uint256 _amount, address _sender) external override onlyMasterEntertainer {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_27\n      tag_101\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n        /* \"contracts/BaseFlipPool.sol\":1275:1300  IERC20 public rewardToken */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      sload(0x02)\n      tag_47\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/BaseFlipPool.sol\":6525:6888  function withdraw(uint256 _pid, uint256 _amount, address _sender) external override onlyMasterEntertainer {... */\n    tag_30:\n        /* \"contracts/BaseFlipPool.sol\":2546:2563  masterEntertainer */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"contracts/BaseFlipPool.sol\":2531:2541  msg.sender */\n      caller\n        /* \"contracts/BaseFlipPool.sol\":2523:2563  address(msg.sender) == masterEntertainer */\n      eq\n        /* \"contracts/BaseFlipPool.sol\":2515:2657  require(address(msg.sender) == masterEntertainer, \"ABOAT::onlyMasterEntertainer: Only the master entertainer is allowed to call this method!\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"contracts/BaseFlipPool.sol\":6644:6653  _pid == 0 */\n      dup3\n        /* \"contracts/BaseFlipPool.sol\":6641:6770  if(_pid == 0) {... */\n      tag_112\n      jumpi\n        /* \"contracts/BaseFlipPool.sol\":6669:6694  leaveStake(_pid, _amount) */\n      tag_113\n        /* \"contracts/BaseFlipPool.sol\":6680:6684  _pid */\n      dup4\n        /* \"contracts/BaseFlipPool.sol\":6686:6693  _amount */\n      dup4\n        /* \"contracts/BaseFlipPool.sol\":6669:6679  leaveStake */\n      tag_114\n        /* \"contracts/BaseFlipPool.sol\":6669:6694  leaveStake(_pid, _amount) */\n      jump\t// in\n    tag_113:\n        /* \"contracts/BaseFlipPool.sol\":6641:6770  if(_pid == 0) {... */\n      jump(tag_115)\n    tag_112:\n        /* \"contracts/BaseFlipPool.sol\":6725:6735  masterChef */\n      sload(0x01)\n        /* \"contracts/BaseFlipPool.sol\":6725:6759  masterChef.withdraw(_pid, _amount) */\n      mload(0x40)\n      shl(0xe4, 0x0441a3e7)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":10390:10415   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":10431:10449   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":10424:10458   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BaseFlipPool.sol\":6725:6735  masterChef */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/BaseFlipPool.sol\":6725:6744  masterChef.withdraw */\n      0x441a3e70\n      swap1\n        /* \"#utility.yul\":10363:10381   */\n      0x44\n      add\n        /* \"contracts/BaseFlipPool.sol\":6725:6759  masterChef.withdraw(_pid, _amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_120\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/BaseFlipPool.sol\":6641:6770  if(_pid == 0) {... */\n    tag_115:\n        /* \"contracts/BaseFlipPool.sol\":6782:6793  _amount > 0 */\n      dup2\n      iszero\n        /* \"contracts/BaseFlipPool.sol\":6779:6861  if(_amount > 0) {... */\n      tag_122\n      jumpi\n        /* \"contracts/BaseFlipPool.sol\":6809:6819  stakeToken */\n      sload(0x03)\n        /* \"contracts/BaseFlipPool.sol\":6809:6850  stakeToken.safeTransfer(_sender, _amount) */\n      tag_122\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BaseFlipPool.sol\":6809:6819  stakeToken */\n      and\n        /* \"contracts/BaseFlipPool.sol\":6833:6840  _sender */\n      dup3\n        /* \"contracts/BaseFlipPool.sol\":6842:6849  _amount */\n      dup5\n        /* \"contracts/BaseFlipPool.sol\":6809:6832  stakeToken.safeTransfer */\n      tag_123\n        /* \"contracts/BaseFlipPool.sol\":6809:6850  stakeToken.safeTransfer(_sender, _amount) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/BaseFlipPool.sol\":6870:6881  swapToken() */\n      tag_124\n        /* \"contracts/BaseFlipPool.sol\":6870:6879  swapToken */\n      tag_125\n        /* \"contracts/BaseFlipPool.sol\":6870:6881  swapToken() */\n      jump\t// in\n    tag_124:\n        /* \"contracts/BaseFlipPool.sol\":6525:6888  function withdraw(uint256 _pid, uint256 _amount, address _sender) external override onlyMasterEntertainer {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BaseFlipPool.sol\":4745:4905  function setMinAmountToSwap(uint256 _minAmount) public onlyOwner {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_132\n      jump\t// in\n    tag_130:\n        /* \"contracts/BaseFlipPool.sol\":4820:4835  minAmountToSwap */\n      0x08\n        /* \"contracts/BaseFlipPool.sol\":4820:4848  minAmountToSwap = _minAmount */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/BaseFlipPool.sol\":4863:4898  SetMinAmountToSwap(minAmountToSwap) */\n      mload(0x40)\n        /* \"#utility.yul\":9314:9339   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/BaseFlipPool.sol\":4863:4898  SetMinAmountToSwap(minAmountToSwap) */\n      0xa5ce75f7f52a2e09706441f9b9106cfff4275fd35963a11dad9c45b9ae50b288\n      swap1\n        /* \"#utility.yul\":9302:9304   */\n      0x20\n        /* \"#utility.yul\":9287:9305   */\n      add\n        /* \"contracts/BaseFlipPool.sol\":4863:4898  SetMinAmountToSwap(minAmountToSwap) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/BaseFlipPool.sol\":4745:4905  function setMinAmountToSwap(uint256 _minAmount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/BaseFlipPool.sol\":3946:4203  function setRewardSystem(address _rewardSystem) public onlyOwner{... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_132\n      jump\t// in\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BaseFlipPool.sol\":4028:4055  _rewardSystem != address(0) */\n      dup2\n      and\n        /* \"contracts/BaseFlipPool.sol\":4020:4102  require(_rewardSystem != address(0), \"Reward System can't be set to zero address\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8548:8550   */\n      0x20\n        /* \"contracts/BaseFlipPool.sol\":4020:4102  require(_rewardSystem != address(0), \"Reward System can't be set to zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8530:8551   */\n      mstore\n        /* \"#utility.yul\":8587:8589   */\n      0x2a\n        /* \"#utility.yul\":8567:8585   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8560:8590   */\n      mstore\n        /* \"#utility.yul\":8626:8660   */\n      0x5265776172642053797374656d2063616e27742062652073657420746f207a65\n        /* \"#utility.yul\":8606:8624   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8599:8661   */\n      mstore\n      shl(0xb0, 0x726f2061646472657373)\n        /* \"#utility.yul\":8677:8695   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8670:8710   */\n      mstore\n        /* \"#utility.yul\":8727:8746   */\n      0x84\n      add\n        /* \"contracts/BaseFlipPool.sol\":4020:4102  require(_rewardSystem != address(0), \"Reward System can't be set to zero address\") */\n      tag_109\n        /* \"#utility.yul\":8346:8752   */\n      jump\n        /* \"contracts/BaseFlipPool.sol\":4020:4102  require(_rewardSystem != address(0), \"Reward System can't be set to zero address\") */\n    tag_141:\n        /* \"contracts/BaseFlipPool.sol\":4112:4124  rewardSystem */\n      0x05\n        /* \"contracts/BaseFlipPool.sol\":4112:4140  rewardSystem = _rewardSystem */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/BaseFlipPool.sol\":4155:4196  SetRewardSystem(msg.sender, rewardSystem) */\n      mload(0x40)\n        /* \"contracts/BaseFlipPool.sol\":4171:4181  msg.sender */\n      caller\n      swap1\n        /* \"contracts/BaseFlipPool.sol\":4155:4196  SetRewardSystem(msg.sender, rewardSystem) */\n      0xbb802456c4e53c17a623585d276747174bcf39120266b12c32c0bb73df94acb6\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"contracts/BaseFlipPool.sol\":3946:4203  function setRewardSystem(address _rewardSystem) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"contracts/BaseFlipPool.sol\":4449:4735  function setMasterEntertainer(address _masterEntertainer) public onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_132\n      jump\t// in\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BaseFlipPool.sol\":4542:4574  _masterEntertainer != address(0) */\n      dup2\n      and\n        /* \"contracts/BaseFlipPool.sol\":4534:4626  require(_masterEntertainer != address(0), \"Master Entertainer can't be set to zero address\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7774:7776   */\n      0x20\n        /* \"contracts/BaseFlipPool.sol\":4534:4626  require(_masterEntertainer != address(0), \"Master Entertainer can't be set to zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7756:7777   */\n      mstore\n        /* \"#utility.yul\":7813:7815   */\n      0x2f\n        /* \"#utility.yul\":7793:7811   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7786:7816   */\n      mstore\n        /* \"#utility.yul\":7852:7886   */\n      0x4d617374657220456e7465727461696e65722063616e27742062652073657420\n        /* \"#utility.yul\":7832:7850   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7825:7887   */\n      mstore\n      shl(0x88, 0x746f207a65726f2061646472657373)\n        /* \"#utility.yul\":7903:7921   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7896:7941   */\n      mstore\n        /* \"#utility.yul\":7958:7977   */\n      0x84\n      add\n        /* \"contracts/BaseFlipPool.sol\":4534:4626  require(_masterEntertainer != address(0), \"Master Entertainer can't be set to zero address\") */\n      tag_109\n        /* \"#utility.yul\":7572:7983   */\n      jump\n        /* \"contracts/BaseFlipPool.sol\":4534:4626  require(_masterEntertainer != address(0), \"Master Entertainer can't be set to zero address\") */\n    tag_150:\n        /* \"contracts/BaseFlipPool.sol\":4636:4653  masterEntertainer */\n      0x07\n        /* \"contracts/BaseFlipPool.sol\":4636:4674  masterEntertainer = _masterEntertainer */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/BaseFlipPool.sol\":4689:4728  SetMasterEntertainer(masterEntertainer) */\n      mload(0x40)\n      0xbf63a13967243f035997ab7188eae733cdf9c8f25ea71389d3a0615450a07286\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/BaseFlipPool.sol\":4449:4735  function setMasterEntertainer(address _masterEntertainer) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1605:1697  function renounceOwnership() public virtual onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_132\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1669:1690  _setOwner(address(0)) */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1687:1688  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1669:1678  _setOwner */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1669:1690  _setOwner(address(0)) */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1605:1697  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/BaseFlipPool.sol\":5354:5532  function getLiquidity(uint256 _pid) external override view returns (uint256) {... */\n    tag_74:\n        /* \"contracts/BaseFlipPool.sol\":5462:5472  masterChef */\n      sload(0x01)\n        /* \"contracts/BaseFlipPool.sol\":5462:5502  masterChef.userInfo(_pid, address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x93f1a40b)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":9524:9549   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/BaseFlipPool.sol\":5496:5500  this */\n      address\n        /* \"#utility.yul\":9565:9583   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9558:9618   */\n      mstore\n        /* \"contracts/BaseFlipPool.sol\":5422:5429  uint256 */\n      0x00\n      swap2\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BaseFlipPool.sol\":5462:5472  masterChef */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/BaseFlipPool.sol\":5462:5481  masterChef.userInfo */\n      0x93f1a40b\n      swap1\n        /* \"#utility.yul\":9497:9515   */\n      0x44\n      add\n        /* \"contracts/BaseFlipPool.sol\":5462:5502  masterChef.userInfo(_pid, address(this)) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      pop\n        /* \"contracts/BaseFlipPool.sol\":5441:5502  (uint256 amount, ) = masterChef.userInfo(_pid, address(this)) */\n      swap4\n        /* \"contracts/BaseFlipPool.sol\":5354:5532  function getLiquidity(uint256 _pid) external override view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BaseFlipPool.sol\":4213:4439  function setRouter(IUniswapV2Router02 _router) public onlyOwner {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_132\n      jump\t// in\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BaseFlipPool.sol\":4295:4325  address(_router) != address(0) */\n      dup2\n      and\n        /* \"contracts/BaseFlipPool.sol\":4287:4365  require(address(_router) != address(0), \"Router can't be set to zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6599:6601   */\n      0x20\n        /* \"contracts/BaseFlipPool.sol\":4287:4365  require(address(_router) != address(0), \"Router can't be set to zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6581:6602   */\n      mstore\n        /* \"#utility.yul\":6638:6640   */\n      0x23\n        /* \"#utility.yul\":6618:6636   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6611:6641   */\n      mstore\n        /* \"#utility.yul\":6677:6711   */\n      0x526f757465722063616e27742062652073657420746f207a65726f2061646472\n        /* \"#utility.yul\":6657:6675   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6650:6712   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":6728:6746   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6721:6754   */\n      mstore\n        /* \"#utility.yul\":6771:6790   */\n      0x84\n      add\n        /* \"contracts/BaseFlipPool.sol\":4287:4365  require(address(_router) != address(0), \"Router can't be set to zero address\") */\n      tag_109\n        /* \"#utility.yul\":6397:6796   */\n      jump\n        /* \"contracts/BaseFlipPool.sol\":4287:4365  require(address(_router) != address(0), \"Router can't be set to zero address\") */\n    tag_178:\n        /* \"contracts/BaseFlipPool.sol\":4375:4381  router */\n      0x06\n        /* \"contracts/BaseFlipPool.sol\":4375:4391  router = _router */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/BaseFlipPool.sol\":4406:4432  SetRouter(address(router)) */\n      mload(0x40)\n      0x6de4326a8b9054d72d9dbab97d27bc4edffadee7d966f5af9cc4eafdaf8e5455\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/BaseFlipPool.sol\":4213:4439  function setRouter(IUniswapV2Router02 _router) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/BaseFlipPool.sol\":6014:6142  function deposit(uint256 _pid, uint256 _amount) external override onlyMasterEntertainer {... */\n    tag_94:\n        /* \"contracts/BaseFlipPool.sol\":2546:2563  masterEntertainer */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"contracts/BaseFlipPool.sol\":2531:2541  msg.sender */\n      caller\n        /* \"contracts/BaseFlipPool.sol\":2523:2563  address(msg.sender) == masterEntertainer */\n      eq\n        /* \"contracts/BaseFlipPool.sol\":2515:2657  require(address(msg.sender) == masterEntertainer, \"ABOAT::onlyMasterEntertainer: Only the master entertainer is allowed to call this method!\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_182:\n        /* \"contracts/BaseFlipPool.sol\":6112:6135  _deposit(_pid, _amount) */\n      tag_185\n        /* \"contracts/BaseFlipPool.sol\":6121:6125  _pid */\n      dup3\n        /* \"contracts/BaseFlipPool.sol\":6127:6134  _amount */\n      dup3\n        /* \"contracts/BaseFlipPool.sol\":6112:6120  _deposit */\n      tag_186\n        /* \"contracts/BaseFlipPool.sol\":6112:6135  _deposit(_pid, _amount) */\n      jump\t// in\n    tag_185:\n        /* \"contracts/BaseFlipPool.sol\":6014:6142  function deposit(uint256 _pid, uint256 _amount) external override onlyMasterEntertainer {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1846:2035  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_132\n      jump\t// in\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1934:1956  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1926:1999  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5785:5787   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1926:1999  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5767:5788   */\n      mstore\n        /* \"#utility.yul\":5824:5826   */\n      0x26\n        /* \"#utility.yul\":5804:5822   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5797:5827   */\n      mstore\n        /* \"#utility.yul\":5863:5897   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5843:5861   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5836:5898   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":5914:5932   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5907:5943   */\n      mstore\n        /* \"#utility.yul\":5960:5979   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1926:1999  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_109\n        /* \"#utility.yul\":5583:5985   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1926:1999  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_193:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2009:2028  _setOwner(newOwner) */\n      tag_196\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2019:2027  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2009:2018  _setOwner */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2009:2028  _setOwner(newOwner) */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1846:2035  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/BaseFlipPool.sol\":6903:7201  function emergencyWithdraw(uint256 _pid, uint256 _amount, address _sender) external override onlyMasterEntertainer {... */\n    tag_102:\n        /* \"contracts/BaseFlipPool.sol\":2546:2563  masterEntertainer */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"contracts/BaseFlipPool.sol\":2531:2541  msg.sender */\n      caller\n        /* \"contracts/BaseFlipPool.sol\":2523:2563  address(msg.sender) == masterEntertainer */\n      eq\n        /* \"contracts/BaseFlipPool.sol\":2515:2657  require(address(msg.sender) == masterEntertainer, \"ABOAT::onlyMasterEntertainer: Only the master entertainer is allowed to call this method!\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_198:\n        /* \"contracts/BaseFlipPool.sol\":7028:7038  masterChef */\n      sload(0x01)\n        /* \"contracts/BaseFlipPool.sol\":7028:7067  masterChef.withdrawWithoutRewards(_pid) */\n      mload(0x40)\n      shl(0xe1, 0x5459cf77)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":9314:9339   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BaseFlipPool.sol\":7028:7038  masterChef */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/BaseFlipPool.sol\":7028:7061  masterChef.withdrawWithoutRewards */\n      0xa8b39eee\n      swap1\n        /* \"#utility.yul\":9287:9305   */\n      0x24\n      add\n        /* \"contracts/BaseFlipPool.sol\":7028:7067  masterChef.withdrawWithoutRewards(_pid) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_202\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_202:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_204\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_204:\n      pop\n      pop\n        /* \"contracts/BaseFlipPool.sol\":7095:7105  stakeToken */\n      sload(0x03)\n        /* \"contracts/BaseFlipPool.sol\":7077:7124  safeTokenTransfer(stakeToken, _sender, _amount) */\n      tag_205\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BaseFlipPool.sol\":7095:7105  stakeToken */\n      and\n      swap1\n      pop\n        /* \"contracts/BaseFlipPool.sol\":7107:7114  _sender */\n      dup3\n        /* \"contracts/BaseFlipPool.sol\":7116:7123  _amount */\n      dup5\n        /* \"contracts/BaseFlipPool.sol\":7077:7094  safeTokenTransfer */\n      tag_206\n        /* \"contracts/BaseFlipPool.sol\":7077:7124  safeTokenTransfer(stakeToken, _sender, _amount) */\n      jump\t// in\n    tag_205:\n        /* \"contracts/BaseFlipPool.sol\":7149:7159  stakeToken */\n      sload(0x03)\n        /* \"contracts/BaseFlipPool.sol\":7149:7184  stakeToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/BaseFlipPool.sol\":7178:7182  this */\n      address\n        /* \"contracts/BaseFlipPool.sol\":7149:7184  stakeToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3239:3290   */\n      mstore\n        /* \"contracts/BaseFlipPool.sol\":7134:7185  _deposit(_pid, stakeToken.balanceOf(address(this))) */\n      tag_124\n      swap2\n        /* \"contracts/BaseFlipPool.sol\":7143:7147  _pid */\n      dup6\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BaseFlipPool.sol\":7149:7159  stakeToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/BaseFlipPool.sol\":7149:7169  stakeToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3212:3230   */\n      0x24\n      add\n        /* \"contracts/BaseFlipPool.sol\":7149:7184  stakeToken.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_209\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_209:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_211\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_211:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_212\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n        /* \"contracts/BaseFlipPool.sol\":7134:7142  _deposit */\n      tag_186\n        /* \"contracts/BaseFlipPool.sol\":7134:7185  _deposit(_pid, stakeToken.balanceOf(address(this))) */\n      jump\t// in\n        /* \"contracts/BaseFlipPool.sol\":7352:7463  function leaveStake(uint256 _pid, uint256 _amount) internal {... */\n    tag_114:\n        /* \"contracts/BaseFlipPool.sol\":7422:7432  masterChef */\n      sload(0x01)\n        /* \"contracts/BaseFlipPool.sol\":7422:7456  masterChef.withdraw(_pid, _amount) */\n      mload(0x40)\n      shl(0xe4, 0x0441a3e7)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":10390:10415   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":10431:10449   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":10424:10458   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BaseFlipPool.sol\":7422:7432  masterChef */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/BaseFlipPool.sol\":7422:7441  masterChef.withdraw */\n      0x441a3e70\n      swap1\n        /* \"#utility.yul\":10363:10381   */\n      0x44\n      add\n        /* \"contracts/BaseFlipPool.sol\":7422:7456  masterChef.withdraw(_pid, _amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_216\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_216:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_218\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_218:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/BaseFlipPool.sol\":7352:7463  function leaveStake(uint256 _pid, uint256 _amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":634:839  function safeTransfer(... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":773:831  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3873:3905   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":773:831  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3855:3906   */\n      mstore\n        /* \"#utility.yul\":3922:3940   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3915:3949   */\n      dup3\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":746:832  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_124\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":766:771  token */\n      dup5\n      swap1\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":796:819  token.transfer.selector */\n      swap1\n        /* \"#utility.yul\":3828:3846   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":773:831  abi.encodeWithSelector(token.transfer.selector, to, value) */\n    tag_221:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":746:765  _callOptionalReturn */\n      tag_223\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":746:832  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n        /* \"contracts/BaseFlipPool.sol\":7478:7913  function swapToken() internal {... */\n    tag_125:\n        /* \"contracts/BaseFlipPool.sol\":7542:7553  rewardToken */\n      sload(0x02)\n        /* \"contracts/BaseFlipPool.sol\":7542:7578  rewardToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/BaseFlipPool.sol\":7572:7576  this */\n      address\n        /* \"contracts/BaseFlipPool.sol\":7542:7578  rewardToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3239:3290   */\n      mstore\n        /* \"contracts/BaseFlipPool.sol\":7518:7539  uint256 balanceToSwap */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BaseFlipPool.sol\":7542:7553  rewardToken */\n      and\n      swap1\n        /* \"contracts/BaseFlipPool.sol\":7542:7563  rewardToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3212:3230   */\n      0x24\n      add\n        /* \"contracts/BaseFlipPool.sol\":7542:7578  rewardToken.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_226\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_226:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_228\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_228:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_229\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_229:\n        /* \"contracts/BaseFlipPool.sol\":7599:7605  router */\n      sload(0x06)\n        /* \"contracts/BaseFlipPool.sol\":7518:7578  uint256 balanceToSwap = rewardToken.balanceOf(address(this)) */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BaseFlipPool.sol\":7599:7605  router */\n      and\n        /* \"contracts/BaseFlipPool.sol\":7591:7620  address(router) == address(0) */\n      iszero\n        /* \"contracts/BaseFlipPool.sol\":7591:7641  address(router) == address(0) && balanceToSwap > 0 */\n      dup1\n      iszero\n      tag_230\n      jumpi\n      pop\n        /* \"contracts/BaseFlipPool.sol\":7640:7641  0 */\n      0x00\n        /* \"contracts/BaseFlipPool.sol\":7624:7637  balanceToSwap */\n      dup2\n        /* \"contracts/BaseFlipPool.sol\":7624:7641  balanceToSwap > 0 */\n      gt\n        /* \"contracts/BaseFlipPool.sol\":7591:7641  address(router) == address(0) && balanceToSwap > 0 */\n    tag_230:\n        /* \"contracts/BaseFlipPool.sol\":7588:7899  if(address(router) == address(0) && balanceToSwap > 0) {... */\n      iszero\n      tag_231\n      jumpi\n        /* \"contracts/BaseFlipPool.sol\":7675:7686  rewardToken */\n      sload(0x02)\n        /* \"contracts/BaseFlipPool.sol\":7657:7711  safeTokenTransfer(rewardToken, owner(), balanceToSwap) */\n      tag_196\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BaseFlipPool.sol\":7675:7686  rewardToken */\n      and\n        /* \"contracts/BaseFlipPool.sol\":7688:7695  owner() */\n      tag_233\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/BaseFlipPool.sol\":7688:7695  owner() */\n    tag_233:\n        /* \"contracts/BaseFlipPool.sol\":7697:7710  balanceToSwap */\n      dup4\n        /* \"contracts/BaseFlipPool.sol\":7657:7674  safeTokenTransfer */\n      tag_206\n        /* \"contracts/BaseFlipPool.sol\":7657:7711  safeTokenTransfer(rewardToken, owner(), balanceToSwap) */\n      jump\t// in\n        /* \"contracts/BaseFlipPool.sol\":7588:7899  if(address(router) == address(0) && balanceToSwap > 0) {... */\n    tag_231:\n        /* \"contracts/BaseFlipPool.sol\":7756:7771  minAmountToSwap */\n      sload(0x08)\n        /* \"contracts/BaseFlipPool.sol\":7739:7752  balanceToSwap */\n      dup2\n        /* \"contracts/BaseFlipPool.sol\":7739:7771  balanceToSwap >= minAmountToSwap */\n      lt\n        /* \"contracts/BaseFlipPool.sol\":7736:7899  if(balanceToSwap >= minAmountToSwap) {... */\n      tag_196\n      jumpi\n        /* \"contracts/BaseFlipPool.sol\":7819:7830  rewardToken */\n      sload(0x02)\n        /* \"contracts/BaseFlipPool.sol\":7787:7805  uint256 ethBalance */\n      0x00\n      swap1\n        /* \"contracts/BaseFlipPool.sol\":7808:7846  swapForEth(rewardToken, balanceToSwap) */\n      tag_236\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BaseFlipPool.sol\":7819:7830  rewardToken */\n      and\n        /* \"contracts/BaseFlipPool.sol\":7832:7845  balanceToSwap */\n      dup4\n        /* \"contracts/BaseFlipPool.sol\":7808:7818  swapForEth */\n      tag_237\n        /* \"contracts/BaseFlipPool.sol\":7808:7846  swapForEth(rewardToken, balanceToSwap) */\n      jump\t// in\n    tag_236:\n        /* \"contracts/BaseFlipPool.sol\":7787:7846  uint256 ethBalance = swapForEth(rewardToken, balanceToSwap) */\n      swap1\n      pop\n        /* \"contracts/BaseFlipPool.sol\":7860:7888  swapEthForTokens(ethBalance) */\n      tag_185\n        /* \"contracts/BaseFlipPool.sol\":7877:7887  ethBalance */\n      dup2\n        /* \"contracts/BaseFlipPool.sol\":7860:7876  swapEthForTokens */\n      tag_239\n        /* \"contracts/BaseFlipPool.sol\":7860:7888  swapEthForTokens(ethBalance) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2041:2210  function _setOwner(address newOwner) private {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2096:2112  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2115:2121  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2131:2148  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2115:2121  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2096:2112  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2086:2210  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2041:2210  function _setOwner(address newOwner) private {... */\n      pop\n      jump\t// out\n        /* \"contracts/BaseFlipPool.sol\":6152:6515  function _deposit(uint256 _pid, uint256 _amount) internal {... */\n    tag_186:\n        /* \"contracts/BaseFlipPool.sol\":6220:6230  stakeToken */\n      sload(0x03)\n        /* \"contracts/BaseFlipPool.sol\":6220:6292  stakeToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_243\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BaseFlipPool.sol\":6220:6230  stakeToken */\n      and\n        /* \"contracts/BaseFlipPool.sol\":6256:6266  msg.sender */\n      caller\n        /* \"contracts/BaseFlipPool.sol\":6277:6281  this */\n      address\n        /* \"contracts/BaseFlipPool.sol\":6284:6291  _amount */\n      dup5\n        /* \"contracts/BaseFlipPool.sol\":6220:6247  stakeToken.safeTransferFrom */\n      tag_244\n        /* \"contracts/BaseFlipPool.sol\":6220:6292  stakeToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      jump\t// in\n    tag_243:\n        /* \"contracts/BaseFlipPool.sol\":6302:6312  stakeToken */\n      sload(0x03)\n      0x01\n        /* \"contracts/BaseFlipPool.sol\":6329:6339  masterChef */\n      sload\n        /* \"contracts/BaseFlipPool.sol\":6302:6350  stakeToken.approve(address(masterChef), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BaseFlipPool.sol\":6329:6339  masterChef */\n      swap2\n      dup3\n      and\n        /* \"contracts/BaseFlipPool.sol\":6302:6350  stakeToken.approve(address(masterChef), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3855:3906   */\n      mstore\n        /* \"#utility.yul\":3922:3940   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3915:3949   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/BaseFlipPool.sol\":6302:6312  stakeToken */\n      swap2\n      and\n      swap1\n        /* \"contracts/BaseFlipPool.sol\":6302:6320  stakeToken.approve */\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":3828:3846   */\n      0x44\n      add\n        /* \"contracts/BaseFlipPool.sol\":6302:6350  stakeToken.approve(address(masterChef), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_246\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_246:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_248\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_248:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_249\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n      pop\n        /* \"contracts/BaseFlipPool.sol\":6363:6372  _pid == 0 */\n      dup2\n        /* \"contracts/BaseFlipPool.sol\":6360:6488  if(_pid == 0) {... */\n      tag_251\n      jumpi\n        /* \"contracts/BaseFlipPool.sol\":6388:6413  enterStake(_pid, _amount) */\n      tag_252\n        /* \"contracts/BaseFlipPool.sol\":6399:6403  _pid */\n      dup3\n        /* \"contracts/BaseFlipPool.sol\":6405:6412  _amount */\n      dup3\n        /* \"contracts/BaseFlipPool.sol\":6388:6398  enterStake */\n      tag_251\n        /* \"contracts/BaseFlipPool.sol\":6388:6413  enterStake(_pid, _amount) */\n      jump\t// in\n    tag_252:\n        /* \"contracts/BaseFlipPool.sol\":6360:6488  if(_pid == 0) {... */\n      jump(tag_254)\n    tag_251:\n        /* \"contracts/BaseFlipPool.sol\":6444:6454  masterChef */\n      sload(0x01)\n        /* \"contracts/BaseFlipPool.sol\":6444:6477  masterChef.deposit(_pid, _amount) */\n      mload(0x40)\n      shl(0xe3, 0x1c57762b)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":10390:10415   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":10431:10449   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":10424:10458   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BaseFlipPool.sol\":6444:6454  masterChef */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/BaseFlipPool.sol\":6444:6462  masterChef.deposit */\n      0xe2bbb158\n      swap1\n        /* \"#utility.yul\":10363:10381   */\n      0x44\n      add\n        /* \"contracts/BaseFlipPool.sol\":6444:6477  masterChef.deposit(_pid, _amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_256\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_256:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_258\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_258:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/BaseFlipPool.sol\":6360:6488  if(_pid == 0) {... */\n    tag_254:\n        /* \"contracts/BaseFlipPool.sol\":6497:6508  swapToken() */\n      tag_185\n        /* \"contracts/BaseFlipPool.sol\":6497:6506  swapToken */\n      tag_125\n        /* \"contracts/BaseFlipPool.sol\":6497:6508  swapToken() */\n      jump\t// in\n        /* \"contracts/BaseFlipPool.sol\":9205:9662  function safeTokenTransfer(IERC20 token, address _to, uint256 _amount) internal {... */\n    tag_206:\n        /* \"contracts/BaseFlipPool.sol\":9318:9348  token.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/BaseFlipPool.sol\":9342:9346  this */\n      address\n        /* \"contracts/BaseFlipPool.sol\":9318:9348  token.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3239:3290   */\n      mstore\n        /* \"contracts/BaseFlipPool.sol\":9295:9315  uint256 tokenBalance */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BaseFlipPool.sol\":9318:9333  token.balanceOf */\n      dup6\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3212:3230   */\n      0x24\n      add\n        /* \"contracts/BaseFlipPool.sol\":9318:9348  token.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_262\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_262:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_264\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_264:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_265\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_265:\n        /* \"contracts/BaseFlipPool.sol\":9295:9348  uint256 tokenBalance = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/BaseFlipPool.sol\":9358:9378  bool transferSuccess */\n      0x00\n        /* \"contracts/BaseFlipPool.sol\":9410:9422  tokenBalance */\n      dup2\n        /* \"contracts/BaseFlipPool.sol\":9400:9407  _amount */\n      dup4\n        /* \"contracts/BaseFlipPool.sol\":9400:9422  _amount > tokenBalance */\n      gt\n        /* \"contracts/BaseFlipPool.sol\":9396:9577  if (_amount > tokenBalance) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"contracts/BaseFlipPool.sol\":9456:9489  token.transfer(_to, tokenBalance) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3873:3905   */\n      dup6\n      dup2\n      and\n        /* \"contracts/BaseFlipPool.sol\":9456:9489  token.transfer(_to, tokenBalance) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":3855:3906   */\n      mstore\n        /* \"#utility.yul\":3922:3940   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3915:3949   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/BaseFlipPool.sol\":9456:9470  token.transfer */\n      dup7\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3828:3846   */\n      0x44\n      add\n        /* \"contracts/BaseFlipPool.sol\":9456:9489  token.transfer(_to, tokenBalance) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_268\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_268:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_270\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_270:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_271\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_271:\n        /* \"contracts/BaseFlipPool.sol\":9438:9489  transferSuccess = token.transfer(_to, tokenBalance) */\n      swap1\n      pop\n        /* \"contracts/BaseFlipPool.sol\":9396:9577  if (_amount > tokenBalance) {... */\n      jump(tag_272)\n    tag_266:\n        /* \"contracts/BaseFlipPool.sol\":9538:9566  token.transfer(_to, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3873:3905   */\n      dup6\n      dup2\n      and\n        /* \"contracts/BaseFlipPool.sol\":9538:9566  token.transfer(_to, _amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":3855:3906   */\n      mstore\n        /* \"#utility.yul\":3922:3940   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3915:3949   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/BaseFlipPool.sol\":9538:9552  token.transfer */\n      dup7\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3828:3846   */\n      0x44\n      add\n        /* \"contracts/BaseFlipPool.sol\":9538:9566  token.transfer(_to, _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_274\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_274:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_276\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_276:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_277\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_277:\n        /* \"contracts/BaseFlipPool.sol\":9520:9566  transferSuccess = token.transfer(_to, _amount) */\n      swap1\n      pop\n        /* \"contracts/BaseFlipPool.sol\":9396:9577  if (_amount > tokenBalance) {... */\n    tag_272:\n        /* \"contracts/BaseFlipPool.sol\":9594:9609  transferSuccess */\n      dup1\n        /* \"contracts/BaseFlipPool.sol\":9586:9655  require(transferSuccess, \"ABOAT::safeTokenTransfer: transfer failed\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7003:7005   */\n      0x20\n        /* \"contracts/BaseFlipPool.sol\":9586:9655  require(transferSuccess, \"ABOAT::safeTokenTransfer: transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6985:7006   */\n      mstore\n        /* \"#utility.yul\":7042:7044   */\n      0x29\n        /* \"#utility.yul\":7022:7040   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7015:7045   */\n      mstore\n        /* \"#utility.yul\":7081:7115   */\n      0x41424f41543a3a73616665546f6b656e5472616e736665723a207472616e7366\n        /* \"#utility.yul\":7061:7079   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7054:7116   */\n      mstore\n      shl(0xba, 0x195c8819985a5b1959)\n        /* \"#utility.yul\":7132:7150   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7125:7164   */\n      mstore\n        /* \"#utility.yul\":7181:7200   */\n      0x84\n      add\n        /* \"contracts/BaseFlipPool.sol\":9586:9655  require(transferSuccess, \"ABOAT::safeTokenTransfer: transfer failed\") */\n      tag_109\n        /* \"#utility.yul\":6801:7206   */\n      jump\n        /* \"contracts/BaseFlipPool.sol\":9586:9655  require(transferSuccess, \"ABOAT::safeTokenTransfer: transfer failed\") */\n    tag_278:\n        /* \"contracts/BaseFlipPool.sol\":9285:9662  {... */\n      pop\n      pop\n        /* \"contracts/BaseFlipPool.sol\":9205:9662  function safeTokenTransfer(IERC20 token, address _to, uint256 _amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3140:3846  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3559:3582  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3585:3654  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_282\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3613:3617  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3585:3654  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3593:3598  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3585:3612  address(token).functionCall */\n      and\n      tag_283\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3585:3654  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3668:3685  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3559:3654  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3668:3689  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3664:3840  if (returndata.length > 0) {... */\n      tag_124\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3763:3773  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3752:3782  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_285\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3744:3829  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8959:8961   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3744:3829  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8941:8962   */\n      mstore\n        /* \"#utility.yul\":8998:9000   */\n      0x2a\n        /* \"#utility.yul\":8978:8996   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8971:9001   */\n      mstore\n        /* \"#utility.yul\":9037:9071   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":9017:9035   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9010:9072   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":9088:9106   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9081:9121   */\n      mstore\n        /* \"#utility.yul\":9138:9157   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3744:3829  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_109\n        /* \"#utility.yul\":8757:9163   */\n      jump\n        /* \"contracts/BaseFlipPool.sol\":7923:8219  function swapForEth(IERC20 token, uint256 amount) internal returns (uint256) {... */\n    tag_237:\n        /* \"contracts/BaseFlipPool.sol\":7991:7998  uint256 */\n      0x00\n        /* \"contracts/BaseFlipPool.sol\":8035:8056  address(this).balance */\n      selfbalance\n        /* \"contracts/BaseFlipPool.sol\":8114:8145  swapTokensForEth(token, amount) */\n      tag_290\n        /* \"contracts/BaseFlipPool.sol\":8131:8136  token */\n      dup5\n        /* \"contracts/BaseFlipPool.sol\":8138:8144  amount */\n      dup5\n        /* \"contracts/BaseFlipPool.sol\":8114:8130  swapTokensForEth */\n      tag_291\n        /* \"contracts/BaseFlipPool.sol\":8114:8145  swapTokensForEth(token, amount) */\n      jump\t// in\n    tag_290:\n        /* \"contracts/BaseFlipPool.sol\":8171:8212  address(this).balance.sub(initialBalance) */\n      tag_292\n        /* \"contracts/BaseFlipPool.sol\":8171:8192  address(this).balance */\n      selfbalance\n        /* \"contracts/BaseFlipPool.sol\":8197:8211  initialBalance */\n      dup3\n        /* \"contracts/BaseFlipPool.sol\":8171:8196  address(this).balance.sub */\n      tag_293\n        /* \"contracts/BaseFlipPool.sol\":8171:8212  address(this).balance.sub(initialBalance) */\n      jump\t// in\n    tag_292:\n        /* \"contracts/BaseFlipPool.sol\":8164:8212  return address(this).balance.sub(initialBalance) */\n      swap5\n        /* \"contracts/BaseFlipPool.sol\":7923:8219  function swapForEth(IERC20 token, uint256 amount) internal returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BaseFlipPool.sol\":8789:9195  function swapEthForTokens(uint256 tokenAmount) internal {... */\n    tag_239:\n        /* \"contracts/BaseFlipPool.sol\":8879:8895  new address[](2) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/BaseFlipPool.sol\":8893:8894  2 */\n      0x02\n        /* \"contracts/BaseFlipPool.sol\":8879:8895  new address[](2) */\n      dup1\n      dup3\n      mstore\n      0x60\n      dup3\n      add\n      dup4\n      mstore\n        /* \"contracts/BaseFlipPool.sol\":8855:8876  address[] memory path */\n      0x00\n      swap3\n        /* \"contracts/BaseFlipPool.sol\":8879:8895  new address[](2) */\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      pop\n        /* \"contracts/BaseFlipPool.sol\":8915:8921  router */\n      sload(0x06)\n        /* \"contracts/BaseFlipPool.sol\":8915:8928  router.WETH() */\n      0x40\n      dup1\n      mload\n      shl(0xe3, 0x15ab88c9)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/BaseFlipPool.sol\":8855:8895  address[] memory path = new address[](2) */\n      swap4\n      swap5\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BaseFlipPool.sol\":8915:8921  router */\n      swap1\n      swap2\n      and\n      swap3\n        /* \"contracts/BaseFlipPool.sol\":8915:8926  router.WETH */\n      0xad5c4648\n      swap3\n      pop\n        /* \"contracts/BaseFlipPool.sol\":8915:8928  router.WETH() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/BaseFlipPool.sol\":8915:8921  router */\n      dup7\n        /* \"contracts/BaseFlipPool.sol\":8915:8928  router.WETH() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_299\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_299:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_301\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_301:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_302\n      swap2\n      swap1\n      tag_303\n      jump\t// in\n    tag_302:\n        /* \"contracts/BaseFlipPool.sol\":8905:8909  path */\n      dup2\n        /* \"contracts/BaseFlipPool.sol\":8910:8911  0 */\n      0x00\n        /* \"contracts/BaseFlipPool.sol\":8905:8912  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_305\n      jumpi\n      tag_305\n      tag_306\n      jump\t// in\n    tag_305:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BaseFlipPool.sol\":8905:8928  path[0] = router.WETH() */\n      swap3\n      dup4\n      and\n        /* \"contracts/BaseFlipPool.sol\":8905:8912  path[0] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"contracts/BaseFlipPool.sol\":8905:8928  path[0] = router.WETH() */\n      mstore\n        /* \"contracts/BaseFlipPool.sol\":8956:8965  flipToken */\n      sload(0x04)\n        /* \"contracts/BaseFlipPool.sol\":8938:8945  path[1] */\n      dup3\n      mload\n        /* \"contracts/BaseFlipPool.sol\":8956:8965  flipToken */\n      swap2\n      and\n      swap1\n        /* \"contracts/BaseFlipPool.sol\":8938:8942  path */\n      dup3\n      swap1\n        /* \"contracts/BaseFlipPool.sol\":8956:8965  flipToken */\n      0x01\n      swap1\n        /* \"contracts/BaseFlipPool.sol\":8938:8945  path[1] */\n      dup2\n      lt\n      tag_308\n      jumpi\n      tag_308\n      tag_306\n      jump\t// in\n    tag_308:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BaseFlipPool.sol\":8938:8966  path[1] = address(flipToken) */\n      swap3\n      dup4\n      and\n        /* \"contracts/BaseFlipPool.sol\":8938:8945  path[1] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"contracts/BaseFlipPool.sol\":8938:8966  path[1] = address(flipToken) */\n      mstore\n        /* \"contracts/BaseFlipPool.sol\":8985:8991  router */\n      sload(0x06)\n        /* \"contracts/BaseFlipPool.sol\":9137:9149  rewardSystem */\n      sload(0x05)\n        /* \"contracts/BaseFlipPool.sol\":8985:9188  router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: tokenAmount}(... */\n      mload(0x40)\n      shl(0xe0, 0xb6f9de95)\n      dup2\n      mstore\n        /* \"contracts/BaseFlipPool.sol\":8985:8991  router */\n      swap2\n      dup4\n      and\n      swap3\n        /* \"contracts/BaseFlipPool.sol\":8985:9042  router.swapExactETHForTokensSupportingFeeOnTransferTokens */\n      0xb6f9de95\n      swap3\n        /* \"contracts/BaseFlipPool.sol\":9050:9061  tokenAmount */\n      dup7\n      swap3\n        /* \"contracts/BaseFlipPool.sol\":8985:9188  router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: tokenAmount}(... */\n      tag_309\n      swap3\n        /* \"contracts/BaseFlipPool.sol\":8985:8991  router */\n      0x00\n      swap3\n        /* \"contracts/BaseFlipPool.sol\":9119:9123  path */\n      dup9\n      swap3\n        /* \"contracts/BaseFlipPool.sol\":9137:9149  rewardSystem */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/BaseFlipPool.sol\":9163:9178  block.timestamp */\n      timestamp\n      swap1\n        /* \"contracts/BaseFlipPool.sol\":8985:9188  router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: tokenAmount}(... */\n      0x04\n      add\n      tag_310\n      jump\t// in\n    tag_309:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_311\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_311:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_313\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_313:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/BaseFlipPool.sol\":8845:9195  {... */\n      pop\n        /* \"contracts/BaseFlipPool.sol\":8789:9195  function swapEthForTokens(uint256 tokenAmount) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":845:1086  function safeTransferFrom(... */\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1010:1078  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3559:3574   */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1010:1078  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":3541:3575   */\n      mstore\n        /* \"#utility.yul\":3611:3626   */\n      dup4\n      and\n        /* \"#utility.yul\":3591:3609   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3584:3627   */\n      mstore\n        /* \"#utility.yul\":3643:3661   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":3636:3670   */\n      dup3\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":983:1079  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_315\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1003:1008  token */\n      dup6\n      swap1\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1033:1060  token.transferFrom.selector */\n      swap1\n        /* \"#utility.yul\":3476:3494   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1010:1078  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      tag_221\n        /* \"#utility.yul\":3301:3676   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":983:1079  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":845:1086  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3461:3684  function functionCall(... */\n    tag_283:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3594:3606  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3625:3677  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_325\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3647:3653  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3655:3659  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3661:3662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3664:3676  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3625:3646  functionCallWithValue */\n      tag_326\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3625:3677  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_325:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3618:3677  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3461:3684  function functionCall(... */\n    tag_324:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BaseFlipPool.sol\":8229:8779  function swapTokensForEth(IERC20 token, uint256 tokenAmount) internal {... */\n    tag_291:\n        /* \"contracts/BaseFlipPool.sol\":8390:8406  new address[](2) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/BaseFlipPool.sol\":8404:8405  2 */\n      0x02\n        /* \"contracts/BaseFlipPool.sol\":8390:8406  new address[](2) */\n      dup1\n      dup3\n      mstore\n      0x60\n      dup3\n      add\n      dup4\n      mstore\n        /* \"contracts/BaseFlipPool.sol\":8366:8387  address[] memory path */\n      0x00\n      swap3\n        /* \"contracts/BaseFlipPool.sol\":8390:8406  new address[](2) */\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/BaseFlipPool.sol\":8366:8406  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"contracts/BaseFlipPool.sol\":8434:8439  token */\n      dup3\n        /* \"contracts/BaseFlipPool.sol\":8416:8420  path */\n      dup2\n        /* \"contracts/BaseFlipPool.sol\":8421:8422  0 */\n      0x00\n        /* \"contracts/BaseFlipPool.sol\":8416:8423  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_332\n      jumpi\n      tag_332\n      tag_306\n      jump\t// in\n    tag_332:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BaseFlipPool.sol\":8416:8440  path[0] = address(token) */\n      swap3\n      dup4\n      and\n        /* \"contracts/BaseFlipPool.sol\":8416:8423  path[0] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      dup2\n      add\n        /* \"contracts/BaseFlipPool.sol\":8416:8440  path[0] = address(token) */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/BaseFlipPool.sol\":8460:8466  router */\n      sload(0x06)\n        /* \"contracts/BaseFlipPool.sol\":8460:8473  router.WETH() */\n      0x40\n      dup1\n      mload\n      shl(0xe3, 0x15ab88c9)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/BaseFlipPool.sol\":8460:8466  router */\n      swap2\n      swap1\n      swap4\n      and\n      swap3\n        /* \"contracts/BaseFlipPool.sol\":8460:8471  router.WETH */\n      0xad5c4648\n      swap3\n        /* \"contracts/BaseFlipPool.sol\":8460:8473  router.WETH() */\n      0x04\n      dup1\n      dup4\n      add\n      swap4\n        /* \"contracts/BaseFlipPool.sol\":8416:8423  path[0] */\n      swap2\n      swap3\n        /* \"contracts/BaseFlipPool.sol\":8460:8473  router.WETH() */\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/BaseFlipPool.sol\":8460:8466  router */\n      dup7\n        /* \"contracts/BaseFlipPool.sol\":8460:8473  router.WETH() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_333\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_333:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_335\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_335:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_336\n      swap2\n      swap1\n      tag_303\n      jump\t// in\n    tag_336:\n        /* \"contracts/BaseFlipPool.sol\":8450:8454  path */\n      dup2\n        /* \"contracts/BaseFlipPool.sol\":8455:8456  1 */\n      0x01\n        /* \"contracts/BaseFlipPool.sol\":8450:8457  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_338\n      jumpi\n      tag_338\n      tag_306\n      jump\t// in\n    tag_338:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BaseFlipPool.sol\":8450:8473  path[1] = router.WETH() */\n      swap3\n      dup4\n      and\n        /* \"contracts/BaseFlipPool.sol\":8450:8457  path[1] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"contracts/BaseFlipPool.sol\":8450:8473  path[1] = router.WETH() */\n      mstore\n        /* \"contracts/BaseFlipPool.sol\":8506:8512  router */\n      sload(0x06)\n        /* \"contracts/BaseFlipPool.sol\":8484:8527  token.approve(address(router), tokenAmount) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n        /* \"contracts/BaseFlipPool.sol\":8506:8512  router */\n      swap1\n      dup3\n      and\n        /* \"contracts/BaseFlipPool.sol\":8484:8527  token.approve(address(router), tokenAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3855:3906   */\n      mstore\n        /* \"#utility.yul\":3922:3940   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3915:3949   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/BaseFlipPool.sol\":8484:8497  token.approve */\n      swap1\n      dup5\n      and\n      swap1\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":3828:3846   */\n      0x44\n      add\n        /* \"contracts/BaseFlipPool.sol\":8484:8527  token.approve(address(router), tokenAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_340\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_340:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_342\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_342:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_343\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_343:\n      pop\n        /* \"contracts/BaseFlipPool.sol\":8563:8569  router */\n      sload(0x06)\n        /* \"contracts/BaseFlipPool.sol\":8563:8772  router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      mload(0x40)\n      shl(0xe0, 0x791ac947)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BaseFlipPool.sol\":8563:8569  router */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/BaseFlipPool.sol\":8563:8620  router.swapExactTokensForETHSupportingFeeOnTransferTokens */\n      0x791ac947\n      swap1\n        /* \"contracts/BaseFlipPool.sol\":8563:8772  router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      tag_344\n      swap1\n        /* \"contracts/BaseFlipPool.sol\":8634:8645  tokenAmount */\n      dup6\n      swap1\n        /* \"contracts/BaseFlipPool.sol\":8563:8569  router */\n      0x00\n      swap1\n        /* \"contracts/BaseFlipPool.sol\":8702:8706  path */\n      dup7\n      swap1\n        /* \"contracts/BaseFlipPool.sol\":8728:8732  this */\n      address\n      swap1\n        /* \"contracts/BaseFlipPool.sol\":8747:8762  block.timestamp */\n      timestamp\n      swap1\n        /* \"contracts/BaseFlipPool.sol\":8563:8772  router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      0x04\n      add\n      tag_345\n      jump\t// in\n    tag_344:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_311\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3039:3135  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3097:3104  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3123:3128  a - b */\n      tag_324\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3127:3128  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3123:3124  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3123:3128  a - b */\n      tag_351\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4548:5048  function functionCallWithValue(... */\n    tag_326:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4713:4725  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4770:4775  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4745:4766  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4745:4775  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4737:4818  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_353\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6192:6194   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4737:4818  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6174:6195   */\n      mstore\n        /* \"#utility.yul\":6231:6233   */\n      0x26\n        /* \"#utility.yul\":6211:6229   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6204:6234   */\n      mstore\n        /* \"#utility.yul\":6270:6304   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":6250:6268   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6243:6305   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":6321:6339   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6314:6350   */\n      mstore\n        /* \"#utility.yul\":6367:6386   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4737:4818  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_109\n        /* \"#utility.yul\":5990:6392   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4737:4818  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_353:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1034:1054  extcodesize(account) */\n      dup5\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4828:4888  require(isContract(target), \"Address: call to non-contract\") */\n      tag_358\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8190:8192   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4828:4888  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8172:8193   */\n      mstore\n        /* \"#utility.yul\":8229:8231   */\n      0x1d\n        /* \"#utility.yul\":8209:8227   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8202:8232   */\n      mstore\n        /* \"#utility.yul\":8268:8299   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":8248:8266   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8241:8300   */\n      mstore\n        /* \"#utility.yul\":8317:8335   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4828:4888  require(isContract(target), \"Address: call to non-contract\") */\n      tag_109\n        /* \"#utility.yul\":7988:8341   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4828:4888  require(isContract(target), \"Address: call to non-contract\") */\n    tag_358:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4900:4912  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4914:4937  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4941:4947  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4941:4952  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:4965  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4967:4971  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4941:4972  target.call{value: value}(data) */\n      mload(0x40)\n      tag_361\n      swap2\n      swap1\n      tag_362\n      jump\t// in\n    tag_361:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_365\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_364)\n    tag_365:\n      0x60\n      swap2\n      pop\n    tag_364:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4899:4972  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4989:5041  _verifyCallResult(success, returndata, errorMessage) */\n      tag_366\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5007:5014  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5016:5026  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5028:5040  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4989:5006  _verifyCallResult */\n      tag_367\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4989:5041  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_366:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4982:5041  return _verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4548:5048  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6950:7642  function _verifyCallResult(... */\n    tag_367:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7096:7108  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7124:7131  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7120:7636  if (success) {... */\n      iszero\n      tag_370\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7154:7164  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7147:7164  return returndata */\n      jump(tag_324)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7120:7636  if (success) {... */\n    tag_370:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7265:7282  returndata.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7265:7286  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7261:7626  if (returndata.length > 0) {... */\n      tag_372\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7459:7469  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7453:7470  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7519:7534  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7506:7516  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7502:7504  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7498:7517  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7491:7535  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7261:7626  if (returndata.length > 0) {... */\n    tag_372:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7598:7610  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7591:7611  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap2\n      swap1\n      tag_375\n      jump\t// in\n        /* \"#utility.yul\":14:261   */\n    tag_44:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_378:\n        /* \"#utility.yul\":181:190   */\n      dup2\n        /* \"#utility.yul\":168:191   */\n      calldataload\n        /* \"#utility.yul\":200:231   */\n      tag_324\n        /* \"#utility.yul\":225:230   */\n      dup2\n        /* \"#utility.yul\":200:231   */\n      tag_380\n      jump\t// in\n        /* \"#utility.yul\":266:517   */\n    tag_303:\n        /* \"#utility.yul\":336:342   */\n      0x00\n        /* \"#utility.yul\":389:391   */\n      0x20\n        /* \"#utility.yul\":377:386   */\n      dup3\n        /* \"#utility.yul\":368:375   */\n      dup5\n        /* \"#utility.yul\":364:387   */\n      sub\n        /* \"#utility.yul\":360:392   */\n      slt\n        /* \"#utility.yul\":357:409   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":405:406   */\n      0x00\n        /* \"#utility.yul\":402:403   */\n      dup1\n        /* \"#utility.yul\":395:407   */\n      revert\n        /* \"#utility.yul\":357:409   */\n    tag_382:\n        /* \"#utility.yul\":437:446   */\n      dup2\n        /* \"#utility.yul\":431:447   */\n      mload\n        /* \"#utility.yul\":456:487   */\n      tag_324\n        /* \"#utility.yul\":481:486   */\n      dup2\n        /* \"#utility.yul\":456:487   */\n      tag_380\n      jump\t// in\n        /* \"#utility.yul\":522:799   */\n    tag_250:\n        /* \"#utility.yul\":589:595   */\n      0x00\n        /* \"#utility.yul\":642:644   */\n      0x20\n        /* \"#utility.yul\":630:639   */\n      dup3\n        /* \"#utility.yul\":621:628   */\n      dup5\n        /* \"#utility.yul\":617:640   */\n      sub\n        /* \"#utility.yul\":613:645   */\n      slt\n        /* \"#utility.yul\":610:662   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":658:659   */\n      0x00\n        /* \"#utility.yul\":655:656   */\n      dup1\n        /* \"#utility.yul\":648:660   */\n      revert\n        /* \"#utility.yul\":610:662   */\n    tag_385:\n        /* \"#utility.yul\":690:699   */\n      dup2\n        /* \"#utility.yul\":684:700   */\n      mload\n        /* \"#utility.yul\":743:748   */\n      dup1\n        /* \"#utility.yul\":736:749   */\n      iszero\n        /* \"#utility.yul\":729:750   */\n      iszero\n        /* \"#utility.yul\":722:727   */\n      dup2\n        /* \"#utility.yul\":719:751   */\n      eq\n        /* \"#utility.yul\":709:769   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":765:766   */\n      0x00\n        /* \"#utility.yul\":762:763   */\n      dup1\n        /* \"#utility.yul\":755:767   */\n      revert\n        /* \"#utility.yul\":1083:1263   */\n    tag_39:\n        /* \"#utility.yul\":1142:1148   */\n      0x00\n        /* \"#utility.yul\":1195:1197   */\n      0x20\n        /* \"#utility.yul\":1183:1192   */\n      dup3\n        /* \"#utility.yul\":1174:1181   */\n      dup5\n        /* \"#utility.yul\":1170:1193   */\n      sub\n        /* \"#utility.yul\":1166:1198   */\n      slt\n        /* \"#utility.yul\":1163:1215   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":1211:1212   */\n      0x00\n        /* \"#utility.yul\":1208:1209   */\n      dup1\n        /* \"#utility.yul\":1201:1213   */\n      revert\n        /* \"#utility.yul\":1163:1215   */\n    tag_391:\n      pop\n        /* \"#utility.yul\":1234:1257   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1083:1263   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1268:1452   */\n    tag_213:\n        /* \"#utility.yul\":1338:1344   */\n      0x00\n        /* \"#utility.yul\":1391:1393   */\n      0x20\n        /* \"#utility.yul\":1379:1388   */\n      dup3\n        /* \"#utility.yul\":1370:1377   */\n      dup5\n        /* \"#utility.yul\":1366:1389   */\n      sub\n        /* \"#utility.yul\":1362:1394   */\n      slt\n        /* \"#utility.yul\":1359:1411   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":1407:1408   */\n      0x00\n        /* \"#utility.yul\":1404:1405   */\n      dup1\n        /* \"#utility.yul\":1397:1409   */\n      revert\n        /* \"#utility.yul\":1359:1411   */\n    tag_393:\n      pop\n        /* \"#utility.yul\":1430:1446   */\n      mload\n      swap2\n        /* \"#utility.yul\":1268:1452   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1457:1705   */\n    tag_93:\n        /* \"#utility.yul\":1525:1531   */\n      0x00\n        /* \"#utility.yul\":1533:1539   */\n      dup1\n        /* \"#utility.yul\":1586:1588   */\n      0x40\n        /* \"#utility.yul\":1574:1583   */\n      dup4\n        /* \"#utility.yul\":1565:1572   */\n      dup6\n        /* \"#utility.yul\":1561:1584   */\n      sub\n        /* \"#utility.yul\":1557:1589   */\n      slt\n        /* \"#utility.yul\":1554:1606   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":1602:1603   */\n      0x00\n        /* \"#utility.yul\":1599:1600   */\n      dup1\n        /* \"#utility.yul\":1592:1604   */\n      revert\n        /* \"#utility.yul\":1554:1606   */\n    tag_395:\n      pop\n      pop\n        /* \"#utility.yul\":1625:1648   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1695:1697   */\n      0x20\n        /* \"#utility.yul\":1680:1698   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1667:1699   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1457:1705   */\n      jump\t// out\n        /* \"#utility.yul\":1710:1955   */\n    tag_169:\n        /* \"#utility.yul\":1789:1795   */\n      0x00\n        /* \"#utility.yul\":1797:1803   */\n      dup1\n        /* \"#utility.yul\":1850:1852   */\n      0x40\n        /* \"#utility.yul\":1838:1847   */\n      dup4\n        /* \"#utility.yul\":1829:1836   */\n      dup6\n        /* \"#utility.yul\":1825:1848   */\n      sub\n        /* \"#utility.yul\":1821:1853   */\n      slt\n        /* \"#utility.yul\":1818:1870   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":1866:1867   */\n      0x00\n        /* \"#utility.yul\":1863:1864   */\n      dup1\n        /* \"#utility.yul\":1856:1868   */\n      revert\n        /* \"#utility.yul\":1818:1870   */\n    tag_397:\n      pop\n      pop\n        /* \"#utility.yul\":1889:1905   */\n      dup1\n      mload\n        /* \"#utility.yul\":1945:1947   */\n      0x20\n        /* \"#utility.yul\":1930:1948   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1924:1949   */\n      mload\n        /* \"#utility.yul\":1889:1905   */\n      swap1\n      swap3\n        /* \"#utility.yul\":1924:1949   */\n      swap1\n      swap2\n      pop\n        /* \"#utility.yul\":1710:1955   */\n      jump\t// out\n        /* \"#utility.yul\":1960:2343   */\n    tag_29:\n        /* \"#utility.yul\":2037:2043   */\n      0x00\n        /* \"#utility.yul\":2045:2051   */\n      dup1\n        /* \"#utility.yul\":2053:2059   */\n      0x00\n        /* \"#utility.yul\":2106:2108   */\n      0x60\n        /* \"#utility.yul\":2094:2103   */\n      dup5\n        /* \"#utility.yul\":2085:2092   */\n      dup7\n        /* \"#utility.yul\":2081:2104   */\n      sub\n        /* \"#utility.yul\":2077:2109   */\n      slt\n        /* \"#utility.yul\":2074:2126   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":2122:2123   */\n      0x00\n        /* \"#utility.yul\":2119:2120   */\n      dup1\n        /* \"#utility.yul\":2112:2124   */\n      revert\n        /* \"#utility.yul\":2074:2126   */\n    tag_399:\n        /* \"#utility.yul\":2158:2167   */\n      dup4\n        /* \"#utility.yul\":2145:2168   */\n      calldataload\n        /* \"#utility.yul\":2135:2168   */\n      swap3\n      pop\n        /* \"#utility.yul\":2215:2217   */\n      0x20\n        /* \"#utility.yul\":2204:2213   */\n      dup5\n        /* \"#utility.yul\":2200:2218   */\n      add\n        /* \"#utility.yul\":2187:2219   */\n      calldataload\n        /* \"#utility.yul\":2177:2219   */\n      swap2\n      pop\n        /* \"#utility.yul\":2269:2271   */\n      0x40\n        /* \"#utility.yul\":2258:2267   */\n      dup5\n        /* \"#utility.yul\":2254:2272   */\n      add\n        /* \"#utility.yul\":2241:2273   */\n      calldataload\n        /* \"#utility.yul\":2282:2313   */\n      tag_400\n        /* \"#utility.yul\":2307:2312   */\n      dup2\n        /* \"#utility.yul\":2282:2313   */\n      tag_380\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":2332:2337   */\n      dup1\n        /* \"#utility.yul\":2322:2337   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1960:2343   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2348:2809   */\n    tag_401:\n        /* \"#utility.yul\":2401:2404   */\n      0x00\n        /* \"#utility.yul\":2439:2444   */\n      dup2\n        /* \"#utility.yul\":2433:2445   */\n      mload\n        /* \"#utility.yul\":2466:2472   */\n      dup1\n        /* \"#utility.yul\":2461:2464   */\n      dup5\n        /* \"#utility.yul\":2454:2473   */\n      mstore\n        /* \"#utility.yul\":2492:2496   */\n      0x20\n        /* \"#utility.yul\":2521:2523   */\n      dup1\n        /* \"#utility.yul\":2516:2519   */\n      dup6\n        /* \"#utility.yul\":2512:2524   */\n      add\n        /* \"#utility.yul\":2505:2524   */\n      swap5\n      pop\n        /* \"#utility.yul\":2558:2560   */\n      dup1\n        /* \"#utility.yul\":2551:2556   */\n      dup5\n        /* \"#utility.yul\":2547:2561   */\n      add\n        /* \"#utility.yul\":2579:2580   */\n      0x00\n        /* \"#utility.yul\":2589:2784   */\n    tag_403:\n        /* \"#utility.yul\":2603:2609   */\n      dup4\n        /* \"#utility.yul\":2600:2601   */\n      dup2\n        /* \"#utility.yul\":2597:2610   */\n      lt\n        /* \"#utility.yul\":2589:2784   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":2668:2681   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2664:2703   */\n      and\n        /* \"#utility.yul\":2652:2704   */\n      dup8\n      mstore\n        /* \"#utility.yul\":2724:2736   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":2759:2774   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":2700:2701   */\n      0x01\n        /* \"#utility.yul\":2618:2627   */\n      add\n        /* \"#utility.yul\":2589:2784   */\n      jump(tag_403)\n    tag_405:\n      pop\n        /* \"#utility.yul\":2800:2803   */\n      swap5\n      swap6\n        /* \"#utility.yul\":2348:2809   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2814:3088   */\n    tag_362:\n        /* \"#utility.yul\":2943:2946   */\n      0x00\n        /* \"#utility.yul\":2981:2987   */\n      dup3\n        /* \"#utility.yul\":2975:2988   */\n      mload\n        /* \"#utility.yul\":2997:3050   */\n      tag_407\n        /* \"#utility.yul\":3043:3049   */\n      dup2\n        /* \"#utility.yul\":3038:3041   */\n      dup5\n        /* \"#utility.yul\":3031:3035   */\n      0x20\n        /* \"#utility.yul\":3023:3029   */\n      dup8\n        /* \"#utility.yul\":3019:3036   */\n      add\n        /* \"#utility.yul\":2997:3050   */\n      tag_408\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":3066:3082   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":2814:3088   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4182:4692   */\n    tag_310:\n        /* \"#utility.yul\":4453:4459   */\n      dup5\n        /* \"#utility.yul\":4442:4451   */\n      dup2\n        /* \"#utility.yul\":4435:4460   */\n      mstore\n        /* \"#utility.yul\":4496:4499   */\n      0x80\n        /* \"#utility.yul\":4491:4493   */\n      0x20\n        /* \"#utility.yul\":4480:4489   */\n      dup3\n        /* \"#utility.yul\":4476:4494   */\n      add\n        /* \"#utility.yul\":4469:4500   */\n      mstore\n        /* \"#utility.yul\":4416:4420   */\n      0x00\n        /* \"#utility.yul\":4517:4574   */\n      tag_414\n        /* \"#utility.yul\":4569:4572   */\n      0x80\n        /* \"#utility.yul\":4558:4567   */\n      dup4\n        /* \"#utility.yul\":4554:4573   */\n      add\n        /* \"#utility.yul\":4546:4552   */\n      dup7\n        /* \"#utility.yul\":4517:4574   */\n      tag_401\n      jump\t// in\n    tag_414:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4610:4642   */\n      swap5\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":4605:4607   */\n      0x40\n        /* \"#utility.yul\":4590:4608   */\n      dup4\n      add\n        /* \"#utility.yul\":4583:4643   */\n      mstore\n      pop\n        /* \"#utility.yul\":4674:4676   */\n      0x60\n        /* \"#utility.yul\":4659:4677   */\n      add\n        /* \"#utility.yul\":4652:4686   */\n      mstore\n        /* \"#utility.yul\":4509:4574   */\n      swap3\n        /* \"#utility.yul\":4182:4692   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4697:5080   */\n    tag_375:\n        /* \"#utility.yul\":4846:4848   */\n      0x20\n        /* \"#utility.yul\":4835:4844   */\n      dup2\n        /* \"#utility.yul\":4828:4849   */\n      mstore\n        /* \"#utility.yul\":4809:4813   */\n      0x00\n        /* \"#utility.yul\":4878:4884   */\n      dup3\n        /* \"#utility.yul\":4872:4885   */\n      mload\n        /* \"#utility.yul\":4921:4927   */\n      dup1\n        /* \"#utility.yul\":4916:4918   */\n      0x20\n        /* \"#utility.yul\":4905:4914   */\n      dup5\n        /* \"#utility.yul\":4901:4919   */\n      add\n        /* \"#utility.yul\":4894:4928   */\n      mstore\n        /* \"#utility.yul\":4937:5003   */\n      tag_416\n        /* \"#utility.yul\":4996:5002   */\n      dup2\n        /* \"#utility.yul\":4991:4993   */\n      0x40\n        /* \"#utility.yul\":4980:4989   */\n      dup6\n        /* \"#utility.yul\":4976:4994   */\n      add\n        /* \"#utility.yul\":4971:4973   */\n      0x20\n        /* \"#utility.yul\":4963:4969   */\n      dup8\n        /* \"#utility.yul\":4959:4974   */\n      add\n        /* \"#utility.yul\":4937:5003   */\n      tag_408\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":5064:5066   */\n      0x1f\n        /* \"#utility.yul\":5043:5058   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":5039:5068   */\n      and\n        /* \"#utility.yul\":5024:5069   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":5071:5073   */\n      0x40\n        /* \"#utility.yul\":5020:5074   */\n      add\n      swap3\n        /* \"#utility.yul\":4697:5080   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5085:5578   */\n    tag_110:\n        /* \"#utility.yul\":5287:5289   */\n      0x20\n        /* \"#utility.yul\":5269:5290   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5326:5328   */\n      0x59\n        /* \"#utility.yul\":5306:5324   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5299:5329   */\n      mstore\n        /* \"#utility.yul\":5365:5399   */\n      0x41424f41543a3a6f6e6c794d6173746572456e7465727461696e65723a204f6e\n        /* \"#utility.yul\":5360:5362   */\n      0x40\n        /* \"#utility.yul\":5345:5363   */\n      dup3\n      add\n        /* \"#utility.yul\":5338:5400   */\n      mstore\n        /* \"#utility.yul\":5436:5470   */\n      0x6c7920746865206d617374657220656e7465727461696e657220697320616c6c\n        /* \"#utility.yul\":5431:5433   */\n      0x60\n        /* \"#utility.yul\":5416:5434   */\n      dup3\n      add\n        /* \"#utility.yul\":5409:5471   */\n      mstore\n        /* \"#utility.yul\":5508:5535   */\n      0x6f77656420746f2063616c6c2074686973206d6574686f642100000000000000\n        /* \"#utility.yul\":5502:5505   */\n      0x80\n        /* \"#utility.yul\":5487:5506   */\n      dup3\n      add\n        /* \"#utility.yul\":5480:5536   */\n      mstore\n        /* \"#utility.yul\":5568:5571   */\n      0xa0\n        /* \"#utility.yul\":5553:5572   */\n      add\n      swap1\n        /* \"#utility.yul\":5085:5578   */\n      jump\t// out\n        /* \"#utility.yul\":7211:7567   */\n    tag_132:\n        /* \"#utility.yul\":7413:7415   */\n      0x20\n        /* \"#utility.yul\":7395:7416   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7432:7450   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":7425:7455   */\n      mstore\n        /* \"#utility.yul\":7491:7525   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7486:7488   */\n      0x40\n        /* \"#utility.yul\":7471:7489   */\n      dup3\n      add\n        /* \"#utility.yul\":7464:7526   */\n      mstore\n        /* \"#utility.yul\":7558:7560   */\n      0x60\n        /* \"#utility.yul\":7543:7561   */\n      add\n      swap1\n        /* \"#utility.yul\":7211:7567   */\n      jump\t// out\n        /* \"#utility.yul\":9629:10211   */\n    tag_345:\n        /* \"#utility.yul\":9928:9934   */\n      dup6\n        /* \"#utility.yul\":9917:9926   */\n      dup2\n        /* \"#utility.yul\":9910:9935   */\n      mstore\n        /* \"#utility.yul\":9971:9977   */\n      dup5\n        /* \"#utility.yul\":9966:9968   */\n      0x20\n        /* \"#utility.yul\":9955:9964   */\n      dup3\n        /* \"#utility.yul\":9951:9969   */\n      add\n        /* \"#utility.yul\":9944:9978   */\n      mstore\n        /* \"#utility.yul\":10014:10017   */\n      0xa0\n        /* \"#utility.yul\":10009:10011   */\n      0x40\n        /* \"#utility.yul\":9998:10007   */\n      dup3\n        /* \"#utility.yul\":9994:10012   */\n      add\n        /* \"#utility.yul\":9987:10018   */\n      mstore\n        /* \"#utility.yul\":9891:9895   */\n      0x00\n        /* \"#utility.yul\":10035:10092   */\n      tag_430\n        /* \"#utility.yul\":10087:10090   */\n      0xa0\n        /* \"#utility.yul\":10076:10085   */\n      dup4\n        /* \"#utility.yul\":10072:10091   */\n      add\n        /* \"#utility.yul\":10064:10070   */\n      dup7\n        /* \"#utility.yul\":10035:10092   */\n      tag_401\n      jump\t// in\n    tag_430:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10128:10160   */\n      swap5\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":10123:10125   */\n      0x60\n        /* \"#utility.yul\":10108:10126   */\n      dup4\n      add\n        /* \"#utility.yul\":10101:10161   */\n      mstore\n      pop\n        /* \"#utility.yul\":10192:10195   */\n      0x80\n        /* \"#utility.yul\":10177:10196   */\n      add\n        /* \"#utility.yul\":10170:10205   */\n      mstore\n        /* \"#utility.yul\":10027:10092   */\n      swap4\n        /* \"#utility.yul\":9629:10211   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10469:10691   */\n    tag_351:\n        /* \"#utility.yul\":10509:10513   */\n      0x00\n        /* \"#utility.yul\":10537:10538   */\n      dup3\n        /* \"#utility.yul\":10534:10535   */\n      dup3\n        /* \"#utility.yul\":10531:10539   */\n      lt\n        /* \"#utility.yul\":10528:10659   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":10581:10591   */\n      0x4e487b71\n        /* \"#utility.yul\":10576:10579   */\n      0xe0\n        /* \"#utility.yul\":10572:10592   */\n      shl\n        /* \"#utility.yul\":10569:10570   */\n      0x00\n        /* \"#utility.yul\":10562:10593   */\n      mstore\n        /* \"#utility.yul\":10616:10620   */\n      0x11\n        /* \"#utility.yul\":10613:10614   */\n      0x04\n        /* \"#utility.yul\":10606:10621   */\n      mstore\n        /* \"#utility.yul\":10644:10648   */\n      0x24\n        /* \"#utility.yul\":10641:10642   */\n      0x00\n        /* \"#utility.yul\":10634:10649   */\n      revert\n        /* \"#utility.yul\":10528:10659   */\n    tag_433:\n      pop\n        /* \"#utility.yul\":10676:10685   */\n      sub\n      swap1\n        /* \"#utility.yul\":10469:10691   */\n      jump\t// out\n        /* \"#utility.yul\":10696:10954   */\n    tag_408:\n        /* \"#utility.yul\":10768:10769   */\n      0x00\n        /* \"#utility.yul\":10778:10891   */\n    tag_435:\n        /* \"#utility.yul\":10792:10798   */\n      dup4\n        /* \"#utility.yul\":10789:10790   */\n      dup2\n        /* \"#utility.yul\":10786:10799   */\n      lt\n        /* \"#utility.yul\":10778:10891   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":10868:10879   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":10862:10880   */\n      mload\n        /* \"#utility.yul\":10849:10860   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":10842:10881   */\n      mstore\n        /* \"#utility.yul\":10814:10816   */\n      0x20\n        /* \"#utility.yul\":10807:10817   */\n      add\n        /* \"#utility.yul\":10778:10891   */\n      jump(tag_435)\n    tag_437:\n        /* \"#utility.yul\":10909:10915   */\n      dup4\n        /* \"#utility.yul\":10906:10907   */\n      dup2\n        /* \"#utility.yul\":10903:10916   */\n      gt\n        /* \"#utility.yul\":10900:10948   */\n      iszero\n      tag_315\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":10944:10945   */\n      0x00\n        /* \"#utility.yul\":10926:10942   */\n      swap2\n      add\n        /* \"#utility.yul\":10919:10946   */\n      mstore\n        /* \"#utility.yul\":10696:10954   */\n      jump\t// out\n        /* \"#utility.yul\":10959:11086   */\n    tag_306:\n        /* \"#utility.yul\":11020:11030   */\n      0x4e487b71\n        /* \"#utility.yul\":11015:11018   */\n      0xe0\n        /* \"#utility.yul\":11011:11031   */\n      shl\n        /* \"#utility.yul\":11008:11009   */\n      0x00\n        /* \"#utility.yul\":11001:11032   */\n      mstore\n        /* \"#utility.yul\":11051:11055   */\n      0x32\n        /* \"#utility.yul\":11048:11049   */\n      0x04\n        /* \"#utility.yul\":11041:11056   */\n      mstore\n        /* \"#utility.yul\":11075:11079   */\n      0x24\n        /* \"#utility.yul\":11072:11073   */\n      0x00\n        /* \"#utility.yul\":11065:11080   */\n      revert\n        /* \"#utility.yul\":11223:11354   */\n    tag_380:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11298:11329   */\n      dup2\n      and\n        /* \"#utility.yul\":11288:11330   */\n      dup2\n      eq\n        /* \"#utility.yul\":11278:11348   */\n      tag_196\n      jumpi\n        /* \"#utility.yul\":11344:11345   */\n      0x00\n        /* \"#utility.yul\":11341:11342   */\n      dup1\n        /* \"#utility.yul\":11334:11346   */\n      revert\n\n    auxdata: 0xa2646970667358221220b59443e4ff04ef171c5f5ecbb3b728c5380c4b8aa0ab3a7010d9b73a9935f60c64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2482": {
									"entryPoint": null,
									"id": 2482,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_1323": {
									"entryPoint": null,
									"id": 1323,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setOwner_102": {
									"entryPoint": 782,
									"id": 102,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_contract$_IERC20_$767t_contract$_IERC20_$767t_contract$_IERC20_$767t_addresst_contract$_IPancakeSwapMasterChef_$3123t_address_fromMemory": {
									"entryPoint": 862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_tuple_t_stringliteral_0d98b1c54aa4393b4f5e83c52af1e239027cf51e55005507e2797ab15552f1de__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_313e3f0c8e984ed735f820e259241f8a14c9ab9a21e04251d8dfba5294922c6d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3ac5307462f1240dc69e6b46adc569750e239215835082a7e1180fc5b9080fbe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_705fdf4e1fda478b74d773a311969f26a4ef64c7d0a9ef175974e9bc0ef11a7d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a449262043586a6ed441a315327dedaab1bc73af1db741e04bafa2716ad48b88__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d95fc865c22b00bff394cd371f2dc119a9184d8014f02551ac1b63777d8e927b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 1010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3530:16",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "253:758:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "300:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "309:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "312:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "302:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "302:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "302:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "274:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "283:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "270:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "270:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "295:3:16",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "266:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "266:33:16"
															},
															"nodeType": "YulIf",
															"src": "263:53:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "325:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "344:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "338:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "338:16:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "329:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "388:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "363:24:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "363:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "363:31:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "403:15:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "413:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "403:6:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "427:40:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "452:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "463:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "448:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "448:18:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "442:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "442:25:16"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "431:7:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "501:7:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "476:24:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "476:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "476:33:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "518:17:16",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "528:7:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "518:6:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "544:40:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "569:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "580:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "565:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "565:18:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "559:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "559:25:16"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "548:7:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "618:7:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "593:24:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "593:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "593:33:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "635:17:16",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "645:7:16"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "635:6:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "661:40:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "686:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "697:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "682:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "682:18:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:25:16"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nodeType": "YulTypedName",
																	"src": "665:7:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_3",
																		"nodeType": "YulIdentifier",
																		"src": "735:7:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "710:24:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "710:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "710:33:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "752:17:16",
															"value": {
																"name": "value_3",
																"nodeType": "YulIdentifier",
																"src": "762:7:16"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "778:41:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "803:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "814:3:16",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "799:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "799:19:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "793:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "793:26:16"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nodeType": "YulTypedName",
																	"src": "782:7:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_4",
																		"nodeType": "YulIdentifier",
																		"src": "853:7:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "828:24:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "828:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "828:33:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "870:17:16",
															"value": {
																"name": "value_4",
																"nodeType": "YulIdentifier",
																"src": "880:7:16"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "870:6:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "896:41:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "921:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "932:3:16",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "917:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "917:19:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "911:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "911:26:16"
															},
															"variables": [
																{
																	"name": "value_5",
																	"nodeType": "YulTypedName",
																	"src": "900:7:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_5",
																		"nodeType": "YulIdentifier",
																		"src": "971:7:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "946:24:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "946:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "946:33:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "988:17:16",
															"value": {
																"name": "value_5",
																"nodeType": "YulIdentifier",
																"src": "998:7:16"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "988:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$767t_contract$_IERC20_$767t_contract$_IERC20_$767t_addresst_contract$_IPancakeSwapMasterChef_$3123t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "179:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "190:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "202:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "210:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "218:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "226:6:16",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "234:6:16",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "242:6:16",
														"type": ""
													}
												],
												"src": "14:997:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1190:223:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1207:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1218:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1200:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1200:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1200:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1241:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1252:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1237:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1237:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1257:2:16",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1230:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1230:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1230:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1280:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1291:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1276:18:16"
																	},
																	{
																		"hexValue": "5374616b6520546f6b656e2063616e2774206265207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1296:34:16",
																		"type": "",
																		"value": "Stake Token can't be zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1269:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1269:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1269:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1351:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1362:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1347:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1347:18:16"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1367:3:16",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1340:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1340:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1340:31:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1380:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1392:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1403:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1388:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1388:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1380:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d98b1c54aa4393b4f5e83c52af1e239027cf51e55005507e2797ab15552f1de__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1167:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1181:4:16",
														"type": ""
													}
												],
												"src": "1016:397:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1592:182:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1609:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1620:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1602:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1602:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1643:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1654:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1639:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1639:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1632:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1632:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1632:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1682:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1693:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1678:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1678:18:16"
																	},
																	{
																		"hexValue": "466c697020546f6b656e2063616e2774206265207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1698:34:16",
																		"type": "",
																		"value": "Flip Token can't be zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1671:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1671:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1671:62:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1742:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1754:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1765:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1750:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1742:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_313e3f0c8e984ed735f820e259241f8a14c9ab9a21e04251d8dfba5294922c6d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1569:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1583:4:16",
														"type": ""
													}
												],
												"src": "1418:356:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:230:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1970:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1981:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1963:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1963:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1963:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2004:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2015:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2000:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2000:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2020:2:16",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1993:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1993:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1993:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2043:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2054:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2039:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2039:18:16"
																	},
																	{
																		"hexValue": "4d617374657220456e7465727461696e65722063616e2774206265207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2059:34:16",
																		"type": "",
																		"value": "Master Entertainer can't be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2032:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2114:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2125:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2110:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2110:18:16"
																	},
																	{
																		"hexValue": "2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2130:10:16",
																		"type": "",
																		"value": " address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2103:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2103:38:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2103:38:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2150:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2162:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2173:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2158:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2158:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2150:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3ac5307462f1240dc69e6b46adc569750e239215835082a7e1180fc5b9080fbe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1930:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1944:4:16",
														"type": ""
													}
												],
												"src": "1779:404:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2362:224:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2379:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2390:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2372:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2372:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2372:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2413:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2424:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2429:2:16",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2402:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2452:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2463:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2448:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2448:18:16"
																	},
																	{
																		"hexValue": "52657761726420546f6b656e2063616e2774206265207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2468:34:16",
																		"type": "",
																		"value": "Reward Token can't be zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2441:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2441:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2441:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2523:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2534:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2519:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2519:18:16"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2539:4:16",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2512:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2512:32:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2512:32:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2553:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2565:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2576:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2561:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2561:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2553:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_705fdf4e1fda478b74d773a311969f26a4ef64c7d0a9ef175974e9bc0ef11a7d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2339:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2353:4:16",
														"type": ""
													}
												],
												"src": "2188:398:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2765:225:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2782:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2793:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2775:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2775:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2775:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2816:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2827:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2812:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2812:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2832:2:16",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2805:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2805:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2805:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2855:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2866:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2851:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2851:18:16"
																	},
																	{
																		"hexValue": "5265776172642053797374656d2063616e2774206265207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2871:34:16",
																		"type": "",
																		"value": "Reward System can't be zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2844:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2844:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2844:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2926:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2937:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2922:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2922:18:16"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2942:5:16",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2915:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2915:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2915:33:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2957:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2969:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2980:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2965:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2965:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2957:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a449262043586a6ed441a315327dedaab1bc73af1db741e04bafa2716ad48b88__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2742:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2756:4:16",
														"type": ""
													}
												],
												"src": "2591:399:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3169:223:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3186:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3197:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3179:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3179:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3179:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3220:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3231:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3216:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3216:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3236:2:16",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3209:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3209:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3209:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3259:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3270:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3255:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3255:18:16"
																	},
																	{
																		"hexValue": "4d617374657220436865662063616e2774206265207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3275:34:16",
																		"type": "",
																		"value": "Master Chef can't be zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3248:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3248:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3248:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3330:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3341:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3326:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3326:18:16"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3346:3:16",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3319:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3319:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3319:31:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3359:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3371:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3382:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3367:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3367:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3359:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d95fc865c22b00bff394cd371f2dc119a9184d8014f02551ac1b63777d8e927b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3146:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3160:4:16",
														"type": ""
													}
												],
												"src": "2995:397:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3442:86:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3506:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3515:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3518:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3508:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3508:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3508:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3465:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3476:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3491:3:16",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3496:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "3487:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3487:11:16"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3500:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "3483:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3483:19:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3472:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3472:31:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3462:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3462:42:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3455:50:16"
															},
															"nodeType": "YulIf",
															"src": "3452:70:16"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3431:5:16",
														"type": ""
													}
												],
												"src": "3397:131:16"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_IERC20_$767t_contract$_IERC20_$767t_contract$_IERC20_$767t_addresst_contract$_IPancakeSwapMasterChef_$3123t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        let value_3 := mload(add(headStart, 96))\n        validator_revert_address(value_3)\n        value3 := value_3\n        let value_4 := mload(add(headStart, 128))\n        validator_revert_address(value_4)\n        value4 := value_4\n        let value_5 := mload(add(headStart, 160))\n        validator_revert_address(value_5)\n        value5 := value_5\n    }\n    function abi_encode_tuple_t_stringliteral_0d98b1c54aa4393b4f5e83c52af1e239027cf51e55005507e2797ab15552f1de__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Stake Token can't be zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_313e3f0c8e984ed735f820e259241f8a14c9ab9a21e04251d8dfba5294922c6d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Flip Token can't be zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3ac5307462f1240dc69e6b46adc569750e239215835082a7e1180fc5b9080fbe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Master Entertainer can't be zero\")\n        mstore(add(headStart, 96), \" address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_705fdf4e1fda478b74d773a311969f26a4ef64c7d0a9ef175974e9bc0ef11a7d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Reward Token can't be zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a449262043586a6ed441a315327dedaab1bc73af1db741e04bafa2716ad48b88__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Reward System can't be zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d95fc865c22b00bff394cd371f2dc119a9184d8014f02551ac1b63777d8e927b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Master Chef can't be zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052670de0b6b3a76400006008553480156200001d57600080fd5b5060405162001c9338038062001c9383398101604081905262000040916200035e565b6200004b336200030e565b6001600160a01b038616620000a75760405162461bcd60e51b815260206004820181905260248201527f466c697020546f6b656e2063616e2774206265207a65726f206164647265737360448201526064015b60405180910390fd5b6001600160a01b038516620001095760405162461bcd60e51b815260206004820152602160248201527f5374616b6520546f6b656e2063616e2774206265207a65726f206164647265736044820152607360f81b60648201526084016200009e565b6001600160a01b0384166200016c5760405162461bcd60e51b815260206004820152602260248201527f52657761726420546f6b656e2063616e2774206265207a65726f206164647265604482015261737360f01b60648201526084016200009e565b6001600160a01b038316620001d05760405162461bcd60e51b815260206004820152602360248201527f5265776172642053797374656d2063616e2774206265207a65726f206164647260448201526265737360e81b60648201526084016200009e565b6001600160a01b038216620002325760405162461bcd60e51b815260206004820152602160248201527f4d617374657220436865662063616e2774206265207a65726f206164647265736044820152607360f81b60648201526084016200009e565b6001600160a01b0381166200029b5760405162461bcd60e51b815260206004820152602860248201527f4d617374657220456e7465727461696e65722063616e2774206265207a65726f604482015267206164647265737360c01b60648201526084016200009e565b600480546001600160a01b03199081166001600160a01b03988916179091556001805482169388169390931790925560078054831691871691909117905560038054821694861694909417909355600280548416928516929092179091556005805490921692169190911790556200040b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060008060008060c087890312156200037857600080fd5b86516200038581620003f2565b60208801519096506200039881620003f2565b6040880151909550620003ab81620003f2565b6060880151909450620003be81620003f2565b6080880151909350620003d181620003f2565b60a0880151909250620003e481620003f2565b809150509295509295509295565b6001600160a01b03811681146200040857600080fd5b50565b611878806200041b6000396000f3fe60806040526004361061010d5760003560e01c80638da5cb5b11610095578063c0d7865511610064578063c0d78655146102ce578063e2bbb158146102ee578063f2fde38b1461030e578063f72b2a4c1461032e578063f7c618c11461034e57600080fd5b80638da5cb5b14610251578063951583c31461026f5780639fbe42e31461028f578063b5644963146102b057600080fd5b806351ed6a30116100dc57806351ed6a30146101a457806354613450146101dc5780635945365e146101fc578063715018a61461021c57806373d387931461023157600080fd5b80630ad58d2f1461011957806313f43a571461013b5780632b0a696d146101645780632b3ea9e11461018457600080fd5b3661011457005b600080fd5b34801561012557600080fd5b506101396101343660046115d1565b61036e565b005b34801561014757600080fd5b5061015160085481565b6040519081526020015b60405180910390f35b34801561017057600080fd5b5061013961017f366004611559565b610445565b34801561019057600080fd5b5061013961019f3660046114fd565b6104aa565b3480156101b057600080fd5b506003546101c4906001600160a01b031681565b6040516001600160a01b03909116815260200161015b565b3480156101e857600080fd5b506101396101f73660046114fd565b610589565b34801561020857600080fd5b506004546101c4906001600160a01b031681565b34801561022857600080fd5b5061013961066b565b34801561023d57600080fd5b506005546101c4906001600160a01b031681565b34801561025d57600080fd5b506000546001600160a01b03166101c4565b34801561027b57600080fd5b5061015161028a366004611559565b6106a1565b34801561029b57600080fd5b506101516102aa366004611559565b50600090565b3480156102bc57600080fd5b506001546001600160a01b03166101c4565b3480156102da57600080fd5b506101396102e93660046114fd565b61072f565b3480156102fa57600080fd5b5061013961030936600461158b565b610805565b34801561031a57600080fd5b506101396103293660046114fd565b61083d565b34801561033a57600080fd5b506101396103493660046115d1565b6108d8565b34801561035a57600080fd5b506002546101c4906001600160a01b031681565b6007546001600160a01b031633146103a15760405162461bcd60e51b8152600401610398906116d2565b60405180910390fd5b826103b5576103b083836109fe565b61041b565b600154604051630441a3e760e41b815260048101859052602481018490526001600160a01b039091169063441a3e7090604401600060405180830381600087803b15801561040257600080fd5b505af1158015610416573d6000803e3d6000fd5b505050505b811561043857600354610438906001600160a01b03168284610a67565b610440610aca565b505050565b6000546001600160a01b0316331461046f5760405162461bcd60e51b815260040161039890611755565b60088190556040518181527fa5ce75f7f52a2e09706441f9b9106cfff4275fd35963a11dad9c45b9ae50b2889060200160405180910390a150565b6000546001600160a01b031633146104d45760405162461bcd60e51b815260040161039890611755565b6001600160a01b03811661053d5760405162461bcd60e51b815260206004820152602a60248201527f5265776172642053797374656d2063616e27742062652073657420746f207a65604482015269726f206164647265737360b01b6064820152608401610398565b600580546001600160a01b0319166001600160a01b03831690811790915560405133907fbb802456c4e53c17a623585d276747174bcf39120266b12c32c0bb73df94acb690600090a350565b6000546001600160a01b031633146105b35760405162461bcd60e51b815260040161039890611755565b6001600160a01b0381166106215760405162461bcd60e51b815260206004820152602f60248201527f4d617374657220456e7465727461696e65722063616e2774206265207365742060448201526e746f207a65726f206164647265737360881b6064820152608401610398565b600780546001600160a01b0319166001600160a01b0383169081179091556040517fbf63a13967243f035997ab7188eae733cdf9c8f25ea71389d3a0615450a0728690600090a250565b6000546001600160a01b031633146106955760405162461bcd60e51b815260040161039890611755565b61069f6000610bbc565b565b6001546040516393f1a40b60e01b81526004810183905230602482015260009182916001600160a01b03909116906393f1a40b90604401604080518083038186803b1580156106ef57600080fd5b505afa158015610703573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072791906115ad565b509392505050565b6000546001600160a01b031633146107595760405162461bcd60e51b815260040161039890611755565b6001600160a01b0381166107bb5760405162461bcd60e51b815260206004820152602360248201527f526f757465722063616e27742062652073657420746f207a65726f206164647260448201526265737360e81b6064820152608401610398565b600680546001600160a01b0319166001600160a01b0383169081179091556040517f6de4326a8b9054d72d9dbab97d27bc4edffadee7d966f5af9cc4eafdaf8e545590600090a250565b6007546001600160a01b0316331461082f5760405162461bcd60e51b8152600401610398906116d2565b6108398282610c0c565b5050565b6000546001600160a01b031633146108675760405162461bcd60e51b815260040161039890611755565b6001600160a01b0381166108cc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610398565b6108d581610bbc565b50565b6007546001600160a01b031633146109025760405162461bcd60e51b8152600401610398906116d2565b600154604051635459cf7760e11b8152600481018590526001600160a01b039091169063a8b39eee90602401600060405180830381600087803b15801561094857600080fd5b505af115801561095c573d6000803e3d6000fd5b505060035461097892506001600160a01b031690508284610d2f565b6003546040516370a0823160e01b81523060048201526104409185916001600160a01b03909116906370a082319060240160206040518083038186803b1580156109c157600080fd5b505afa1580156109d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f99190611572565b610c0c565b600154604051630441a3e760e41b815260048101849052602481018390526001600160a01b039091169063441a3e7090604401600060405180830381600087803b158015610a4b57600080fd5b505af1158015610a5f573d6000803e3d6000fd5b505050505050565b6040516001600160a01b03831660248201526044810182905261044090849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610f29565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610b0e57600080fd5b505afa158015610b22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b469190611572565b6006549091506001600160a01b0316158015610b625750600081115b15610b8f576002546108d5906001600160a01b0316610b896000546001600160a01b031690565b83610d2f565b60085481106108d557600254600090610bb1906001600160a01b031683610ffb565b90506108398161101a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354610c24906001600160a01b031633308461117d565b60035460015460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b390604401602060405180830381600087803b158015610c7457600080fd5b505af1158015610c88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cac9190611537565b5081610cc157610cbc8282610cc1565b610d27565b600154604051631c57762b60e31b815260048101849052602481018390526001600160a01b039091169063e2bbb15890604401600060405180830381600087803b158015610d0e57600080fd5b505af1158015610d22573d6000803e3d6000fd5b505050505b610839610aca565b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a082319060240160206040518083038186803b158015610d7157600080fd5b505afa158015610d85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da99190611572565b9050600081831115610e3e5760405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905286169063a9059cbb90604401602060405180830381600087803b158015610dff57600080fd5b505af1158015610e13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e379190611537565b9050610ec3565b60405163a9059cbb60e01b81526001600160a01b0385811660048301526024820185905286169063a9059cbb90604401602060405180830381600087803b158015610e8857600080fd5b505af1158015610e9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec09190611537565b90505b80610f225760405162461bcd60e51b815260206004820152602960248201527f41424f41543a3a73616665546f6b656e5472616e736665723a207472616e7366604482015268195c8819985a5b195960ba1b6064820152608401610398565b5050505050565b6000610f7e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111bb9092919063ffffffff16565b8051909150156104405780806020019051810190610f9c9190611537565b6104405760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610398565b60004761100884846111d4565b6110124782611390565b949350505050565b6040805160028082526060820183526000926020830190803683375050600654604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c464892506004808301926020929190829003018186803b15801561107f57600080fd5b505afa158015611093573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b7919061151a565b816000815181106110ca576110ca611817565b6001600160a01b0392831660209182029290920101526004548251911690829060019081106110fb576110fb611817565b6001600160a01b03928316602091820292909201015260065460055460405163b6f9de9560e01b81529183169263b6f9de9592869261114792600092889290911690429060040161166a565b6000604051808303818588803b15801561116057600080fd5b505af1158015611174573d6000803e3d6000fd5b50505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526111b59085906323b872dd60e01b90608401610a93565b50505050565b60606111ca848460008561139c565b90505b9392505050565b604080516002808252606082018352600092602083019080368337019050509050828160008151811061120957611209611817565b6001600160a01b03928316602091820292909201810191909152600654604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b15801561125d57600080fd5b505afa158015611271573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611295919061151a565b816001815181106112a8576112a8611817565b6001600160a01b03928316602091820292909201015260065460405163095ea7b360e01b81529082166004820152602481018490529084169063095ea7b390604401602060405180830381600087803b15801561130457600080fd5b505af1158015611318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133c9190611537565b5060065460405163791ac94760e01b81526001600160a01b039091169063791ac9479061137690859060009086903090429060040161178a565b600060405180830381600087803b15801561116057600080fd5b60006111cd82846117c6565b6060824710156113fd5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610398565b843b61144b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610398565b600080866001600160a01b03168587604051611467919061164e565b60006040518083038185875af1925050503d80600081146114a4576040519150601f19603f3d011682016040523d82523d6000602084013e6114a9565b606091505b50915091506114b98282866114c4565b979650505050505050565b606083156114d35750816111cd565b8251156114e35782518084602001fd5b8160405162461bcd60e51b8152600401610398919061169f565b60006020828403121561150f57600080fd5b81356111cd8161182d565b60006020828403121561152c57600080fd5b81516111cd8161182d565b60006020828403121561154957600080fd5b815180151581146111cd57600080fd5b60006020828403121561156b57600080fd5b5035919050565b60006020828403121561158457600080fd5b5051919050565b6000806040838503121561159e57600080fd5b50508035926020909101359150565b600080604083850312156115c057600080fd5b505080516020909101519092909150565b6000806000606084860312156115e657600080fd5b833592506020840135915060408401356115ff8161182d565b809150509250925092565b600081518084526020808501945080840160005b838110156116435781516001600160a01b03168752958201959082019060010161161e565b509495945050505050565b600082516116608184602087016117eb565b9190910192915050565b848152608060208201526000611683608083018661160a565b6001600160a01b03949094166040830152506060015292915050565b60208152600082518060208401526116be8160408501602087016117eb565b601f01601f19169190910160400192915050565b60208082526059908201527f41424f41543a3a6f6e6c794d6173746572456e7465727461696e65723a204f6e60408201527f6c7920746865206d617374657220656e7465727461696e657220697320616c6c60608201527f6f77656420746f2063616c6c2074686973206d6574686f642100000000000000608082015260a00190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b85815284602082015260a0604082015260006117a960a083018661160a565b6001600160a01b0394909416606083015250608001529392505050565b6000828210156117e657634e487b7160e01b600052601160045260246000fd5b500390565b60005b838110156118065781810151838201526020016117ee565b838111156111b55750506000910152565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03811681146108d557600080fdfea2646970667358221220b59443e4ff04ef171c5f5ecbb3b728c5380c4b8aa0ab3a7010d9b73a9935f60c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1C93 CODESIZE SUB DUP1 PUSH3 0x1C93 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x40 SWAP2 PUSH3 0x35E JUMP JUMPDEST PUSH3 0x4B CALLER PUSH3 0x30E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH3 0xA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C697020546F6B656E2063616E2774206265207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH3 0x109 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B6520546F6B656E2063616E2774206265207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x9E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x16C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657761726420546F6B656E2063616E2774206265207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x9E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x1D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265776172642053797374656D2063616E2774206265207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x9E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x232 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617374657220436865662063616E2774206265207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x9E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x29B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617374657220456E7465727461696E65722063616E2774206265207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2061646472657373 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x9E JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD DUP3 AND SWAP4 DUP9 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x7 DUP1 SLOAD DUP4 AND SWAP2 DUP8 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP3 AND SWAP5 DUP7 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 AND SWAP3 DUP6 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x40B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x385 DUP2 PUSH3 0x3F2 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MLOAD SWAP1 SWAP7 POP PUSH3 0x398 DUP2 PUSH3 0x3F2 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MLOAD SWAP1 SWAP6 POP PUSH3 0x3AB DUP2 PUSH3 0x3F2 JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MLOAD SWAP1 SWAP5 POP PUSH3 0x3BE DUP2 PUSH3 0x3F2 JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MLOAD SWAP1 SWAP4 POP PUSH3 0x3D1 DUP2 PUSH3 0x3F2 JUMP JUMPDEST PUSH1 0xA0 DUP9 ADD MLOAD SWAP1 SWAP3 POP PUSH3 0x3E4 DUP2 PUSH3 0x3F2 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1878 DUP1 PUSH3 0x41B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC0D78655 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC0D78655 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xF72B2A4C EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x951583C3 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x9FBE42E3 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xB5644963 EQ PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x51ED6A30 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x51ED6A30 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x54613450 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x5945365E EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x73D38793 EQ PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAD58D2F EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x13F43A57 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x2B0A696D EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x2B3EA9E1 EQ PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x114 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x36E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x1559 JUMP JUMPDEST PUSH2 0x445 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x14FD JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1C4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x14FD JUMP JUMPDEST PUSH2 0x589 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x1C4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x66B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x1C4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0x1559 JUMP JUMPDEST PUSH2 0x6A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x2AA CALLDATASIZE PUSH1 0x4 PUSH2 0x1559 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x14FD JUMP JUMPDEST PUSH2 0x72F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x309 CALLDATASIZE PUSH1 0x4 PUSH2 0x158B JUMP JUMPDEST PUSH2 0x805 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x329 CALLDATASIZE PUSH1 0x4 PUSH2 0x14FD JUMP JUMPDEST PUSH2 0x83D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x349 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x8D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x1C4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH2 0x3B5 JUMPI PUSH2 0x3B0 DUP4 DUP4 PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x41B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x441A3E7 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x441A3E70 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x416 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP2 ISZERO PUSH2 0x438 JUMPI PUSH1 0x3 SLOAD PUSH2 0x438 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP5 PUSH2 0xA67 JUMP JUMPDEST PUSH2 0x440 PUSH2 0xACA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x46F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xA5CE75F7F52A2E09706441F9B9106CFFF4275FD35963A11DAD9C45B9AE50B288 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x53D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265776172642053797374656D2063616E27742062652073657420746F207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x398 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0xBB802456C4E53C17A623585D276747174BCF39120266B12C32C0BB73DF94ACB6 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x621 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617374657220456E7465727461696E65722063616E27742062652073657420 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x746F207A65726F2061646472657373 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x398 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xBF63A13967243F035997AB7188EAE733CDF9C8F25EA71389D3A0615450A07286 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x695 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH2 0x69F PUSH1 0x0 PUSH2 0xBBC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x93F1A40B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x93F1A40B SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x703 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x727 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x759 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F757465722063616E27742062652073657420746F207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x398 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6DE4326A8B9054D72D9DBAB97D27BC4EDFFADEE7D966F5AF9CC4EAFDAF8E5455 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x82F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH2 0x839 DUP3 DUP3 PUSH2 0xC0C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x867 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x398 JUMP JUMPDEST PUSH2 0x8D5 DUP2 PUSH2 0xBBC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x902 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5459CF77 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA8B39EEE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x948 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x95C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH2 0x978 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP3 DUP5 PUSH2 0xD2F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x440 SWAP2 DUP6 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F9 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0xC0C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x441A3E7 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x441A3E70 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x440 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB46 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO PUSH2 0xB62 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0xB8F JUMPI PUSH1 0x2 SLOAD PUSH2 0x8D5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB89 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP4 PUSH2 0xD2F JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT PUSH2 0x8D5 JUMPI PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xBB1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xFFB JUMP JUMPDEST SWAP1 POP PUSH2 0x839 DUP2 PUSH2 0x101A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xC24 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0x117D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC88 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCAC SWAP2 SWAP1 PUSH2 0x1537 JUMP JUMPDEST POP DUP2 PUSH2 0xCC1 JUMPI PUSH2 0xCBC DUP3 DUP3 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0xD27 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1C57762B PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xE2BBB158 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x839 PUSH2 0xACA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD85 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDA9 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0xE3E JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP7 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE13 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE37 SWAP2 SWAP1 PUSH2 0x1537 JUMP JUMPDEST SWAP1 POP PUSH2 0xEC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE DUP7 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE9C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEC0 SWAP2 SWAP1 PUSH2 0x1537 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH2 0xF22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73616665546F6B656E5472616E736665723A207472616E7366 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x195C8819985A5B1959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x398 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7E DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11BB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x440 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xF9C SWAP2 SWAP1 PUSH2 0x1537 JUMP JUMPDEST PUSH2 0x440 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x398 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE PUSH2 0x1008 DUP5 DUP5 PUSH2 0x11D4 JUMP JUMPDEST PUSH2 0x1012 SELFBALANCE DUP3 PUSH2 0x1390 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP4 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 POP PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x107F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1093 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10B7 SWAP2 SWAP1 PUSH2 0x151A JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x10CA JUMPI PUSH2 0x10CA PUSH2 0x1817 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x4 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x10FB JUMPI PUSH2 0x10FB PUSH2 0x1817 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB6F9DE95 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP4 AND SWAP3 PUSH4 0xB6F9DE95 SWAP3 DUP7 SWAP3 PUSH2 0x1147 SWAP3 PUSH1 0x0 SWAP3 DUP9 SWAP3 SWAP1 SWAP2 AND SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x166A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1174 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x11B5 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0xA93 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x11CA DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x139C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1209 JUMPI PUSH2 0x1209 PUSH2 0x1817 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x125D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1271 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1295 SWAP2 SWAP1 PUSH2 0x151A JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x12A8 JUMPI PUSH2 0x12A8 PUSH2 0x1817 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP5 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1318 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x133C SWAP2 SWAP1 PUSH2 0x1537 JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x791AC947 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0x1376 SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x178A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11CD DUP3 DUP5 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x13FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x398 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x144B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x398 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1467 SWAP2 SWAP1 PUSH2 0x164E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14A4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x14B9 DUP3 DUP3 DUP7 PUSH2 0x14C4 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x14D3 JUMPI POP DUP2 PUSH2 0x11CD JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x14E3 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x169F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x150F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11CD DUP2 PUSH2 0x182D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x152C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x11CD DUP2 PUSH2 0x182D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x156B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x159E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x15FF DUP2 PUSH2 0x182D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1643 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x161E JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1660 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x17EB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1683 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x160A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x16BE DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x59 SWAP1 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A6F6E6C794D6173746572456E7465727461696E65723A204F6E PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6C7920746865206D617374657220656E7465727461696E657220697320616C6C PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x6F77656420746F2063616C6C2074686973206D6574686F642100000000000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x17A9 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x160A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x17E6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1806 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x17EE JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x11B5 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8D5 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 SWAP5 NUMBER 0xE4 SELFDESTRUCT DIV 0xEF OR SHR 0x5F 0x5E 0xCB 0xB3 0xB7 0x28 0xC5 CODESIZE 0xC 0x4B DUP11 LOG0 0xAB GASPRICE PUSH17 0x10D9B73A9935F60C64736F6C6343000807 STOP CALLER ",
							"sourceMap": "754:8915:12:-:0;;;1598:7;1565:40;;2690:928;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;665:10:7;867:9:0;:23::i;:::-;-1:-1:-1;;;;;2867:33:12;;2859:78;;;;-1:-1:-1;;;2859:78:12;;1620:2:16;2859:78:12;;;1602:21:16;;;1639:18;;;1632:30;1698:34;1678:18;;;1671:62;1750:18;;2859:78:12;;;;;;;;;-1:-1:-1;;;;;2955:34:12;;2947:80;;;;-1:-1:-1;;;2947:80:12;;1218:2:16;2947:80:12;;;1200:21:16;1257:2;1237:18;;;1230:30;1296:34;1276:18;;;1269:62;-1:-1:-1;;;1347:18:16;;;1340:31;1388:19;;2947:80:12;1016:397:16;2947:80:12;-1:-1:-1;;;;;3045:35:12;;3037:82;;;;-1:-1:-1;;;3037:82:12;;2390:2:16;3037:82:12;;;2372:21:16;2429:2;2409:18;;;2402:30;2468:34;2448:18;;;2441:62;-1:-1:-1;;;2519:18:16;;;2512:32;2561:19;;3037:82:12;2188:398:16;3037:82:12;-1:-1:-1;;;;;3137:27:12;;3129:75;;;;-1:-1:-1;;;3129:75:12;;2793:2:16;3129:75:12;;;2775:21:16;2832:2;2812:18;;;2805:30;2871:34;2851:18;;;2844:62;-1:-1:-1;;;2922:18:16;;;2915:33;2965:19;;3129:75:12;2591:399:16;3129:75:12;-1:-1:-1;;;;;3222:34:12;;3214:80;;;;-1:-1:-1;;;3214:80:12;;3197:2:16;3214:80:12;;;3179:21:16;3236:2;3216:18;;;3209:30;3275:34;3255:18;;;3248:62;-1:-1:-1;;;3326:18:16;;;3319:31;3367:19;;3214:80:12;2995:397:16;3214:80:12;-1:-1:-1;;;;;3312:32:12;;3304:85;;;;-1:-1:-1;;;3304:85:12;;1981:2:16;3304:85:12;;;1963:21:16;2020:2;2000:18;;;1993:30;2059:34;2039:18;;;2032:62;-1:-1:-1;;;2110:18:16;;;2103:38;2158:19;;3304:85:12;1779:404:16;3304:85:12;3399:9;:22;;-1:-1:-1;;;;;;3399:22:12;;;-1:-1:-1;;;;;3399:22:12;;;;;;;-1:-1:-1;3431:24:12;;;;;;;;;;;;;;3465:17;:38;;;;;;;;;;;;;-1:-1:-1;3513:24:12;;;;;;;;;;;;;;3547:11;:26;;;;;;;;;;;;;;-1:-1:-1;3583:28:12;;;;;;;;;;;;;754:8915;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:997:16:-;202:6;210;218;226;234;242;295:3;283:9;274:7;270:23;266:33;263:53;;;312:1;309;302:12;263:53;344:9;338:16;363:31;388:5;363:31;:::i;:::-;463:2;448:18;;442:25;413:5;;-1:-1:-1;476:33:16;442:25;476:33;:::i;:::-;580:2;565:18;;559:25;528:7;;-1:-1:-1;593:33:16;559:25;593:33;:::i;:::-;697:2;682:18;;676:25;645:7;;-1:-1:-1;710:33:16;676:25;710:33;:::i;:::-;814:3;799:19;;793:26;762:7;;-1:-1:-1;828:33:16;793:26;828:33;:::i;:::-;932:3;917:19;;911:26;880:7;;-1:-1:-1;946:33:16;911:26;946:33;:::i;:::-;998:7;988:17;;;14:997;;;;;;;;:::o;3397:131::-;-1:-1:-1;;;;;3472:31:16;;3462:42;;3452:70;;3518:1;3515;3508:12;3452:70;3397:131;:::o;:::-;754:8915:12;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_2634": {
									"entryPoint": null,
									"id": 2634,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1015": {
									"entryPoint": 3881,
									"id": 1015,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_deposit_2704": {
									"entryPoint": 3084,
									"id": 2704,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1323": {
									"entryPoint": null,
									"id": 1323,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setOwner_102": {
									"entryPoint": 3004,
									"id": 102,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_verifyCallResult_1311": {
									"entryPoint": 5316,
									"id": 1311,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@deposit_2650": {
									"entryPoint": 2053,
									"id": 2650,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@emergencyWithdraw_2786": {
									"entryPoint": 2264,
									"id": 2786,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@enterStake_2804": {
									"entryPoint": null,
									"id": 2804,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@flipToken_2323": {
									"entryPoint": null,
									"id": 2323,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_1177": {
									"entryPoint": 5020,
									"id": 1177,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_1107": {
									"entryPoint": 4539,
									"id": 1107,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getDepositFee_2630": {
									"entryPoint": null,
									"id": 2630,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getLiquidity_2619": {
									"entryPoint": 1697,
									"id": 2619,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMasterChef_2597": {
									"entryPoint": null,
									"id": 2597,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isContract_1036": {
									"entryPoint": null,
									"id": 1036,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@leaveStake_2819": {
									"entryPoint": 2558,
									"id": 2819,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@minAmountToSwap_2333": {
									"entryPoint": null,
									"id": 2333,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 1643,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardSystem_2325": {
									"entryPoint": null,
									"id": 2325,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardToken_2317": {
									"entryPoint": null,
									"id": 2317,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTokenTransfer_3063": {
									"entryPoint": 3375,
									"id": 3063,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_849": {
									"entryPoint": 4477,
									"id": 849,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_823": {
									"entryPoint": 2663,
									"id": 823,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setMasterEntertainer_2569": {
									"entryPoint": 1417,
									"id": 2569,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMinAmountToSwap_2585": {
									"entryPoint": 1093,
									"id": 2585,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRewardSystem_2510": {
									"entryPoint": 1194,
									"id": 2510,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRouter_2543": {
									"entryPoint": 1839,
									"id": 2543,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakeToken_2320": {
									"entryPoint": null,
									"id": 2320,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_1524": {
									"entryPoint": 5008,
									"id": 1524,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@swapEthForTokens_3011": {
									"entryPoint": 4122,
									"id": 3011,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@swapForEth_2904": {
									"entryPoint": 4091,
									"id": 2904,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@swapToken_2871": {
									"entryPoint": 2762,
									"id": 2871,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapTokensForEth_2965": {
									"entryPoint": 4564,
									"id": 2965,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 2109,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_2750": {
									"entryPoint": 878,
									"id": 2750,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 5402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IUniswapV2Router02_$2283": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256_fromMemory": {
									"entryPoint": 5549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_address": {
									"entryPoint": 5585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_array_address_dyn": {
									"entryPoint": 5642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$767__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5738,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_21e4842dc146c03ef71494afc50aa244fd2e52b0ec7b2dc19cb5f11801f005ae__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5a9cac642e8596a17e397670f192ad1fb0b5021eb5f42d99960d4ffd67203f2a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_66684ac81254500ff8f8680c7efdc6b9f9d87b6b36566528fe4eb381df689dbc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c0f52bf107b9ed5d7e76e90e7140bb3b6030f0eb634d11644cfddbbf2f383b8e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d7d88b583e6e4d65f20b31e494ad419841cf43f946ab532f9ed552486f9d47ef__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6026,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 6123,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6167,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 6189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11356:16",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:177:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:16"
															},
															"nodeType": "YulIf",
															"src": "94:52:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "225:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "200:24:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "200:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "200:31:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "240:15:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "250:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "240:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:16",
														"type": ""
													}
												],
												"src": "14:247:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:170:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "393:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "402:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "405:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "395:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "395:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "395:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "368:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "377:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "364:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "364:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "389:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "360:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:32:16"
															},
															"nodeType": "YulIf",
															"src": "357:52:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "418:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "437:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "431:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "431:16:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "422:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "481:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "456:24:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "456:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "456:31:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "496:15:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "506:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "496:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "313:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "324:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "336:6:16",
														"type": ""
													}
												],
												"src": "266:251:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "600:199:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "646:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "655:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "658:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "648:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "648:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "648:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "621:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "630:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "617:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "617:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "642:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "613:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "613:32:16"
															},
															"nodeType": "YulIf",
															"src": "610:52:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "671:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "690:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "684:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:16:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "675:5:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "753:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "762:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "765:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "755:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "755:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "755:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "722:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "743:5:16"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "736:6:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "736:13:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "729:6:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "729:21:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "719:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "719:32:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "712:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "712:40:16"
															},
															"nodeType": "YulIf",
															"src": "709:60:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "778:15:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "788:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "778:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "566:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "577:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "589:6:16",
														"type": ""
													}
												],
												"src": "522:277:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "901:177:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "947:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "956:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "959:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "949:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "949:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "949:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "922:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "931:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "918:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "918:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "943:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "914:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "914:32:16"
															},
															"nodeType": "YulIf",
															"src": "911:52:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "972:36:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "998:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "985:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "985:23:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "976:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1042:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1017:24:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1017:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1017:31:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1057:15:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1067:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1057:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IUniswapV2Router02_$2283",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "867:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "878:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "890:6:16",
														"type": ""
													}
												],
												"src": "804:274:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1153:110:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1199:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1208:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1211:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1201:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1201:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1201:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1174:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1183:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1170:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1170:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1195:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:32:16"
															},
															"nodeType": "YulIf",
															"src": "1163:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1224:33:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1247:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1234:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1234:23:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1224:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1119:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1130:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1142:6:16",
														"type": ""
													}
												],
												"src": "1083:180:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1349:103:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1395:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1404:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1407:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1397:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1397:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1397:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1370:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1379:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1366:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1366:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1391:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1362:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:32:16"
															},
															"nodeType": "YulIf",
															"src": "1359:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1420:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1436:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1430:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1430:16:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1420:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1326:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1338:6:16",
														"type": ""
													}
												],
												"src": "1268:184:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1544:161:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1590:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1599:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1602:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1592:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1592:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1592:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1574:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1561:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1561:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1586:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1557:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1557:32:16"
															},
															"nodeType": "YulIf",
															"src": "1554:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1615:33:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1638:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1625:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1625:23:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1615:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1657:42:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1684:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1695:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1680:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1680:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1667:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:32:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1502:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1513:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1525:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1533:6:16",
														"type": ""
													}
												],
												"src": "1457:248:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:147:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1854:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1863:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1866:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1856:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1856:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1856:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1829:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1838:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1825:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1825:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1850:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1821:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1821:32:16"
															},
															"nodeType": "YulIf",
															"src": "1818:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1879:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1895:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1889:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1889:16:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1879:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1914:35:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1934:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1945:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1930:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1930:18:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1924:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1924:25:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1914:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1766:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1777:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1789:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1797:6:16",
														"type": ""
													}
												],
												"src": "1710:245:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2064:279:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2110:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2119:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2122:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2112:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2112:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2112:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2085:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2094:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2081:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2081:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2106:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2077:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2077:32:16"
															},
															"nodeType": "YulIf",
															"src": "2074:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2135:33:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2158:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2145:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2145:23:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2135:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2177:42:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2204:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2215:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2200:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2200:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2187:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2187:32:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2177:6:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2228:45:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2258:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2269:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2254:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2254:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2241:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2241:32:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2232:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2282:24:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2282:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2282:31:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:15:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2332:5:16"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2014:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2025:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2037:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2045:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2053:6:16",
														"type": ""
													}
												],
												"src": "1960:383:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2409:400:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2419:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2439:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2433:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2433:12:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2423:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2461:3:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2466:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2454:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2454:19:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2454:19:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2482:14:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2492:4:16",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2486:2:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2505:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2516:3:16"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2521:2:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2512:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2512:12:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2505:3:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2533:28:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2551:5:16"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2558:2:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2547:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2547:14:16"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "2537:6:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2570:10:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2579:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2574:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2638:146:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2659:3:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2674:6:16"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "2668:5:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2668:13:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2691:3:16",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2696:1:16",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2687:3:16"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2687:11:16"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2700:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "2683:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2683:19:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2664:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2664:39:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2652:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2652:52:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2652:52:16"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2717:19:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2728:3:16"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2733:2:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2724:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2724:12:16"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2717:3:16"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2749:25:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2763:6:16"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2771:2:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2759:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2759:15:16"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2749:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2600:1:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2603:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2597:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2597:13:16"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2611:18:16",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2613:14:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2622:1:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2625:1:16",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2618:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2618:9:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2613:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2593:3:16",
																"statements": []
															},
															"src": "2589:195:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2793:10:16",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2800:3:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2793:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2386:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2393:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2401:3:16",
														"type": ""
													}
												],
												"src": "2348:461:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2951:137:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2961:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2981:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2975:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2975:13:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2965:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3023:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3031:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3019:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3019:17:16"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3038:3:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3043:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2997:21:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2997:53:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2997:53:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3059:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3070:3:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3075:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3066:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3066:16:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3059:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2927:3:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2932:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2943:3:16",
														"type": ""
													}
												],
												"src": "2814:274:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3194:102:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3204:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3216:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3212:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3212:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3204:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3246:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3261:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3277:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3282:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3273:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3273:11:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3286:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3269:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3269:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3257:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3257:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3239:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3239:51:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3239:51:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3163:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3174:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3185:4:16",
														"type": ""
													}
												],
												"src": "3093:203:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3458:218:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3468:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3480:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3491:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3476:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3476:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3468:4:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3503:29:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3521:3:16",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3526:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3517:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3517:11:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3530:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3513:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3513:19:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3507:2:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3548:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3563:6:16"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3571:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3559:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3559:15:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3541:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3541:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3541:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3595:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3606:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3591:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3591:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3615:6:16"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3623:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3611:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3611:15:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3584:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3584:43:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3584:43:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3647:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3658:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3643:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3643:18:16"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3636:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3636:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3636:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3411:9:16",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3422:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3430:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3438:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3449:4:16",
														"type": ""
													}
												],
												"src": "3301:375:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3810:145:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3820:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3832:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3843:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3828:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3828:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3820:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3862:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3877:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3893:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3898:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3889:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3889:11:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3902:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3885:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3885:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3873:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3873:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3855:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3855:51:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3855:51:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3926:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3937:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3922:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3922:18:16"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3942:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3915:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3915:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3915:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3771:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3782:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3790:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3801:4:16",
														"type": ""
													}
												],
												"src": "3681:274:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4075:102:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4085:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4097:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4108:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4093:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4093:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4085:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4127:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4142:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4158:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4163:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4154:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4154:11:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4167:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4150:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4150:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4138:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4138:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4120:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4120:51:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4120:51:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$767__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4044:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4055:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4066:4:16",
														"type": ""
													}
												],
												"src": "3960:217:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4425:267:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4442:9:16"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4453:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:25:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4435:25:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4480:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4491:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4476:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4476:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4496:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4469:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4469:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4469:31:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4509:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4546:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4558:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4569:3:16",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4554:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4554:19:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4517:28:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4517:57:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4509:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4594:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4605:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4590:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4590:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "4614:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4630:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4635:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4626:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4626:11:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4639:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4622:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4622:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4610:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4610:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4583:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4583:60:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4583:60:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4663:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4674:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4659:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4659:18:16"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4679:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4652:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4652:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4652:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4370:9:16",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4381:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4389:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4397:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4405:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4416:4:16",
														"type": ""
													}
												],
												"src": "4182:510:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4818:262:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4835:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4846:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4828:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4828:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4828:21:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4858:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4878:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4872:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4872:13:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4862:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4905:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4916:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4901:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4901:18:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4921:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4894:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4894:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4894:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4963:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4971:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4959:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4959:15:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4980:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4991:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4976:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4976:18:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4996:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4937:21:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4937:66:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4937:66:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5012:62:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5028:9:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "5047:6:16"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5055:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5043:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5043:15:16"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5064:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "5060:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5060:7:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "5039:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5039:29:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5024:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5024:45:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5071:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5020:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5020:54:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5012:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4787:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4798:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4809:4:16",
														"type": ""
													}
												],
												"src": "4697:383:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5259:319:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5276:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5287:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5269:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5269:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5269:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5310:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5321:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5306:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5306:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5326:2:16",
																		"type": "",
																		"value": "89"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5299:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5299:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5299:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5349:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5360:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5345:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5345:18:16"
																	},
																	{
																		"hexValue": "41424f41543a3a6f6e6c794d6173746572456e7465727461696e65723a204f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5365:34:16",
																		"type": "",
																		"value": "ABOAT::onlyMasterEntertainer: On"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5338:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5338:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5338:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5420:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5431:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5416:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5416:18:16"
																	},
																	{
																		"hexValue": "6c7920746865206d617374657220656e7465727461696e657220697320616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5436:34:16",
																		"type": "",
																		"value": "ly the master entertainer is all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5409:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5409:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5409:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5491:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5502:3:16",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5487:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5487:19:16"
																	},
																	{
																		"hexValue": "6f77656420746f2063616c6c2074686973206d6574686f6421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5508:27:16",
																		"type": "",
																		"value": "owed to call this method!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5480:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5480:56:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5480:56:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5545:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5557:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5568:3:16",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5553:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5553:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5545:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_21e4842dc146c03ef71494afc50aa244fd2e52b0ec7b2dc19cb5f11801f005ae__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5236:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5250:4:16",
														"type": ""
													}
												],
												"src": "5085:493:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5757:228:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5774:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5785:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5767:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5767:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5767:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5808:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5819:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5804:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5804:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5824:2:16",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5797:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5797:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5797:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5847:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5858:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5843:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5843:18:16"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5863:34:16",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5836:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5836:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5836:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5918:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5929:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5914:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5914:18:16"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5934:8:16",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5907:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5907:36:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5907:36:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5952:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5964:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5975:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5960:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5960:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5952:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5734:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5748:4:16",
														"type": ""
													}
												],
												"src": "5583:402:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6164:228:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6181:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6192:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6174:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6174:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6174:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6215:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6226:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6211:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6211:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6231:2:16",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6204:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6204:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6204:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6254:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6265:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6250:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6250:18:16"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6270:34:16",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6243:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6243:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6243:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6325:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6336:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6321:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6321:18:16"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6341:8:16",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6314:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6314:36:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6314:36:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6359:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6371:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6382:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6367:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6367:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6359:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6141:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6155:4:16",
														"type": ""
													}
												],
												"src": "5990:402:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6571:225:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6588:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6599:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6581:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6581:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6581:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6622:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6633:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6618:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6618:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6638:2:16",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6611:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6611:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6611:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6661:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6672:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6657:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6657:18:16"
																	},
																	{
																		"hexValue": "526f757465722063616e27742062652073657420746f207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6677:34:16",
																		"type": "",
																		"value": "Router can't be set to zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6650:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6650:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6650:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6732:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6743:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6728:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6728:18:16"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6748:5:16",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6721:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6721:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6721:33:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6763:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6775:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6786:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6771:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6771:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6763:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5a9cac642e8596a17e397670f192ad1fb0b5021eb5f42d99960d4ffd67203f2a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6548:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6562:4:16",
														"type": ""
													}
												],
												"src": "6397:399:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6975:231:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6992:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7003:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6985:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6985:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6985:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7026:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7037:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7022:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7022:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7042:2:16",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7015:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7015:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7015:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7065:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7076:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7061:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7061:18:16"
																	},
																	{
																		"hexValue": "41424f41543a3a73616665546f6b656e5472616e736665723a207472616e7366",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7081:34:16",
																		"type": "",
																		"value": "ABOAT::safeTokenTransfer: transf"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7054:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7054:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7054:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7136:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7147:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7132:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7132:18:16"
																	},
																	{
																		"hexValue": "6572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7152:11:16",
																		"type": "",
																		"value": "er failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7125:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7125:39:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7125:39:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7173:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7185:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7196:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7181:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7181:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7173:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_66684ac81254500ff8f8680c7efdc6b9f9d87b6b36566528fe4eb381df689dbc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6952:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6966:4:16",
														"type": ""
													}
												],
												"src": "6801:405:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7385:182:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7402:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7413:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7395:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7395:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7395:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7436:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7447:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7432:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7432:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7452:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7425:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7425:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7425:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7475:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7486:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7471:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7471:18:16"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7491:34:16",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7464:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7464:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7464:62:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7535:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7547:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7558:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7543:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7543:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7535:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7362:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7376:4:16",
														"type": ""
													}
												],
												"src": "7211:356:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7746:237:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7763:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7774:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7756:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7756:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7756:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7797:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7808:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7793:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7793:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7813:2:16",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7786:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7786:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7786:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7836:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7847:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7832:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7832:18:16"
																	},
																	{
																		"hexValue": "4d617374657220456e7465727461696e65722063616e27742062652073657420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7852:34:16",
																		"type": "",
																		"value": "Master Entertainer can't be set "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7825:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7825:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7825:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7907:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7918:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7903:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7903:18:16"
																	},
																	{
																		"hexValue": "746f207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7923:17:16",
																		"type": "",
																		"value": "to zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7896:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7896:45:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7896:45:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7950:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7962:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7973:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7958:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7958:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7950:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c0f52bf107b9ed5d7e76e90e7140bb3b6030f0eb634d11644cfddbbf2f383b8e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7723:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7737:4:16",
														"type": ""
													}
												],
												"src": "7572:411:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8162:179:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8179:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8190:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8172:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8172:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8172:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8213:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8224:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8209:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8209:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8229:2:16",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8202:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8202:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8202:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8252:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8263:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8248:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8248:18:16"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8268:31:16",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8241:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8241:59:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8241:59:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8309:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8321:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8332:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8317:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8317:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8309:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8139:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8153:4:16",
														"type": ""
													}
												],
												"src": "7988:353:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8520:232:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8537:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8548:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8530:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8530:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8530:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8571:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8582:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8567:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8567:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8587:2:16",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8560:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8560:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8560:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8610:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8621:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8606:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8606:18:16"
																	},
																	{
																		"hexValue": "5265776172642053797374656d2063616e27742062652073657420746f207a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8626:34:16",
																		"type": "",
																		"value": "Reward System can't be set to ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8599:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8599:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8599:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8681:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8692:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8677:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8677:18:16"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8697:12:16",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8670:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8670:40:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8670:40:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8719:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8731:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8742:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8727:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8727:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8719:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d7d88b583e6e4d65f20b31e494ad419841cf43f946ab532f9ed552486f9d47ef__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8497:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8511:4:16",
														"type": ""
													}
												],
												"src": "8346:406:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8931:232:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8948:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8959:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8941:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8941:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8941:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8982:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8993:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8978:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8978:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8998:2:16",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8971:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8971:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8971:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9021:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9032:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9017:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9017:18:16"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9037:34:16",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9010:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9010:62:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9010:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9092:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9103:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9088:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9088:18:16"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9108:12:16",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9081:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9081:40:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9081:40:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9130:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9142:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9153:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9138:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9138:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9130:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8908:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8922:4:16",
														"type": ""
													}
												],
												"src": "8757:406:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9269:76:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9279:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9291:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9302:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9287:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9287:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9279:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9321:9:16"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9332:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9314:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9314:25:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9314:25:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9238:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9249:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9260:4:16",
														"type": ""
													}
												],
												"src": "9168:177:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9479:145:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9489:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9501:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9512:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9497:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9497:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9489:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9531:9:16"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9542:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9524:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9524:25:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9524:25:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9569:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9580:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9565:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9565:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9589:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9605:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9610:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9601:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9601:11:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9614:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9597:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9597:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9585:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9585:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9558:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9558:60:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9558:60:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9440:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9451:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9459:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9470:4:16",
														"type": ""
													}
												],
												"src": "9350:274:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9900:311:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9917:9:16"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9928:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9910:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9910:25:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9910:25:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9955:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9966:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9951:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9951:18:16"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9971:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9944:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9944:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9944:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9998:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10009:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9994:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9994:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10014:3:16",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9987:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9987:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9987:31:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10027:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10064:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10076:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10087:3:16",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10072:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10072:19:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "10035:28:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10035:57:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10027:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10112:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10123:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10108:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10108:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "10132:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10148:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10153:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "10144:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10144:11:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10157:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "10140:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10140:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10128:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10128:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10101:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10101:60:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10101:60:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10181:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10192:3:16",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10177:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10177:19:16"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "10198:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10170:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10170:35:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10170:35:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9837:9:16",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9848:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9856:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9864:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9872:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9880:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9891:4:16",
														"type": ""
													}
												],
												"src": "9629:582:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10345:119:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10355:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10367:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10378:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10363:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10363:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10355:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10397:9:16"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10408:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10390:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10390:25:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10390:25:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10435:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10446:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10431:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10431:18:16"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10451:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10424:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10424:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10424:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10306:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10317:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10325:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10336:4:16",
														"type": ""
													}
												],
												"src": "10216:248:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10518:173:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10548:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10569:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10576:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10581:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "10572:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10572:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10562:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10562:31:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10562:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10613:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10616:4:16",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10606:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10606:15:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10606:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10641:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10644:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10634:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10634:15:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10634:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10534:1:16"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10537:1:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10531:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10531:8:16"
															},
															"nodeType": "YulIf",
															"src": "10528:131:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10668:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10680:1:16"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10683:1:16"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10676:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10676:9:16"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10668:4:16"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10500:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10503:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10509:4:16",
														"type": ""
													}
												],
												"src": "10469:222:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10749:205:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10759:10:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10768:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10763:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10828:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10853:3:16"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10858:1:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10849:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10849:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "10872:3:16"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10877:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10868:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10868:11:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10862:5:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10862:18:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10842:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10842:39:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10842:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10789:1:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10792:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10786:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10786:13:16"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10800:19:16",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10802:15:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10811:1:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10814:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10807:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10807:10:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10802:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10782:3:16",
																"statements": []
															},
															"src": "10778:113:16"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10917:31:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10930:3:16"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10935:6:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10926:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10926:16:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10944:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10919:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10919:27:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10919:27:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10906:1:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10909:6:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10903:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10903:13:16"
															},
															"nodeType": "YulIf",
															"src": "10900:48:16"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10727:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10732:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10737:6:16",
														"type": ""
													}
												],
												"src": "10696:258:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10991:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11008:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11015:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11020:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11011:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11011:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11001:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11001:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11001:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11048:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11051:4:16",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11041:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11041:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11041:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11072:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11075:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11065:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11065:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11065:15:16"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "10959:127:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11123:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11140:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11147:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11152:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11143:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11143:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11133:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11133:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11133:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11180:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11183:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11173:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11173:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11173:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11204:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11207:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11197:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11197:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11197:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "11091:127:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11268:86:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11332:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11341:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11344:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11334:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11334:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11334:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11291:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11302:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "11317:3:16",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "11322:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "11313:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11313:11:16"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11326:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "11309:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11309:19:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "11298:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11298:31:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11288:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11288:42:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11281:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11281:50:16"
															},
															"nodeType": "YulIf",
															"src": "11278:70:16"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11257:5:16",
														"type": ""
													}
												],
												"src": "11223:131:16"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IUniswapV2Router02_$2283(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$767__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 128)\n        tail := abi_encode_array_address_dyn(value1, add(headStart, 128))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_21e4842dc146c03ef71494afc50aa244fd2e52b0ec7b2dc19cb5f11801f005ae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 89)\n        mstore(add(headStart, 64), \"ABOAT::onlyMasterEntertainer: On\")\n        mstore(add(headStart, 96), \"ly the master entertainer is all\")\n        mstore(add(headStart, 128), \"owed to call this method!\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5a9cac642e8596a17e397670f192ad1fb0b5021eb5f42d99960d4ffd67203f2a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Router can't be set to zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_66684ac81254500ff8f8680c7efdc6b9f9d87b6b36566528fe4eb381df689dbc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ABOAT::safeTokenTransfer: transf\")\n        mstore(add(headStart, 96), \"er failed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c0f52bf107b9ed5d7e76e90e7140bb3b6030f0eb634d11644cfddbbf2f383b8e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"Master Entertainer can't be set \")\n        mstore(add(headStart, 96), \"to zero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d7d88b583e6e4d65f20b31e494ad419841cf43f946ab532f9ed552486f9d47ef__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Reward System can't be set to ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 160)\n        tail := abi_encode_array_address_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061010d5760003560e01c80638da5cb5b11610095578063c0d7865511610064578063c0d78655146102ce578063e2bbb158146102ee578063f2fde38b1461030e578063f72b2a4c1461032e578063f7c618c11461034e57600080fd5b80638da5cb5b14610251578063951583c31461026f5780639fbe42e31461028f578063b5644963146102b057600080fd5b806351ed6a30116100dc57806351ed6a30146101a457806354613450146101dc5780635945365e146101fc578063715018a61461021c57806373d387931461023157600080fd5b80630ad58d2f1461011957806313f43a571461013b5780632b0a696d146101645780632b3ea9e11461018457600080fd5b3661011457005b600080fd5b34801561012557600080fd5b506101396101343660046115d1565b61036e565b005b34801561014757600080fd5b5061015160085481565b6040519081526020015b60405180910390f35b34801561017057600080fd5b5061013961017f366004611559565b610445565b34801561019057600080fd5b5061013961019f3660046114fd565b6104aa565b3480156101b057600080fd5b506003546101c4906001600160a01b031681565b6040516001600160a01b03909116815260200161015b565b3480156101e857600080fd5b506101396101f73660046114fd565b610589565b34801561020857600080fd5b506004546101c4906001600160a01b031681565b34801561022857600080fd5b5061013961066b565b34801561023d57600080fd5b506005546101c4906001600160a01b031681565b34801561025d57600080fd5b506000546001600160a01b03166101c4565b34801561027b57600080fd5b5061015161028a366004611559565b6106a1565b34801561029b57600080fd5b506101516102aa366004611559565b50600090565b3480156102bc57600080fd5b506001546001600160a01b03166101c4565b3480156102da57600080fd5b506101396102e93660046114fd565b61072f565b3480156102fa57600080fd5b5061013961030936600461158b565b610805565b34801561031a57600080fd5b506101396103293660046114fd565b61083d565b34801561033a57600080fd5b506101396103493660046115d1565b6108d8565b34801561035a57600080fd5b506002546101c4906001600160a01b031681565b6007546001600160a01b031633146103a15760405162461bcd60e51b8152600401610398906116d2565b60405180910390fd5b826103b5576103b083836109fe565b61041b565b600154604051630441a3e760e41b815260048101859052602481018490526001600160a01b039091169063441a3e7090604401600060405180830381600087803b15801561040257600080fd5b505af1158015610416573d6000803e3d6000fd5b505050505b811561043857600354610438906001600160a01b03168284610a67565b610440610aca565b505050565b6000546001600160a01b0316331461046f5760405162461bcd60e51b815260040161039890611755565b60088190556040518181527fa5ce75f7f52a2e09706441f9b9106cfff4275fd35963a11dad9c45b9ae50b2889060200160405180910390a150565b6000546001600160a01b031633146104d45760405162461bcd60e51b815260040161039890611755565b6001600160a01b03811661053d5760405162461bcd60e51b815260206004820152602a60248201527f5265776172642053797374656d2063616e27742062652073657420746f207a65604482015269726f206164647265737360b01b6064820152608401610398565b600580546001600160a01b0319166001600160a01b03831690811790915560405133907fbb802456c4e53c17a623585d276747174bcf39120266b12c32c0bb73df94acb690600090a350565b6000546001600160a01b031633146105b35760405162461bcd60e51b815260040161039890611755565b6001600160a01b0381166106215760405162461bcd60e51b815260206004820152602f60248201527f4d617374657220456e7465727461696e65722063616e2774206265207365742060448201526e746f207a65726f206164647265737360881b6064820152608401610398565b600780546001600160a01b0319166001600160a01b0383169081179091556040517fbf63a13967243f035997ab7188eae733cdf9c8f25ea71389d3a0615450a0728690600090a250565b6000546001600160a01b031633146106955760405162461bcd60e51b815260040161039890611755565b61069f6000610bbc565b565b6001546040516393f1a40b60e01b81526004810183905230602482015260009182916001600160a01b03909116906393f1a40b90604401604080518083038186803b1580156106ef57600080fd5b505afa158015610703573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072791906115ad565b509392505050565b6000546001600160a01b031633146107595760405162461bcd60e51b815260040161039890611755565b6001600160a01b0381166107bb5760405162461bcd60e51b815260206004820152602360248201527f526f757465722063616e27742062652073657420746f207a65726f206164647260448201526265737360e81b6064820152608401610398565b600680546001600160a01b0319166001600160a01b0383169081179091556040517f6de4326a8b9054d72d9dbab97d27bc4edffadee7d966f5af9cc4eafdaf8e545590600090a250565b6007546001600160a01b0316331461082f5760405162461bcd60e51b8152600401610398906116d2565b6108398282610c0c565b5050565b6000546001600160a01b031633146108675760405162461bcd60e51b815260040161039890611755565b6001600160a01b0381166108cc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610398565b6108d581610bbc565b50565b6007546001600160a01b031633146109025760405162461bcd60e51b8152600401610398906116d2565b600154604051635459cf7760e11b8152600481018590526001600160a01b039091169063a8b39eee90602401600060405180830381600087803b15801561094857600080fd5b505af115801561095c573d6000803e3d6000fd5b505060035461097892506001600160a01b031690508284610d2f565b6003546040516370a0823160e01b81523060048201526104409185916001600160a01b03909116906370a082319060240160206040518083038186803b1580156109c157600080fd5b505afa1580156109d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f99190611572565b610c0c565b600154604051630441a3e760e41b815260048101849052602481018390526001600160a01b039091169063441a3e7090604401600060405180830381600087803b158015610a4b57600080fd5b505af1158015610a5f573d6000803e3d6000fd5b505050505050565b6040516001600160a01b03831660248201526044810182905261044090849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610f29565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610b0e57600080fd5b505afa158015610b22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b469190611572565b6006549091506001600160a01b0316158015610b625750600081115b15610b8f576002546108d5906001600160a01b0316610b896000546001600160a01b031690565b83610d2f565b60085481106108d557600254600090610bb1906001600160a01b031683610ffb565b90506108398161101a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354610c24906001600160a01b031633308461117d565b60035460015460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b390604401602060405180830381600087803b158015610c7457600080fd5b505af1158015610c88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cac9190611537565b5081610cc157610cbc8282610cc1565b610d27565b600154604051631c57762b60e31b815260048101849052602481018390526001600160a01b039091169063e2bbb15890604401600060405180830381600087803b158015610d0e57600080fd5b505af1158015610d22573d6000803e3d6000fd5b505050505b610839610aca565b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a082319060240160206040518083038186803b158015610d7157600080fd5b505afa158015610d85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da99190611572565b9050600081831115610e3e5760405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905286169063a9059cbb90604401602060405180830381600087803b158015610dff57600080fd5b505af1158015610e13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e379190611537565b9050610ec3565b60405163a9059cbb60e01b81526001600160a01b0385811660048301526024820185905286169063a9059cbb90604401602060405180830381600087803b158015610e8857600080fd5b505af1158015610e9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec09190611537565b90505b80610f225760405162461bcd60e51b815260206004820152602960248201527f41424f41543a3a73616665546f6b656e5472616e736665723a207472616e7366604482015268195c8819985a5b195960ba1b6064820152608401610398565b5050505050565b6000610f7e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111bb9092919063ffffffff16565b8051909150156104405780806020019051810190610f9c9190611537565b6104405760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610398565b60004761100884846111d4565b6110124782611390565b949350505050565b6040805160028082526060820183526000926020830190803683375050600654604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c464892506004808301926020929190829003018186803b15801561107f57600080fd5b505afa158015611093573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b7919061151a565b816000815181106110ca576110ca611817565b6001600160a01b0392831660209182029290920101526004548251911690829060019081106110fb576110fb611817565b6001600160a01b03928316602091820292909201015260065460055460405163b6f9de9560e01b81529183169263b6f9de9592869261114792600092889290911690429060040161166a565b6000604051808303818588803b15801561116057600080fd5b505af1158015611174573d6000803e3d6000fd5b50505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526111b59085906323b872dd60e01b90608401610a93565b50505050565b60606111ca848460008561139c565b90505b9392505050565b604080516002808252606082018352600092602083019080368337019050509050828160008151811061120957611209611817565b6001600160a01b03928316602091820292909201810191909152600654604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b15801561125d57600080fd5b505afa158015611271573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611295919061151a565b816001815181106112a8576112a8611817565b6001600160a01b03928316602091820292909201015260065460405163095ea7b360e01b81529082166004820152602481018490529084169063095ea7b390604401602060405180830381600087803b15801561130457600080fd5b505af1158015611318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133c9190611537565b5060065460405163791ac94760e01b81526001600160a01b039091169063791ac9479061137690859060009086903090429060040161178a565b600060405180830381600087803b15801561116057600080fd5b60006111cd82846117c6565b6060824710156113fd5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610398565b843b61144b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610398565b600080866001600160a01b03168587604051611467919061164e565b60006040518083038185875af1925050503d80600081146114a4576040519150601f19603f3d011682016040523d82523d6000602084013e6114a9565b606091505b50915091506114b98282866114c4565b979650505050505050565b606083156114d35750816111cd565b8251156114e35782518084602001fd5b8160405162461bcd60e51b8152600401610398919061169f565b60006020828403121561150f57600080fd5b81356111cd8161182d565b60006020828403121561152c57600080fd5b81516111cd8161182d565b60006020828403121561154957600080fd5b815180151581146111cd57600080fd5b60006020828403121561156b57600080fd5b5035919050565b60006020828403121561158457600080fd5b5051919050565b6000806040838503121561159e57600080fd5b50508035926020909101359150565b600080604083850312156115c057600080fd5b505080516020909101519092909150565b6000806000606084860312156115e657600080fd5b833592506020840135915060408401356115ff8161182d565b809150509250925092565b600081518084526020808501945080840160005b838110156116435781516001600160a01b03168752958201959082019060010161161e565b509495945050505050565b600082516116608184602087016117eb565b9190910192915050565b848152608060208201526000611683608083018661160a565b6001600160a01b03949094166040830152506060015292915050565b60208152600082518060208401526116be8160408501602087016117eb565b601f01601f19169190910160400192915050565b60208082526059908201527f41424f41543a3a6f6e6c794d6173746572456e7465727461696e65723a204f6e60408201527f6c7920746865206d617374657220656e7465727461696e657220697320616c6c60608201527f6f77656420746f2063616c6c2074686973206d6574686f642100000000000000608082015260a00190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b85815284602082015260a0604082015260006117a960a083018661160a565b6001600160a01b0394909416606083015250608001529392505050565b6000828210156117e657634e487b7160e01b600052601160045260246000fd5b500390565b60005b838110156118065781810151838201526020016117ee565b838111156111b55750506000910152565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03811681146108d557600080fdfea2646970667358221220b59443e4ff04ef171c5f5ecbb3b728c5380c4b8aa0ab3a7010d9b73a9935f60c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC0D78655 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC0D78655 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xF72B2A4C EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x951583C3 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x9FBE42E3 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xB5644963 EQ PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x51ED6A30 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x51ED6A30 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x54613450 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x5945365E EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x73D38793 EQ PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAD58D2F EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x13F43A57 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x2B0A696D EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x2B3EA9E1 EQ PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x114 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x36E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x1559 JUMP JUMPDEST PUSH2 0x445 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x14FD JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1C4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x14FD JUMP JUMPDEST PUSH2 0x589 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x1C4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x66B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x1C4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0x1559 JUMP JUMPDEST PUSH2 0x6A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x2AA CALLDATASIZE PUSH1 0x4 PUSH2 0x1559 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x14FD JUMP JUMPDEST PUSH2 0x72F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x309 CALLDATASIZE PUSH1 0x4 PUSH2 0x158B JUMP JUMPDEST PUSH2 0x805 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x329 CALLDATASIZE PUSH1 0x4 PUSH2 0x14FD JUMP JUMPDEST PUSH2 0x83D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x349 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x8D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x1C4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH2 0x3B5 JUMPI PUSH2 0x3B0 DUP4 DUP4 PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x41B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x441A3E7 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x441A3E70 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x416 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP2 ISZERO PUSH2 0x438 JUMPI PUSH1 0x3 SLOAD PUSH2 0x438 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP5 PUSH2 0xA67 JUMP JUMPDEST PUSH2 0x440 PUSH2 0xACA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x46F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xA5CE75F7F52A2E09706441F9B9106CFFF4275FD35963A11DAD9C45B9AE50B288 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x53D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265776172642053797374656D2063616E27742062652073657420746F207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x398 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0xBB802456C4E53C17A623585D276747174BCF39120266B12C32C0BB73DF94ACB6 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x621 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617374657220456E7465727461696E65722063616E27742062652073657420 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x746F207A65726F2061646472657373 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x398 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xBF63A13967243F035997AB7188EAE733CDF9C8F25EA71389D3A0615450A07286 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x695 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH2 0x69F PUSH1 0x0 PUSH2 0xBBC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x93F1A40B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x93F1A40B SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x703 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x727 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x759 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F757465722063616E27742062652073657420746F207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x398 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6DE4326A8B9054D72D9DBAB97D27BC4EDFFADEE7D966F5AF9CC4EAFDAF8E5455 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x82F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH2 0x839 DUP3 DUP3 PUSH2 0xC0C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x867 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x398 JUMP JUMPDEST PUSH2 0x8D5 DUP2 PUSH2 0xBBC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x902 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5459CF77 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA8B39EEE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x948 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x95C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH2 0x978 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP3 DUP5 PUSH2 0xD2F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x440 SWAP2 DUP6 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F9 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0xC0C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x441A3E7 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x441A3E70 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x440 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB46 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO PUSH2 0xB62 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0xB8F JUMPI PUSH1 0x2 SLOAD PUSH2 0x8D5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB89 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP4 PUSH2 0xD2F JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT PUSH2 0x8D5 JUMPI PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xBB1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xFFB JUMP JUMPDEST SWAP1 POP PUSH2 0x839 DUP2 PUSH2 0x101A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xC24 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0x117D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC88 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCAC SWAP2 SWAP1 PUSH2 0x1537 JUMP JUMPDEST POP DUP2 PUSH2 0xCC1 JUMPI PUSH2 0xCBC DUP3 DUP3 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0xD27 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1C57762B PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xE2BBB158 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x839 PUSH2 0xACA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD85 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDA9 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0xE3E JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP7 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE13 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE37 SWAP2 SWAP1 PUSH2 0x1537 JUMP JUMPDEST SWAP1 POP PUSH2 0xEC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE DUP7 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE9C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEC0 SWAP2 SWAP1 PUSH2 0x1537 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH2 0xF22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73616665546F6B656E5472616E736665723A207472616E7366 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x195C8819985A5B1959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x398 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7E DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11BB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x440 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xF9C SWAP2 SWAP1 PUSH2 0x1537 JUMP JUMPDEST PUSH2 0x440 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x398 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE PUSH2 0x1008 DUP5 DUP5 PUSH2 0x11D4 JUMP JUMPDEST PUSH2 0x1012 SELFBALANCE DUP3 PUSH2 0x1390 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP4 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 POP PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x107F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1093 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10B7 SWAP2 SWAP1 PUSH2 0x151A JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x10CA JUMPI PUSH2 0x10CA PUSH2 0x1817 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x4 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x10FB JUMPI PUSH2 0x10FB PUSH2 0x1817 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB6F9DE95 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP4 AND SWAP3 PUSH4 0xB6F9DE95 SWAP3 DUP7 SWAP3 PUSH2 0x1147 SWAP3 PUSH1 0x0 SWAP3 DUP9 SWAP3 SWAP1 SWAP2 AND SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x166A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1174 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x11B5 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0xA93 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x11CA DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x139C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1209 JUMPI PUSH2 0x1209 PUSH2 0x1817 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x125D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1271 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1295 SWAP2 SWAP1 PUSH2 0x151A JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x12A8 JUMPI PUSH2 0x12A8 PUSH2 0x1817 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP5 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1318 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x133C SWAP2 SWAP1 PUSH2 0x1537 JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x791AC947 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0x1376 SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x178A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11CD DUP3 DUP5 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x13FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x398 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x144B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x398 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1467 SWAP2 SWAP1 PUSH2 0x164E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14A4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x14B9 DUP3 DUP3 DUP7 PUSH2 0x14C4 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x14D3 JUMPI POP DUP2 PUSH2 0x11CD JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x14E3 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x169F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x150F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11CD DUP2 PUSH2 0x182D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x152C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x11CD DUP2 PUSH2 0x182D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x156B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x159E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x15FF DUP2 PUSH2 0x182D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1643 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x161E JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1660 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x17EB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1683 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x160A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x16BE DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x59 SWAP1 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A6F6E6C794D6173746572456E7465727461696E65723A204F6E PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6C7920746865206D617374657220656E7465727461696E657220697320616C6C PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x6F77656420746F2063616C6C2074686973206D6574686F642100000000000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x17A9 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x160A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x17E6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1806 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x17EE JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x11B5 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8D5 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 SWAP5 NUMBER 0xE4 SELFDESTRUCT DIV 0xEF OR SHR 0x5F 0x5E 0xCB 0xB3 0xB7 0x28 0xC5 CODESIZE 0xC 0x4B DUP11 LOG0 0xAB GASPRICE PUSH17 0x10D9B73A9935F60C64736F6C6343000807 STOP CALLER ",
							"sourceMap": "754:8915:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6525:363;;;;;;;;;;-1:-1:-1;6525:363:12;;;;;:::i;:::-;;:::i;:::-;;1565:40;;;;;;;;;;;;;;;;;;;9314:25:16;;;9302:2;9287:18;1565:40:12;;;;;;;;4745:160;;;;;;;;;;-1:-1:-1;4745:160:12;;;;;:::i;:::-;;:::i;3946:257::-;;;;;;;;;;-1:-1:-1;3946:257:12;;;;;:::i;:::-;;:::i;1335:24::-;;;;;;;;;;-1:-1:-1;1335:24:12;;;;-1:-1:-1;;;;;1335:24:12;;;;;;-1:-1:-1;;;;;3257:32:16;;;3239:51;;3227:2;3212:18;1335:24:12;3093:203:16;4449:286:12;;;;;;;;;;-1:-1:-1;4449:286:12;;;;;:::i;:::-;;:::i;1401:23::-;;;;;;;;;;-1:-1:-1;1401:23:12;;;;-1:-1:-1;;;;;1401:23:12;;;1605:92:0;;;;;;;;;;;;;:::i;1455:27:12:-;;;;;;;;;;-1:-1:-1;1455:27:12;;;;-1:-1:-1;;;;;1455:27:12;;;973:85:0;;;;;;;;;;-1:-1:-1;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;;5354:178:12;;;;;;;;;;-1:-1:-1;5354:178:12;;;;;:::i;:::-;;:::i;5542:103::-;;;;;;;;;;-1:-1:-1;5542:103:12;;;;;:::i;:::-;-1:-1:-1;5611:7:12;;5542:103;5235:109;;;;;;;;;;-1:-1:-1;5326:10:12;;-1:-1:-1;;;;;5326:10:12;5235:109;;4213:226;;;;;;;;;;-1:-1:-1;4213:226:12;;;;;:::i;:::-;;:::i;6014:128::-;;;;;;;;;;-1:-1:-1;6014:128:12;;;;;:::i;:::-;;:::i;1846:189:0:-;;;;;;;;;;-1:-1:-1;1846:189:0;;;;;:::i;:::-;;:::i;6903:298:12:-;;;;;;;;;;-1:-1:-1;6903:298:12;;;;;:::i;:::-;;:::i;1275:25::-;;;;;;;;;;-1:-1:-1;1275:25:12;;;;-1:-1:-1;;;;;1275:25:12;;;6525:363;2546:17;;-1:-1:-1;;;;;2546:17:12;2531:10;2523:40;2515:142;;;;-1:-1:-1;;;2515:142:12;;;;;;;:::i;:::-;;;;;;;;;6644:9;6641:129:::1;;6669:25;6680:4;6686:7;6669:10;:25::i;:::-;6641:129;;;6725:10;::::0;:34:::1;::::0;-1:-1:-1;;;6725:34:12;;::::1;::::0;::::1;10390:25:16::0;;;10431:18;;;10424:34;;;-1:-1:-1;;;;;6725:10:12;;::::1;::::0;:19:::1;::::0;10363:18:16;;6725:34:12::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6641:129;6782:11:::0;;6779:82:::1;;6809:10;::::0;:41:::1;::::0;-1:-1:-1;;;;;6809:10:12::1;6833:7:::0;6842;6809:23:::1;:41::i;:::-;6870:11;:9;:11::i;:::-;6525:363:::0;;;:::o;4745:160::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:7;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;4820:15:12::1;:28:::0;;;4863:35:::1;::::0;9314:25:16;;;4863:35:12::1;::::0;9302:2:16;9287:18;4863:35:12::1;;;;;;;4745:160:::0;:::o;3946:257::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:7;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;4028:27:12;::::1;4020:82;;;::::0;-1:-1:-1;;;4020:82:12;;8548:2:16;4020:82:12::1;::::0;::::1;8530:21:16::0;8587:2;8567:18;;;8560:30;8626:34;8606:18;;;8599:62;-1:-1:-1;;;8677:18:16;;;8670:40;8727:19;;4020:82:12::1;8346:406:16::0;4020:82:12::1;4112:12;:28:::0;;-1:-1:-1;;;;;;4112:28:12::1;-1:-1:-1::0;;;;;4112:28:12;::::1;::::0;;::::1;::::0;;;4155:41:::1;::::0;4171:10:::1;::::0;4155:41:::1;::::0;-1:-1:-1;;4155:41:12::1;3946:257:::0;:::o;4449:286::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:7;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;4542:32:12;::::1;4534:92;;;::::0;-1:-1:-1;;;4534:92:12;;7774:2:16;4534:92:12::1;::::0;::::1;7756:21:16::0;7813:2;7793:18;;;7786:30;7852:34;7832:18;;;7825:62;-1:-1:-1;;;7903:18:16;;;7896:45;7958:19;;4534:92:12::1;7572:411:16::0;4534:92:12::1;4636:17;:38:::0;;-1:-1:-1;;;;;;4636:38:12::1;-1:-1:-1::0;;;;;4636:38:12;::::1;::::0;;::::1;::::0;;;4689:39:::1;::::0;::::1;::::0;-1:-1:-1;;4689:39:12::1;4449:286:::0;:::o;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:7;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;5354:178:12:-;5462:10;;:40;;-1:-1:-1;;;5462:40:12;;;;;9524:25:16;;;5496:4:12;9565:18:16;;;9558:60;5422:7:12;;;;-1:-1:-1;;;;;5462:10:12;;;;:19;;9497:18:16;;5462:40:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5441:61:12;5354:178;-1:-1:-1;;;5354:178:12:o;4213:226::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:7;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;4295:30:12;::::1;4287:78;;;::::0;-1:-1:-1;;;4287:78:12;;6599:2:16;4287:78:12::1;::::0;::::1;6581:21:16::0;6638:2;6618:18;;;6611:30;6677:34;6657:18;;;6650:62;-1:-1:-1;;;6728:18:16;;;6721:33;6771:19;;4287:78:12::1;6397:399:16::0;4287:78:12::1;4375:6;:16:::0;;-1:-1:-1;;;;;;4375:16:12::1;-1:-1:-1::0;;;;;4375:16:12;::::1;::::0;;::::1;::::0;;;4406:26:::1;::::0;::::1;::::0;-1:-1:-1;;4406:26:12::1;4213:226:::0;:::o;6014:128::-;2546:17;;-1:-1:-1;;;;;2546:17:12;2531:10;2523:40;2515:142;;;;-1:-1:-1;;;2515:142:12;;;;;;;:::i;:::-;6112:23:::1;6121:4;6127:7;6112:8;:23::i;:::-;6014:128:::0;;:::o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:7;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;5785:2:16;1926:73:0::1;::::0;::::1;5767:21:16::0;5824:2;5804:18;;;5797:30;5863:34;5843:18;;;5836:62;-1:-1:-1;;;5914:18:16;;;5907:36;5960:19;;1926:73:0::1;5583:402:16::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;6903:298:12:-;2546:17;;-1:-1:-1;;;;;2546:17:12;2531:10;2523:40;2515:142;;;;-1:-1:-1;;;2515:142:12;;;;;;;:::i;:::-;7028:10:::1;::::0;:39:::1;::::0;-1:-1:-1;;;7028:39:12;;::::1;::::0;::::1;9314:25:16::0;;;-1:-1:-1;;;;;7028:10:12;;::::1;::::0;:33:::1;::::0;9287:18:16;;7028:39:12::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;7095:10:12::1;::::0;7077:47:::1;::::0;-1:-1:-1;;;;;;7095:10:12::1;::::0;-1:-1:-1;7107:7:12;7116;7077:17:::1;:47::i;:::-;7149:10;::::0;:35:::1;::::0;-1:-1:-1;;;7149:35:12;;7178:4:::1;7149:35;::::0;::::1;3239:51:16::0;7134::12::1;::::0;7143:4;;-1:-1:-1;;;;;7149:10:12;;::::1;::::0;:20:::1;::::0;3212:18:16;;7149:35:12::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7134:8;:51::i;7352:111::-:0;7422:10;;:34;;-1:-1:-1;;;7422:34:12;;;;;10390:25:16;;;10431:18;;;10424:34;;;-1:-1:-1;;;;;7422:10:12;;;;:19;;10363:18:16;;7422:34:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7352:111;;:::o;634:205:5:-;773:58;;-1:-1:-1;;;;;3873:32:16;;773:58:5;;;3855:51:16;3922:18;;;3915:34;;;746:86:5;;766:5;;-1:-1:-1;;;796:23:5;3828:18:16;;773:58:5;;;;-1:-1:-1;;773:58:5;;;;;;;;;;;;;;-1:-1:-1;;;;;773:58:5;-1:-1:-1;;;;;;773:58:5;;;;;;;;;;746:19;:86::i;7478:435:12:-;7542:11;;:36;;-1:-1:-1;;;7542:36:12;;7572:4;7542:36;;;3239:51:16;7518:21:12;;-1:-1:-1;;;;;7542:11:12;;:21;;3212:18:16;;7542:36:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7599:6;;7518:60;;-1:-1:-1;;;;;;7599:6:12;7591:29;:50;;;;;7640:1;7624:13;:17;7591:50;7588:311;;;7675:11;;7657:54;;-1:-1:-1;;;;;7675:11:12;7688:7;1019::0;1045:6;-1:-1:-1;;;;;1045:6:0;;973:85;7688:7:12;7697:13;7657:17;:54::i;7588:311::-;7756:15;;7739:13;:32;7736:163;;7819:11;;7787:18;;7808:38;;-1:-1:-1;;;;;7819:11:12;7832:13;7808:10;:38::i;:::-;7787:59;;7860:28;7877:10;7860:16;:28::i;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;6152:363:12:-;6220:10;;:72;;-1:-1:-1;;;;;6220:10:12;6256;6277:4;6284:7;6220:27;:72::i;:::-;6302:10;;;6329;6302:48;;-1:-1:-1;;;6302:48:12;;-1:-1:-1;;;;;6329:10:12;;;6302:48;;;3855:51:16;3922:18;;;3915:34;;;6302:10:12;;;:18;;3828::16;;6302:48:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6363:9:12;6360:128;;6388:25;6399:4;6405:7;6388:10;:25::i;:::-;6360:128;;;6444:10;;:33;;-1:-1:-1;;;6444:33:12;;;;;10390:25:16;;;10431:18;;;10424:34;;;-1:-1:-1;;;;;6444:10:12;;;;:18;;10363::16;;6444:33:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6360:128;6497:11;:9;:11::i;9205:457::-;9318:30;;-1:-1:-1;;;9318:30:12;;9342:4;9318:30;;;3239:51:16;9295:20:12;;-1:-1:-1;;;;;9318:15:12;;;;;3212:18:16;;9318:30:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9295:53;;9358:20;9410:12;9400:7;:22;9396:181;;;9456:33;;-1:-1:-1;;;9456:33:12;;-1:-1:-1;;;;;3873:32:16;;;9456:33:12;;;3855:51:16;3922:18;;;3915:34;;;9456:14:12;;;;;3828:18:16;;9456:33:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9438:51;;9396:181;;;9538:28;;-1:-1:-1;;;9538:28:12;;-1:-1:-1;;;;;3873:32:16;;;9538:28:12;;;3855:51:16;3922:18;;;3915:34;;;9538:14:12;;;;;3828:18:16;;9538:28:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9520:46;;9396:181;9594:15;9586:69;;;;-1:-1:-1;;;9586:69:12;;7003:2:16;9586:69:12;;;6985:21:16;7042:2;7022:18;;;7015:30;7081:34;7061:18;;;7054:62;-1:-1:-1;;;7132:18:16;;;7125:39;7181:19;;9586:69:12;6801:405:16;9586:69:12;9285:377;;9205:457;;;:::o;3140:706:5:-;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;-1:-1:-1;;;;;3585:27:5;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:5;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:5;;8959:2:16;3744:85:5;;;8941:21:16;8998:2;8978:18;;;8971:30;9037:34;9017:18;;;9010:62;-1:-1:-1;;;9088:18:16;;;9081:40;9138:19;;3744:85:5;8757:406:16;7923:296:12;7991:7;8035:21;8114:31;8131:5;8138:6;8114:16;:31::i;:::-;8171:41;:21;8197:14;8171:25;:41::i;:::-;8164:48;7923:296;-1:-1:-1;;;;7923:296:12:o;8789:406::-;8879:16;;;8893:1;8879:16;;;;;;;;8855:21;;8879:16;;;;;;;;-1:-1:-1;;8915:6:12;;:13;;;-1:-1:-1;;;8915:13:12;;;;8855:40;;-1:-1:-1;;;;;;8915:6:12;;;;:11;;-1:-1:-1;8915:13:12;;;;;;;;;;;;;;:6;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8905:4;8910:1;8905:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8905:23:12;;;:7;;;;;;;;;:23;8956:9;;8938:7;;8956:9;;;8938:4;;8956:9;;8938:7;;;;;;:::i;:::-;-1:-1:-1;;;;;8938:28:12;;;:7;;;;;;;;;:28;8985:6;;9137:12;;8985:203;;-1:-1:-1;;;8985:203:12;;:6;;;;:57;;9050:11;;8985:203;;:6;;9119:4;;9137:12;;;;9163:15;;8985:203;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8845:350;8789:406;:::o;845:241:5:-;1010:68;;-1:-1:-1;;;;;3559:15:16;;;1010:68:5;;;3541:34:16;3611:15;;3591:18;;;3584:43;3643:18;;;3636:34;;;983:96:5;;1003:5;;-1:-1:-1;;;1033:27:5;3476:18:16;;1010:68:5;3301:375:16;983:96:5;845:241;;;;:::o;3461:223:6:-;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;:::-;3618:59;;3461:223;;;;;;:::o;8229:550:12:-;8390:16;;;8404:1;8390:16;;;;;;;;8366:21;;8390:16;;;;;;;;;;-1:-1:-1;8390:16:12;8366:40;;8434:5;8416:4;8421:1;8416:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8416:24:12;;;:7;;;;;;;;;;:24;;;;8460:6;;:13;;;-1:-1:-1;;;8460:13:12;;;;:6;;;;;:11;;:13;;;;;8416:7;;8460:13;;;;;:6;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8450:4;8455:1;8450:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8450:23:12;;;:7;;;;;;;;;:23;8506:6;;8484:43;;-1:-1:-1;;;8484:43:12;;8506:6;;;8484:43;;;3855:51:16;3922:18;;;3915:34;;;8484:13:12;;;;;;3828:18:16;;8484:43:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8563:6:12;;:209;;-1:-1:-1;;;8563:209:12;;-1:-1:-1;;;;;8563:6:12;;;;:57;;:209;;8634:11;;8563:6;;8702:4;;8728;;8747:15;;8563:209;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;3039:96:8;3097:7;3123:5;3127:1;3123;:5;:::i;4548:500:6:-;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:6;;6192:2:16;4737:81:6;;;6174:21:16;6231:2;6211:18;;;6204:30;6270:34;6250:18;;;6243:62;-1:-1:-1;;;6321:18:16;;;6314:36;6367:19;;4737:81:6;5990:402:16;4737:81:6;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:6;;8190:2:16;4828:60:6;;;8172:21:16;8229:2;8209:18;;;8202:30;8268:31;8248:18;;;8241:59;8317:18;;4828:60:6;7988:353:16;4828:60:6;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:6;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:52;5007:7;5016:10;5028:12;4989:17;:52::i;:::-;4982:59;4548:500;-1:-1:-1;;;;;;;4548:500:6:o;6950:692::-;7096:12;7124:7;7120:516;;;-1:-1:-1;7154:10:6;7147:17;;7120:516;7265:17;;:21;7261:365;;7459:10;7453:17;7519:15;7506:10;7502:2;7498:19;7491:44;7261:365;7598:12;7591:20;;-1:-1:-1;;;7591:20:6;;;;;;;;:::i;14:247:16:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;200:31;225:5;200:31;:::i;266:251::-;336:6;389:2;377:9;368:7;364:23;360:32;357:52;;;405:1;402;395:12;357:52;437:9;431:16;456:31;481:5;456:31;:::i;522:277::-;589:6;642:2;630:9;621:7;617:23;613:32;610:52;;;658:1;655;648:12;610:52;690:9;684:16;743:5;736:13;729:21;722:5;719:32;709:60;;765:1;762;755:12;1083:180;1142:6;1195:2;1183:9;1174:7;1170:23;1166:32;1163:52;;;1211:1;1208;1201:12;1163:52;-1:-1:-1;1234:23:16;;1083:180;-1:-1:-1;1083:180:16:o;1268:184::-;1338:6;1391:2;1379:9;1370:7;1366:23;1362:32;1359:52;;;1407:1;1404;1397:12;1359:52;-1:-1:-1;1430:16:16;;1268:184;-1:-1:-1;1268:184:16:o;1457:248::-;1525:6;1533;1586:2;1574:9;1565:7;1561:23;1557:32;1554:52;;;1602:1;1599;1592:12;1554:52;-1:-1:-1;;1625:23:16;;;1695:2;1680:18;;;1667:32;;-1:-1:-1;1457:248:16:o;1710:245::-;1789:6;1797;1850:2;1838:9;1829:7;1825:23;1821:32;1818:52;;;1866:1;1863;1856:12;1818:52;-1:-1:-1;;1889:16:16;;1945:2;1930:18;;;1924:25;1889:16;;1924:25;;-1:-1:-1;1710:245:16:o;1960:383::-;2037:6;2045;2053;2106:2;2094:9;2085:7;2081:23;2077:32;2074:52;;;2122:1;2119;2112:12;2074:52;2158:9;2145:23;2135:33;;2215:2;2204:9;2200:18;2187:32;2177:42;;2269:2;2258:9;2254:18;2241:32;2282:31;2307:5;2282:31;:::i;:::-;2332:5;2322:15;;;1960:383;;;;;:::o;2348:461::-;2401:3;2439:5;2433:12;2466:6;2461:3;2454:19;2492:4;2521:2;2516:3;2512:12;2505:19;;2558:2;2551:5;2547:14;2579:1;2589:195;2603:6;2600:1;2597:13;2589:195;;;2668:13;;-1:-1:-1;;;;;2664:39:16;2652:52;;2724:12;;;;2759:15;;;;2700:1;2618:9;2589:195;;;-1:-1:-1;2800:3:16;;2348:461;-1:-1:-1;;;;;2348:461:16:o;2814:274::-;2943:3;2981:6;2975:13;2997:53;3043:6;3038:3;3031:4;3023:6;3019:17;2997:53;:::i;:::-;3066:16;;;;;2814:274;-1:-1:-1;;2814:274:16:o;4182:510::-;4453:6;4442:9;4435:25;4496:3;4491:2;4480:9;4476:18;4469:31;4416:4;4517:57;4569:3;4558:9;4554:19;4546:6;4517:57;:::i;:::-;-1:-1:-1;;;;;4610:32:16;;;;4605:2;4590:18;;4583:60;-1:-1:-1;4674:2:16;4659:18;4652:34;4509:65;4182:510;-1:-1:-1;;4182:510:16:o;4697:383::-;4846:2;4835:9;4828:21;4809:4;4878:6;4872:13;4921:6;4916:2;4905:9;4901:18;4894:34;4937:66;4996:6;4991:2;4980:9;4976:18;4971:2;4963:6;4959:15;4937:66;:::i;:::-;5064:2;5043:15;-1:-1:-1;;5039:29:16;5024:45;;;;5071:2;5020:54;;4697:383;-1:-1:-1;;4697:383:16:o;5085:493::-;5287:2;5269:21;;;5326:2;5306:18;;;5299:30;5365:34;5360:2;5345:18;;5338:62;5436:34;5431:2;5416:18;;5409:62;5508:27;5502:3;5487:19;;5480:56;5568:3;5553:19;;5085:493::o;7211:356::-;7413:2;7395:21;;;7432:18;;;7425:30;7491:34;7486:2;7471:18;;7464:62;7558:2;7543:18;;7211:356::o;9629:582::-;9928:6;9917:9;9910:25;9971:6;9966:2;9955:9;9951:18;9944:34;10014:3;10009:2;9998:9;9994:18;9987:31;9891:4;10035:57;10087:3;10076:9;10072:19;10064:6;10035:57;:::i;:::-;-1:-1:-1;;;;;10128:32:16;;;;10123:2;10108:18;;10101:60;-1:-1:-1;10192:3:16;10177:19;10170:35;10027:65;9629:582;-1:-1:-1;;;9629:582:16:o;10469:222::-;10509:4;10537:1;10534;10531:8;10528:131;;;10581:10;10576:3;10572:20;10569:1;10562:31;10616:4;10613:1;10606:15;10644:4;10641:1;10634:15;10528:131;-1:-1:-1;10676:9:16;;10469:222::o;10696:258::-;10768:1;10778:113;10792:6;10789:1;10786:13;10778:113;;;10868:11;;;10862:18;10849:11;;;10842:39;10814:2;10807:10;10778:113;;;10909:6;10906:1;10903:13;10900:48;;;-1:-1:-1;;10944:1:16;10926:16;;10919:27;10696:258::o;10959:127::-;11020:10;11015:3;11011:20;11008:1;11001:31;11051:4;11048:1;11041:15;11075:4;11072:1;11065:15;11223:131;-1:-1:-1;;;;;11298:31:16;;11288:42;;11278:70;;11344:1;11341;11334:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1252800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"deposit(uint256,uint256)": "infinite",
								"emergencyWithdraw(uint256,uint256,address)": "infinite",
								"flipToken()": "2404",
								"getDepositFee(uint256)": "330",
								"getLiquidity(uint256)": "infinite",
								"getMasterChef()": "2420",
								"minAmountToSwap()": "2330",
								"owner()": "2354",
								"renounceOwnership()": "28203",
								"rewardSystem()": "2448",
								"rewardToken()": "2447",
								"setMasterEntertainer(address)": "27924",
								"setMinAmountToSwap(uint256)": "25597",
								"setRewardSystem(address)": "28349",
								"setRouter(address)": "27901",
								"stakeToken()": "2360",
								"transferOwnership(address)": "infinite",
								"withdraw(uint256,uint256,address)": "infinite"
							},
							"internal": {
								"_deposit(uint256,uint256)": "infinite",
								"enterStake(uint256,uint256)": "infinite",
								"leaveStake(uint256,uint256)": "infinite",
								"safeTokenTransfer(contract IERC20,address,uint256)": "infinite",
								"swapEthForTokens(uint256)": "infinite",
								"swapForEth(contract IERC20,uint256)": "infinite",
								"swapToken()": "infinite",
								"swapTokensForEth(contract IERC20,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 754,
									"end": 9669,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 754,
									"end": 9669,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 754,
									"end": 9669,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1598,
									"end": 1605,
									"name": "PUSH",
									"source": 12,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 1565,
									"end": 1605,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 1565,
									"end": 1605,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 2690,
									"end": 3618,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 867,
									"end": 890,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 665,
									"end": 675,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 867,
									"end": 876,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 867,
									"end": 890,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 867,
									"end": 890,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 867,
									"end": 890,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2867,
									"end": 2900,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2867,
									"end": 2900,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2859,
									"end": 2937,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 2859,
									"end": 2937,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2859,
									"end": 2937,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2859,
									"end": 2937,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2859,
									"end": 2937,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2859,
									"end": 2937,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1620,
									"end": 1622,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2859,
									"end": 2937,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 2859,
									"end": 2937,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2859,
									"end": 2937,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1602,
									"end": 1623,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1602,
									"end": 1623,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1602,
									"end": 1623,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1639,
									"end": 1657,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 1639,
									"end": 1657,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1639,
									"end": 1657,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1632,
									"end": 1662,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1698,
									"end": 1732,
									"name": "PUSH",
									"source": 16,
									"value": "466C697020546F6B656E2063616E2774206265207A65726F2061646472657373"
								},
								{
									"begin": 1678,
									"end": 1696,
									"name": "PUSH",
									"source": 16,
									"value": "44"
								},
								{
									"begin": 1678,
									"end": 1696,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1678,
									"end": 1696,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1671,
									"end": 1733,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1750,
									"end": 1768,
									"name": "PUSH",
									"source": 16,
									"value": "64"
								},
								{
									"begin": 1750,
									"end": 1768,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2859,
									"end": 2937,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 2859,
									"end": 2937,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2859,
									"end": 2937,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2859,
									"end": 2937,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2859,
									"end": 2937,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2859,
									"end": 2937,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2859,
									"end": 2937,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 2859,
									"end": 2937,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2859,
									"end": 2937,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2859,
									"end": 2937,
									"name": "tag",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 2859,
									"end": 2937,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2955,
									"end": 2989,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2955,
									"end": 2989,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2947,
									"end": 3027,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 2947,
									"end": 3027,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2947,
									"end": 3027,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2947,
									"end": 3027,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2947,
									"end": 3027,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2947,
									"end": 3027,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1218,
									"end": 1220,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2947,
									"end": 3027,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 2947,
									"end": 3027,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2947,
									"end": 3027,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1200,
									"end": 1221,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1257,
									"end": 1259,
									"name": "PUSH",
									"source": 16,
									"value": "21"
								},
								{
									"begin": 1237,
									"end": 1255,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 1237,
									"end": 1255,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1237,
									"end": 1255,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1230,
									"end": 1260,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1296,
									"end": 1330,
									"name": "PUSH",
									"source": 16,
									"value": "5374616B6520546F6B656E2063616E2774206265207A65726F20616464726573"
								},
								{
									"begin": 1276,
									"end": 1294,
									"name": "PUSH",
									"source": 16,
									"value": "44"
								},
								{
									"begin": 1276,
									"end": 1294,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1276,
									"end": 1294,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1269,
									"end": 1331,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1347,
									"end": 1365,
									"name": "PUSH",
									"source": 16,
									"value": "64"
								},
								{
									"begin": 1347,
									"end": 1365,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1347,
									"end": 1365,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1340,
									"end": 1371,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1388,
									"end": 1407,
									"name": "PUSH",
									"source": 16,
									"value": "84"
								},
								{
									"begin": 1388,
									"end": 1407,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2947,
									"end": 3027,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 1016,
									"end": 1413,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2947,
									"end": 3027,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 2947,
									"end": 3027,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3045,
									"end": 3080,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3045,
									"end": 3080,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 3119,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 3037,
									"end": 3119,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 3119,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3037,
									"end": 3119,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3037,
									"end": 3119,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 3119,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2390,
									"end": 2392,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3037,
									"end": 3119,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3037,
									"end": 3119,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 3119,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2372,
									"end": 2393,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2429,
									"end": 2431,
									"name": "PUSH",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 2409,
									"end": 2427,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 2409,
									"end": 2427,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2409,
									"end": 2427,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2402,
									"end": 2432,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2468,
									"end": 2502,
									"name": "PUSH",
									"source": 16,
									"value": "52657761726420546F6B656E2063616E2774206265207A65726F206164647265"
								},
								{
									"begin": 2448,
									"end": 2466,
									"name": "PUSH",
									"source": 16,
									"value": "44"
								},
								{
									"begin": 2448,
									"end": 2466,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2448,
									"end": 2466,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2441,
									"end": 2503,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7373"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2519,
									"end": 2537,
									"name": "PUSH",
									"source": 16,
									"value": "64"
								},
								{
									"begin": 2519,
									"end": 2537,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2519,
									"end": 2537,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2512,
									"end": 2544,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2561,
									"end": 2580,
									"name": "PUSH",
									"source": 16,
									"value": "84"
								},
								{
									"begin": 2561,
									"end": 2580,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3037,
									"end": 3119,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 2188,
									"end": 2586,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3037,
									"end": 3119,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 3037,
									"end": 3119,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3137,
									"end": 3164,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3137,
									"end": 3164,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3129,
									"end": 3204,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 3129,
									"end": 3204,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3129,
									"end": 3204,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3129,
									"end": 3204,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3129,
									"end": 3204,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3129,
									"end": 3204,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2793,
									"end": 2795,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3129,
									"end": 3204,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3129,
									"end": 3204,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3129,
									"end": 3204,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2775,
									"end": 2796,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2832,
									"end": 2834,
									"name": "PUSH",
									"source": 16,
									"value": "23"
								},
								{
									"begin": 2812,
									"end": 2830,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 2812,
									"end": 2830,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2812,
									"end": 2830,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2805,
									"end": 2835,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2871,
									"end": 2905,
									"name": "PUSH",
									"source": 16,
									"value": "5265776172642053797374656D2063616E2774206265207A65726F2061646472"
								},
								{
									"begin": 2851,
									"end": 2869,
									"name": "PUSH",
									"source": 16,
									"value": "44"
								},
								{
									"begin": 2851,
									"end": 2869,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2851,
									"end": 2869,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2844,
									"end": 2906,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "657373"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2922,
									"end": 2940,
									"name": "PUSH",
									"source": 16,
									"value": "64"
								},
								{
									"begin": 2922,
									"end": 2940,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2922,
									"end": 2940,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2915,
									"end": 2948,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2965,
									"end": 2984,
									"name": "PUSH",
									"source": 16,
									"value": "84"
								},
								{
									"begin": 2965,
									"end": 2984,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3129,
									"end": 3204,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 2591,
									"end": 2990,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3129,
									"end": 3204,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 3129,
									"end": 3204,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3222,
									"end": 3256,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3222,
									"end": 3256,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3214,
									"end": 3294,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3214,
									"end": 3294,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3214,
									"end": 3294,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3214,
									"end": 3294,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3214,
									"end": 3294,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3214,
									"end": 3294,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3197,
									"end": 3199,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3214,
									"end": 3294,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3214,
									"end": 3294,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3214,
									"end": 3294,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3179,
									"end": 3200,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3236,
									"end": 3238,
									"name": "PUSH",
									"source": 16,
									"value": "21"
								},
								{
									"begin": 3216,
									"end": 3234,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 3216,
									"end": 3234,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3216,
									"end": 3234,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3209,
									"end": 3239,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3275,
									"end": 3309,
									"name": "PUSH",
									"source": 16,
									"value": "4D617374657220436865662063616E2774206265207A65726F20616464726573"
								},
								{
									"begin": 3255,
									"end": 3273,
									"name": "PUSH",
									"source": 16,
									"value": "44"
								},
								{
									"begin": 3255,
									"end": 3273,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3255,
									"end": 3273,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3248,
									"end": 3310,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3326,
									"end": 3344,
									"name": "PUSH",
									"source": 16,
									"value": "64"
								},
								{
									"begin": 3326,
									"end": 3344,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3326,
									"end": 3344,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3319,
									"end": 3350,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3367,
									"end": 3386,
									"name": "PUSH",
									"source": 16,
									"value": "84"
								},
								{
									"begin": 3367,
									"end": 3386,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3214,
									"end": 3294,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 2995,
									"end": 3392,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3214,
									"end": 3294,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3214,
									"end": 3294,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3312,
									"end": 3344,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3312,
									"end": 3344,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3304,
									"end": 3389,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 3304,
									"end": 3389,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3304,
									"end": 3389,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3304,
									"end": 3389,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3304,
									"end": 3389,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3304,
									"end": 3389,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1981,
									"end": 1983,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3304,
									"end": 3389,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3304,
									"end": 3389,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3304,
									"end": 3389,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1963,
									"end": 1984,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2020,
									"end": 2022,
									"name": "PUSH",
									"source": 16,
									"value": "28"
								},
								{
									"begin": 2000,
									"end": 2018,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 2000,
									"end": 2018,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2000,
									"end": 2018,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1993,
									"end": 2023,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2059,
									"end": 2093,
									"name": "PUSH",
									"source": 16,
									"value": "4D617374657220456E7465727461696E65722063616E2774206265207A65726F"
								},
								{
									"begin": 2039,
									"end": 2057,
									"name": "PUSH",
									"source": 16,
									"value": "44"
								},
								{
									"begin": 2039,
									"end": 2057,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2039,
									"end": 2057,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2032,
									"end": 2094,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2061646472657373"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2110,
									"end": 2128,
									"name": "PUSH",
									"source": 16,
									"value": "64"
								},
								{
									"begin": 2110,
									"end": 2128,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2110,
									"end": 2128,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2103,
									"end": 2141,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2158,
									"end": 2177,
									"name": "PUSH",
									"source": 16,
									"value": "84"
								},
								{
									"begin": 2158,
									"end": 2177,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3304,
									"end": 3389,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 1779,
									"end": 2183,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3304,
									"end": 3389,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 3304,
									"end": 3389,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3399,
									"end": 3408,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3399,
									"end": 3421,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3399,
									"end": 3421,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3399,
									"end": 3421,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3399,
									"end": 3421,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3399,
									"end": 3421,
									"name": "AND",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3399,
									"end": 3421,
									"name": "SWAP9",
									"source": 12
								},
								{
									"begin": 3399,
									"end": 3421,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 3399,
									"end": 3421,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3399,
									"end": 3421,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3399,
									"end": 3421,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3399,
									"end": 3421,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3399,
									"end": 3421,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 3431,
									"end": 3455,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3431,
									"end": 3455,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3431,
									"end": 3455,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3431,
									"end": 3455,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3431,
									"end": 3455,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 3431,
									"end": 3455,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 3431,
									"end": 3455,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3431,
									"end": 3455,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 3431,
									"end": 3455,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3431,
									"end": 3455,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 3431,
									"end": 3455,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3431,
									"end": 3455,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3431,
									"end": 3455,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3431,
									"end": 3455,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3465,
									"end": 3482,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 3465,
									"end": 3503,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3465,
									"end": 3503,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3465,
									"end": 3503,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3465,
									"end": 3503,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3465,
									"end": 3503,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3465,
									"end": 3503,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3465,
									"end": 3503,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3465,
									"end": 3503,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3465,
									"end": 3503,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3465,
									"end": 3503,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3465,
									"end": 3503,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3465,
									"end": 3503,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3465,
									"end": 3503,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 3513,
									"end": 3537,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3513,
									"end": 3537,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3513,
									"end": 3537,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3513,
									"end": 3537,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3513,
									"end": 3537,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 3513,
									"end": 3537,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3513,
									"end": 3537,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3513,
									"end": 3537,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 3513,
									"end": 3537,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3513,
									"end": 3537,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 3513,
									"end": 3537,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3513,
									"end": 3537,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3513,
									"end": 3537,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 3513,
									"end": 3537,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3547,
									"end": 3558,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3547,
									"end": 3573,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3547,
									"end": 3573,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3547,
									"end": 3573,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3547,
									"end": 3573,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3547,
									"end": 3573,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3547,
									"end": 3573,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3547,
									"end": 3573,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3547,
									"end": 3573,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3547,
									"end": 3573,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3547,
									"end": 3573,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3547,
									"end": 3573,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3547,
									"end": 3573,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3547,
									"end": 3573,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3547,
									"end": 3573,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "5"
								},
								{
									"begin": 3583,
									"end": 3611,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3583,
									"end": 3611,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3583,
									"end": 3611,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3583,
									"end": 3611,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3583,
									"end": 3611,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3583,
									"end": 3611,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3583,
									"end": 3611,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3583,
									"end": 3611,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3583,
									"end": 3611,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3583,
									"end": 3611,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3583,
									"end": 3611,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3583,
									"end": 3611,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3583,
									"end": 3611,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 754,
									"end": 9669,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 754,
									"end": 9669,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2041,
									"end": 2210,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2041,
									"end": 2210,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2096,
									"end": 2112,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2096,
									"end": 2112,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2086,
									"end": 2210,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2041,
									"end": 2210,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2041,
									"end": 2210,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 1011,
									"name": "tag",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 202,
									"end": 208,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 218,
									"end": 224,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 226,
									"end": 232,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 234,
									"end": 240,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 248,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 295,
									"end": 298,
									"name": "PUSH",
									"source": 16,
									"value": "C0"
								},
								{
									"begin": 283,
									"end": 292,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 274,
									"end": 281,
									"name": "DUP10",
									"source": 16
								},
								{
									"begin": 270,
									"end": 293,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 266,
									"end": 299,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 263,
									"end": 316,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 263,
									"end": 316,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 263,
									"end": 316,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 312,
									"end": 313,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 310,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 302,
									"end": 314,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 263,
									"end": 316,
									"name": "tag",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 263,
									"end": 316,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 344,
									"end": 353,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 338,
									"end": 354,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 363,
									"end": 394,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "36"
								},
								{
									"begin": 388,
									"end": 393,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 363,
									"end": 394,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 363,
									"end": 394,
									"name": "JUMP",
									"source": 16,
									"value": "[in]"
								},
								{
									"begin": 363,
									"end": 394,
									"name": "tag",
									"source": 16,
									"value": "36"
								},
								{
									"begin": 363,
									"end": 394,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 463,
									"end": 465,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 448,
									"end": 466,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 448,
									"end": 466,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 442,
									"end": 467,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 413,
									"end": 418,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 413,
									"end": 418,
									"name": "SWAP7",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 476,
									"end": 509,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 442,
									"end": 467,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 476,
									"end": 509,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 476,
									"end": 509,
									"name": "JUMP",
									"source": 16,
									"value": "[in]"
								},
								{
									"begin": 476,
									"end": 509,
									"name": "tag",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 476,
									"end": 509,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 580,
									"end": 582,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 565,
									"end": 583,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 565,
									"end": 583,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 559,
									"end": 584,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 528,
									"end": 535,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 528,
									"end": 535,
									"name": "SWAP6",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 593,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 559,
									"end": 584,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 593,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 593,
									"end": 626,
									"name": "JUMP",
									"source": 16,
									"value": "[in]"
								},
								{
									"begin": 593,
									"end": 626,
									"name": "tag",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 593,
									"end": 626,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 697,
									"end": 699,
									"name": "PUSH",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 682,
									"end": 700,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 682,
									"end": 700,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 676,
									"end": 701,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 645,
									"end": 652,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 645,
									"end": 652,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 710,
									"end": 743,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 676,
									"end": 701,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 710,
									"end": 743,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 710,
									"end": 743,
									"name": "JUMP",
									"source": 16,
									"value": "[in]"
								},
								{
									"begin": 710,
									"end": 743,
									"name": "tag",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 710,
									"end": 743,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 814,
									"end": 817,
									"name": "PUSH",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 799,
									"end": 818,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 799,
									"end": 818,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 793,
									"end": 819,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 762,
									"end": 769,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 762,
									"end": 769,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 828,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 793,
									"end": 819,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 828,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 828,
									"end": 861,
									"name": "JUMP",
									"source": 16,
									"value": "[in]"
								},
								{
									"begin": 828,
									"end": 861,
									"name": "tag",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 828,
									"end": 861,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 932,
									"end": 935,
									"name": "PUSH",
									"source": 16,
									"value": "A0"
								},
								{
									"begin": 917,
									"end": 936,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 917,
									"end": 936,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 911,
									"end": 937,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 880,
									"end": 887,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 880,
									"end": 887,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 946,
									"end": 979,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "42"
								},
								{
									"begin": 911,
									"end": 937,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 946,
									"end": 979,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 946,
									"end": 979,
									"name": "JUMP",
									"source": 16,
									"value": "[in]"
								},
								{
									"begin": 946,
									"end": 979,
									"name": "tag",
									"source": 16,
									"value": "42"
								},
								{
									"begin": 946,
									"end": 979,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 998,
									"end": 1005,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 988,
									"end": 1005,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 988,
									"end": 1005,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 988,
									"end": 1005,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 14,
									"end": 1011,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 14,
									"end": 1011,
									"name": "SWAP6",
									"source": 16
								},
								{
									"begin": 14,
									"end": 1011,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 14,
									"end": 1011,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 14,
									"end": 1011,
									"name": "SWAP6",
									"source": 16
								},
								{
									"begin": 14,
									"end": 1011,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 14,
									"end": 1011,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 14,
									"end": 1011,
									"name": "SWAP6",
									"source": 16
								},
								{
									"begin": 14,
									"end": 1011,
									"name": "JUMP",
									"source": 16,
									"value": "[out]"
								},
								{
									"begin": 3397,
									"end": 3528,
									"name": "tag",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 3397,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3472,
									"end": 3503,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3472,
									"end": 3503,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3462,
									"end": 3504,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3462,
									"end": 3504,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 3452,
									"end": 3522,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "50"
								},
								{
									"begin": 3452,
									"end": 3522,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3518,
									"end": 3519,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3515,
									"end": 3516,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3508,
									"end": 3520,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 3452,
									"end": 3522,
									"name": "tag",
									"source": 16,
									"value": "50"
								},
								{
									"begin": 3452,
									"end": 3522,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3397,
									"end": 3528,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3397,
									"end": 3528,
									"name": "JUMP",
									"source": 16,
									"value": "[out]"
								},
								{
									"begin": 3397,
									"end": 3528,
									"name": "tag",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 3397,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 754,
									"end": 9669,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 754,
									"end": 9669,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 754,
									"end": 9669,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 754,
									"end": 9669,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 754,
									"end": 9669,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 754,
									"end": 9669,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 754,
									"end": 9669,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b59443e4ff04ef171c5f5ecbb3b728c5380c4b8aa0ab3a7010d9b73a9935f60c64736f6c63430008070033",
									".code": [
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "C0D78655"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "C0D78655"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "E2BBB158"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "F72B2A4C"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "F7C618C1"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "951583C3"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "9FBE42E3"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "B5644963"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "51ED6A30"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "51ED6A30"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "54613450"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "5945365E"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "73D38793"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "AD58D2F"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "13F43A57"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "2B0A696D"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "2B3EA9E1"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 754,
											"end": 9669,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9314,
											"end": 9339,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9314,
											"end": 9339,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9314,
											"end": 9339,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9302,
											"end": 9304,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9287,
											"end": 9305,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4745,
											"end": 4905,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 4745,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4745,
											"end": 4905,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 4745,
											"end": 4905,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4745,
											"end": 4905,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4745,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 4745,
											"end": 4905,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4745,
											"end": 4905,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4745,
											"end": 4905,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4745,
											"end": 4905,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4745,
											"end": 4905,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 4745,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4745,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 4745,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 4745,
											"end": 4905,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4745,
											"end": 4905,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4745,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 4745,
											"end": 4905,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4745,
											"end": 4905,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 4745,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4745,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4745,
											"end": 4905,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3946,
											"end": 4203,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 3946,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3946,
											"end": 4203,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 3946,
											"end": 4203,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3946,
											"end": 4203,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3946,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 3946,
											"end": 4203,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3946,
											"end": 4203,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3946,
											"end": 4203,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3946,
											"end": 4203,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3946,
											"end": 4203,
											"name": "tag",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 3946,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3946,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 3946,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 3946,
											"end": 4203,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 3946,
											"end": 4203,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3946,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 3946,
											"end": 4203,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3946,
											"end": 4203,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 3946,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3946,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 3946,
											"end": 4203,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3257,
											"end": 3289,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3257,
											"end": 3289,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3257,
											"end": 3289,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3239,
											"end": 3290,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3239,
											"end": 3290,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3227,
											"end": 3229,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3212,
											"end": 3230,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 3093,
											"end": 3296,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4449,
											"end": 4735,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 4449,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4449,
											"end": 4735,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 4449,
											"end": 4735,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4449,
											"end": 4735,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4449,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 4449,
											"end": 4735,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4449,
											"end": 4735,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4449,
											"end": 4735,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4449,
											"end": 4735,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4449,
											"end": 4735,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 4449,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4449,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 4449,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 4449,
											"end": 4735,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4449,
											"end": 4735,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4449,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4449,
											"end": 4735,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4449,
											"end": 4735,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 4449,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4449,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 4449,
											"end": 4735,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5532,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 5354,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5354,
											"end": 5532,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 5354,
											"end": 5532,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5354,
											"end": 5532,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5354,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 5354,
											"end": 5532,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5354,
											"end": 5532,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5354,
											"end": 5532,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5354,
											"end": 5532,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5354,
											"end": 5532,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 5354,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5354,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 5354,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 5354,
											"end": 5532,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5354,
											"end": 5532,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5354,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 5354,
											"end": 5532,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5354,
											"end": 5532,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 5354,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5354,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 5354,
											"end": 5532,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5542,
											"end": 5645,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 5542,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5542,
											"end": 5645,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 5542,
											"end": 5645,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5542,
											"end": 5645,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5542,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 5542,
											"end": 5645,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5542,
											"end": 5645,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5542,
											"end": 5645,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5542,
											"end": 5645,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5542,
											"end": 5645,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 5542,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5542,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 5542,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 5542,
											"end": 5645,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5542,
											"end": 5645,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5542,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 5542,
											"end": 5645,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5542,
											"end": 5645,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 5542,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5611,
											"end": 5618,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5611,
											"end": 5618,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5542,
											"end": 5645,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5235,
											"end": 5344,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 5235,
											"end": 5344,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5235,
											"end": 5344,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 5235,
											"end": 5344,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5235,
											"end": 5344,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5235,
											"end": 5344,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 5235,
											"end": 5344,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5235,
											"end": 5344,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5235,
											"end": 5344,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5235,
											"end": 5344,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5235,
											"end": 5344,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 5235,
											"end": 5344,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5326,
											"end": 5336,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5326,
											"end": 5336,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5326,
											"end": 5336,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5235,
											"end": 5344,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 5235,
											"end": 5344,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4213,
											"end": 4439,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 4213,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4213,
											"end": 4439,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 4213,
											"end": 4439,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4213,
											"end": 4439,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4213,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 4213,
											"end": 4439,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4213,
											"end": 4439,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4213,
											"end": 4439,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4213,
											"end": 4439,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4213,
											"end": 4439,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 4213,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4213,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 4213,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 4213,
											"end": 4439,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4213,
											"end": 4439,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4213,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4213,
											"end": 4439,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4213,
											"end": 4439,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 4213,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4213,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 4213,
											"end": 4439,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6903,
											"end": 7201,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 6903,
											"end": 7201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6903,
											"end": 7201,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 6903,
											"end": 7201,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6903,
											"end": 7201,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6903,
											"end": 7201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 6903,
											"end": 7201,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6903,
											"end": 7201,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6903,
											"end": 7201,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6903,
											"end": 7201,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6903,
											"end": 7201,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 6903,
											"end": 7201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6903,
											"end": 7201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 6903,
											"end": 7201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 6903,
											"end": 7201,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 6903,
											"end": 7201,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6903,
											"end": 7201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 6903,
											"end": 7201,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6903,
											"end": 7201,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 6903,
											"end": 7201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6903,
											"end": 7201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 6903,
											"end": 7201,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1300,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1275,
											"end": 1300,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1275,
											"end": 1300,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1275,
											"end": 1300,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1275,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 1275,
											"end": 1300,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1275,
											"end": 1300,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1275,
											"end": 1300,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1275,
											"end": 1300,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1275,
											"end": 1300,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 1275,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1300,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1275,
											"end": 1300,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1275,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 1275,
											"end": 1300,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1300,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1275,
											"end": 1300,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1275,
											"end": 1300,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2546,
											"end": 2563,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 2546,
											"end": 2563,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2546,
											"end": 2563,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2531,
											"end": 2541,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2523,
											"end": 2563,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "tag",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "tag",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6644,
											"end": 6653,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6641,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 6641,
											"end": 6770,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6669,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 6680,
											"end": 6684,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6686,
											"end": 6693,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6669,
											"end": 6679,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 6669,
											"end": 6694,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6669,
											"end": 6694,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 6669,
											"end": 6694,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6641,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 6641,
											"end": 6770,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6641,
											"end": 6770,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 6641,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6735,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6725,
											"end": 6735,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "441A3E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10390,
											"end": 10415,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 10390,
											"end": 10415,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10390,
											"end": 10415,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10431,
											"end": 10449,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 10431,
											"end": 10449,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10431,
											"end": 10449,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6725,
											"end": 6735,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6735,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6735,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6735,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6744,
											"name": "PUSH",
											"source": 12,
											"value": "441A3E70"
										},
										{
											"begin": 6725,
											"end": 6744,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10363,
											"end": 10381,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 10363,
											"end": 10381,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6725,
											"end": 6759,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6641,
											"end": 6770,
											"name": "tag",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 6641,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6782,
											"end": 6793,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6782,
											"end": 6793,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6779,
											"end": 6861,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 6779,
											"end": 6861,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6809,
											"end": 6819,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 6809,
											"end": 6819,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6809,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 6809,
											"end": 6850,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6809,
											"end": 6819,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6833,
											"end": 6840,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6809,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 6809,
											"end": 6850,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6809,
											"end": 6850,
											"name": "tag",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 6809,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6870,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 6870,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 6870,
											"end": 6881,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6870,
											"end": 6881,
											"name": "tag",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 6870,
											"end": 6881,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6525,
											"end": 6888,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4745,
											"end": 4905,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4745,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4820,
											"end": 4835,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 4820,
											"end": 4848,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4848,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4848,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4863,
											"end": 4898,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4863,
											"end": 4898,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9314,
											"end": 9339,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9314,
											"end": 9339,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9314,
											"end": 9339,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4863,
											"end": 4898,
											"name": "PUSH",
											"source": 12,
											"value": "A5CE75F7F52A2E09706441F9B9106CFFF4275FD35963A11DAD9C45B9AE50B288"
										},
										{
											"begin": 4863,
											"end": 4898,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9302,
											"end": 9304,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9287,
											"end": 9305,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4863,
											"end": 4898,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4863,
											"end": 4898,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4863,
											"end": 4898,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4863,
											"end": 4898,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4863,
											"end": 4898,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4863,
											"end": 4898,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4863,
											"end": 4898,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 4745,
											"end": 4905,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4745,
											"end": 4905,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3946,
											"end": 4203,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 3946,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4028,
											"end": 4055,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4028,
											"end": 4055,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4020,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 4020,
											"end": 4102,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4020,
											"end": 4102,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4020,
											"end": 4102,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4020,
											"end": 4102,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4020,
											"end": 4102,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8548,
											"end": 8550,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4102,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4020,
											"end": 4102,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4020,
											"end": 4102,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8530,
											"end": 8551,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8587,
											"end": 8589,
											"name": "PUSH",
											"source": 16,
											"value": "2A"
										},
										{
											"begin": 8567,
											"end": 8585,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 8567,
											"end": 8585,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8567,
											"end": 8585,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8560,
											"end": 8590,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8626,
											"end": 8660,
											"name": "PUSH",
											"source": 16,
											"value": "5265776172642053797374656D2063616E27742062652073657420746F207A65"
										},
										{
											"begin": 8606,
											"end": 8624,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 8606,
											"end": 8624,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8606,
											"end": 8624,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8599,
											"end": 8661,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8677,
											"end": 8695,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 8677,
											"end": 8695,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8677,
											"end": 8695,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8670,
											"end": 8710,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8727,
											"end": 8746,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 8727,
											"end": 8746,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4020,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 8346,
											"end": 8752,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4020,
											"end": 4102,
											"name": "tag",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 4020,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4112,
											"end": 4124,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 4112,
											"end": 4140,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4112,
											"end": 4140,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4112,
											"end": 4140,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4112,
											"end": 4140,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4112,
											"end": 4140,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4112,
											"end": 4140,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4112,
											"end": 4140,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4112,
											"end": 4140,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 4112,
											"end": 4140,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4112,
											"end": 4140,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4112,
											"end": 4140,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4155,
											"end": 4196,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4155,
											"end": 4196,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4171,
											"end": 4181,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 4171,
											"end": 4181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4155,
											"end": 4196,
											"name": "PUSH",
											"source": 12,
											"value": "BB802456C4E53C17A623585D276747174BCF39120266B12C32C0BB73DF94ACB6"
										},
										{
											"begin": 4155,
											"end": 4196,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4155,
											"end": 4196,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 3946,
											"end": 4203,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3946,
											"end": 4203,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4449,
											"end": 4735,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 4449,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4542,
											"end": 4574,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4542,
											"end": 4574,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4534,
											"end": 4626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 4534,
											"end": 4626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4534,
											"end": 4626,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4534,
											"end": 4626,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4534,
											"end": 4626,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4534,
											"end": 4626,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7774,
											"end": 7776,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4534,
											"end": 4626,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4534,
											"end": 4626,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4534,
											"end": 4626,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 7777,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7813,
											"end": 7815,
											"name": "PUSH",
											"source": 16,
											"value": "2F"
										},
										{
											"begin": 7793,
											"end": 7811,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 7793,
											"end": 7811,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7793,
											"end": 7811,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7786,
											"end": 7816,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7852,
											"end": 7886,
											"name": "PUSH",
											"source": 16,
											"value": "4D617374657220456E7465727461696E65722063616E27742062652073657420"
										},
										{
											"begin": 7832,
											"end": 7850,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 7832,
											"end": 7850,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7832,
											"end": 7850,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7825,
											"end": 7887,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "746F207A65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7903,
											"end": 7921,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 7903,
											"end": 7921,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7903,
											"end": 7921,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7896,
											"end": 7941,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7958,
											"end": 7977,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 7958,
											"end": 7977,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4534,
											"end": 4626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 7572,
											"end": 7983,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4534,
											"end": 4626,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 4534,
											"end": 4626,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4636,
											"end": 4653,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 4636,
											"end": 4674,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4636,
											"end": 4674,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4636,
											"end": 4674,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4636,
											"end": 4674,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4636,
											"end": 4674,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4636,
											"end": 4674,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4636,
											"end": 4674,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4636,
											"end": 4674,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 4636,
											"end": 4674,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4636,
											"end": 4674,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4636,
											"end": 4674,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4689,
											"end": 4728,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4689,
											"end": 4728,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4689,
											"end": 4728,
											"name": "PUSH",
											"source": 12,
											"value": "BF63A13967243F035997AB7188EAE733CDF9C8F25EA71389D3A0615450A07286"
										},
										{
											"begin": 4689,
											"end": 4728,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4689,
											"end": 4728,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 4449,
											"end": 4735,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4449,
											"end": 4735,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1687,
											"end": 1688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1669,
											"end": 1690,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1669,
											"end": 1690,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1669,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5354,
											"end": 5532,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 5354,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5472,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5462,
											"end": 5472,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "93F1A40B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9524,
											"end": 9549,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9524,
											"end": 9549,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9524,
											"end": 9549,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5496,
											"end": 5500,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 9565,
											"end": 9583,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 9565,
											"end": 9583,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9565,
											"end": 9583,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9558,
											"end": 9618,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5422,
											"end": 5429,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5422,
											"end": 5429,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5422,
											"end": 5429,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5422,
											"end": 5429,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5462,
											"end": 5472,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5472,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5472,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5472,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5481,
											"name": "PUSH",
											"source": 12,
											"value": "93F1A40B"
										},
										{
											"begin": 5462,
											"end": 5481,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9497,
											"end": 9515,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 9497,
											"end": 9515,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "tag",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 5462,
											"end": 5502,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5441,
											"end": 5502,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5354,
											"end": 5532,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5354,
											"end": 5532,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4213,
											"end": 4439,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 4213,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4295,
											"end": 4325,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4295,
											"end": 4325,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4287,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 4287,
											"end": 4365,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4287,
											"end": 4365,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4287,
											"end": 4365,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4287,
											"end": 4365,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4287,
											"end": 4365,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6599,
											"end": 6601,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4287,
											"end": 4365,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4287,
											"end": 4365,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4287,
											"end": 4365,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6581,
											"end": 6602,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6638,
											"end": 6640,
											"name": "PUSH",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 6618,
											"end": 6636,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 6618,
											"end": 6636,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6618,
											"end": 6636,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6611,
											"end": 6641,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6677,
											"end": 6711,
											"name": "PUSH",
											"source": 16,
											"value": "526F757465722063616E27742062652073657420746F207A65726F2061646472"
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6650,
											"end": 6712,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6728,
											"end": 6746,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 6728,
											"end": 6746,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6728,
											"end": 6746,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6721,
											"end": 6754,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6771,
											"end": 6790,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 6771,
											"end": 6790,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4287,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 6397,
											"end": 6796,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4287,
											"end": 4365,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 4287,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 4375,
											"end": 4391,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4391,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4375,
											"end": 4391,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4375,
											"end": 4391,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4391,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4391,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4391,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4391,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4391,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4391,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4391,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4432,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4406,
											"end": 4432,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4432,
											"name": "PUSH",
											"source": 12,
											"value": "6DE4326A8B9054D72D9DBAB97D27BC4EDFFADEE7D966F5AF9CC4EAFDAF8E5455"
										},
										{
											"begin": 4406,
											"end": 4432,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4406,
											"end": 4432,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 4213,
											"end": 4439,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4213,
											"end": 4439,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2546,
											"end": 2563,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 2546,
											"end": 2563,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2546,
											"end": 2563,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2531,
											"end": 2541,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2523,
											"end": 2563,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6112,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 6121,
											"end": 6125,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6127,
											"end": 6134,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6112,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 6112,
											"end": 6135,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6112,
											"end": 6135,
											"name": "tag",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 6112,
											"end": 6135,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1934,
											"end": 1956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1956,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5785,
											"end": 5787,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5788,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5824,
											"end": 5826,
											"name": "PUSH",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 5804,
											"end": 5822,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 5804,
											"end": 5822,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5804,
											"end": 5822,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5797,
											"end": 5827,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5863,
											"end": 5897,
											"name": "PUSH",
											"source": 16,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5843,
											"end": 5861,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 5843,
											"end": 5861,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5843,
											"end": 5861,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5836,
											"end": 5898,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5914,
											"end": 5932,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 5914,
											"end": 5932,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5914,
											"end": 5932,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5907,
											"end": 5943,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5960,
											"end": 5979,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 5960,
											"end": 5979,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5583,
											"end": 5985,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2009,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2019,
											"end": 2027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2009,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2009,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2009,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2009,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6903,
											"end": 7201,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 6903,
											"end": 7201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2546,
											"end": 2563,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 2546,
											"end": 2563,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2546,
											"end": 2563,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2531,
											"end": 2541,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2523,
											"end": 2563,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "tag",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 2515,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7038,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7028,
											"end": 7038,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5459CF77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9314,
											"end": 9339,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 9314,
											"end": 9339,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9314,
											"end": 9339,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7028,
											"end": 7038,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7038,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7038,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7038,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7061,
											"name": "PUSH",
											"source": 12,
											"value": "A8B39EEE"
										},
										{
											"begin": 7028,
											"end": 7061,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9287,
											"end": 9305,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 9287,
											"end": 9305,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "tag",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "tag",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 7028,
											"end": 7067,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7095,
											"end": 7105,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7095,
											"end": 7105,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7077,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 7077,
											"end": 7124,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7095,
											"end": 7105,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7095,
											"end": 7105,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7107,
											"end": 7114,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7116,
											"end": 7123,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7077,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 7077,
											"end": 7124,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7077,
											"end": 7124,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 7077,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7159,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7149,
											"end": 7159,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7178,
											"end": 7182,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3239,
											"end": 3290,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7134,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 7134,
											"end": 7185,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7143,
											"end": 7147,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7143,
											"end": 7147,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7149,
											"end": 7159,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7159,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7159,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7159,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7169,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 7149,
											"end": 7169,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3212,
											"end": 3230,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3212,
											"end": 3230,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 7149,
											"end": 7184,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7134,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 7134,
											"end": 7185,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7352,
											"end": 7463,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 7352,
											"end": 7463,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7432,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7422,
											"end": 7432,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "441A3E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10390,
											"end": 10415,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10390,
											"end": 10415,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10390,
											"end": 10415,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10431,
											"end": 10449,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 10431,
											"end": 10449,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10431,
											"end": 10449,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7422,
											"end": 7432,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7432,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7432,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7432,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7441,
											"name": "PUSH",
											"source": 12,
											"value": "441A3E70"
										},
										{
											"begin": 7422,
											"end": 7441,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10363,
											"end": 10381,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 10363,
											"end": 10381,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7456,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7352,
											"end": 7463,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7352,
											"end": 7463,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7352,
											"end": 7463,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 634,
											"end": 839,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 634,
											"end": 839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 773,
											"end": 831,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 831,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3873,
											"end": 3905,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3873,
											"end": 3905,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 773,
											"end": 831,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 773,
											"end": 831,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 773,
											"end": 831,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3855,
											"end": 3906,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3915,
											"end": 3949,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3915,
											"end": 3949,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3915,
											"end": 3949,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 746,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 746,
											"end": 832,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 766,
											"end": 771,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 766,
											"end": 771,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 796,
											"end": 819,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 773,
											"end": 831,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 773,
											"end": 831,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 773,
											"end": 831,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 831,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 773,
											"end": 831,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 773,
											"end": 831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 773,
											"end": 831,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 773,
											"end": 831,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 773,
											"end": 831,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 773,
											"end": 831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 773,
											"end": 831,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 773,
											"end": 831,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 773,
											"end": 831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 773,
											"end": 831,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 773,
											"end": 831,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 773,
											"end": 831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 773,
											"end": 831,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 773,
											"end": 831,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 773,
											"end": 831,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 773,
											"end": 831,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 773,
											"end": 831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 773,
											"end": 831,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 773,
											"end": 831,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 773,
											"end": 831,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 773,
											"end": 831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 773,
											"end": 831,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 773,
											"end": 831,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 773,
											"end": 831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 773,
											"end": 831,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 773,
											"end": 831,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 746,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 746,
											"end": 832,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7478,
											"end": 7913,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 7478,
											"end": 7913,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7553,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 7542,
											"end": 7553,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7572,
											"end": 7576,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3239,
											"end": 3290,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7518,
											"end": 7539,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7518,
											"end": 7539,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7542,
											"end": 7553,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7553,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7563,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 7542,
											"end": 7563,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3212,
											"end": 3230,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3212,
											"end": 3230,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7599,
											"end": 7605,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 7599,
											"end": 7605,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7518,
											"end": 7578,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7518,
											"end": 7578,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7599,
											"end": 7605,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7591,
											"end": 7620,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7591,
											"end": 7641,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7591,
											"end": 7641,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7591,
											"end": 7641,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 7591,
											"end": 7641,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7591,
											"end": 7641,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7624,
											"end": 7637,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7624,
											"end": 7641,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7591,
											"end": 7641,
											"name": "tag",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 7591,
											"end": 7641,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7588,
											"end": 7899,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7588,
											"end": 7899,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 7588,
											"end": 7899,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7675,
											"end": 7686,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 7675,
											"end": 7686,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7657,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 7657,
											"end": 7711,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7675,
											"end": 7686,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7688,
											"end": 7695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7688,
											"end": 7695,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 7688,
											"end": 7695,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7697,
											"end": 7710,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7657,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 7657,
											"end": 7711,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7588,
											"end": 7899,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 7588,
											"end": 7899,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7739,
											"end": 7752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7739,
											"end": 7771,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7736,
											"end": 7899,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 7736,
											"end": 7899,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7819,
											"end": 7830,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 7819,
											"end": 7830,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7787,
											"end": 7805,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7787,
											"end": 7805,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7808,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 7808,
											"end": 7846,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7819,
											"end": 7830,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7832,
											"end": 7845,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7808,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 7808,
											"end": 7846,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7808,
											"end": 7846,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 7808,
											"end": 7846,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7787,
											"end": 7846,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7787,
											"end": 7846,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7860,
											"end": 7888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 7877,
											"end": 7887,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7860,
											"end": 7876,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 7860,
											"end": 7888,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2041,
											"end": 2210,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2041,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2086,
											"end": 2210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2210,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6152,
											"end": 6515,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 6152,
											"end": 6515,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6220,
											"end": 6230,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 6220,
											"end": 6230,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6220,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 6220,
											"end": 6292,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6220,
											"end": 6230,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6256,
											"end": 6266,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6277,
											"end": 6281,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 6284,
											"end": 6291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6220,
											"end": 6247,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 6220,
											"end": 6292,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6220,
											"end": 6292,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 6220,
											"end": 6292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6312,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 6302,
											"end": 6312,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6312,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6329,
											"end": 6339,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6329,
											"end": 6339,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6329,
											"end": 6339,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6329,
											"end": 6339,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3855,
											"end": 3906,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3915,
											"end": 3949,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3915,
											"end": 3949,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3915,
											"end": 3949,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6302,
											"end": 6312,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6312,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6312,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 6302,
											"end": 6350,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6363,
											"end": 6372,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6360,
											"end": 6488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 6360,
											"end": 6488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6388,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 6399,
											"end": 6403,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6405,
											"end": 6412,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6388,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 6388,
											"end": 6413,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6388,
											"end": 6413,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 6388,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6360,
											"end": 6488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 6360,
											"end": 6488,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6360,
											"end": 6488,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 6360,
											"end": 6488,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6454,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6444,
											"end": 6454,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C57762B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10390,
											"end": 10415,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10390,
											"end": 10415,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10390,
											"end": 10415,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10431,
											"end": 10449,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 10431,
											"end": 10449,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10431,
											"end": 10449,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10424,
											"end": 10458,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6444,
											"end": 6454,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6454,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6454,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6454,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6462,
											"name": "PUSH",
											"source": 12,
											"value": "E2BBB158"
										},
										{
											"begin": 6444,
											"end": 6462,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10363,
											"end": 10381,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 10363,
											"end": 10381,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6360,
											"end": 6488,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 6360,
											"end": 6488,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6497,
											"end": 6508,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 6497,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 6497,
											"end": 6508,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9205,
											"end": 9662,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 9205,
											"end": 9662,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9342,
											"end": 9346,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3239,
											"end": 3290,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9295,
											"end": 9315,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9295,
											"end": 9315,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9318,
											"end": 9333,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9333,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9333,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9333,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 9318,
											"end": 9333,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3212,
											"end": 3230,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3212,
											"end": 3230,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9295,
											"end": 9348,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9295,
											"end": 9348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9358,
											"end": 9378,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9410,
											"end": 9422,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9400,
											"end": 9407,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9400,
											"end": 9422,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9396,
											"end": 9577,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9396,
											"end": 9577,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 9396,
											"end": 9577,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3873,
											"end": 3905,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3873,
											"end": 3905,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3873,
											"end": 3905,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3855,
											"end": 3906,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3915,
											"end": 3949,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3915,
											"end": 3949,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3915,
											"end": 3949,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9456,
											"end": 9470,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9470,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9470,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9470,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 9456,
											"end": 9470,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 9456,
											"end": 9489,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9438,
											"end": 9489,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9438,
											"end": 9489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9396,
											"end": 9577,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 9396,
											"end": 9577,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9396,
											"end": 9577,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 9396,
											"end": 9577,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3873,
											"end": 3905,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3873,
											"end": 3905,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3873,
											"end": 3905,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3855,
											"end": 3906,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3915,
											"end": 3949,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3915,
											"end": 3949,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3915,
											"end": 3949,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9538,
											"end": 9552,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9552,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9552,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9552,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 9538,
											"end": 9552,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 9538,
											"end": 9566,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9520,
											"end": 9566,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9520,
											"end": 9566,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9396,
											"end": 9577,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 9396,
											"end": 9577,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9594,
											"end": 9609,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9586,
											"end": 9655,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 9586,
											"end": 9655,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9586,
											"end": 9655,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9586,
											"end": 9655,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9586,
											"end": 9655,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9586,
											"end": 9655,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7003,
											"end": 7005,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9586,
											"end": 9655,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9586,
											"end": 9655,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9586,
											"end": 9655,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6985,
											"end": 7006,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7042,
											"end": 7044,
											"name": "PUSH",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 7022,
											"end": 7040,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 7022,
											"end": 7040,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7022,
											"end": 7040,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7015,
											"end": 7045,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7081,
											"end": 7115,
											"name": "PUSH",
											"source": 16,
											"value": "41424F41543A3A73616665546F6B656E5472616E736665723A207472616E7366"
										},
										{
											"begin": 7061,
											"end": 7079,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 7061,
											"end": 7079,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7061,
											"end": 7079,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7054,
											"end": 7116,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7132,
											"end": 7150,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 7132,
											"end": 7150,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7132,
											"end": 7150,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7125,
											"end": 7164,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7181,
											"end": 7200,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 7181,
											"end": 7200,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9586,
											"end": 9655,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 6801,
											"end": 7206,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9586,
											"end": 9655,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 9586,
											"end": 9655,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9285,
											"end": 9662,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9285,
											"end": 9662,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9205,
											"end": 9662,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9205,
											"end": 9662,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9205,
											"end": 9662,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9205,
											"end": 9662,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3140,
											"end": 3846,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 3140,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3582,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 3613,
											"end": 3617,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "PUSH",
											"source": 5,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3593,
											"end": 3598,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3585,
											"end": 3612,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 3585,
											"end": 3612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3668,
											"end": 3685,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3668,
											"end": 3685,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3654,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3668,
											"end": 3689,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3664,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3664,
											"end": 3840,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3763,
											"end": 3773,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3744,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3744,
											"end": 3829,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3744,
											"end": 3829,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3744,
											"end": 3829,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3744,
											"end": 3829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3744,
											"end": 3829,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8959,
											"end": 8961,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3744,
											"end": 3829,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3744,
											"end": 3829,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3744,
											"end": 3829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8941,
											"end": 8962,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8998,
											"end": 9000,
											"name": "PUSH",
											"source": 16,
											"value": "2A"
										},
										{
											"begin": 8978,
											"end": 8996,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 8978,
											"end": 8996,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8978,
											"end": 8996,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8971,
											"end": 9001,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9037,
											"end": 9071,
											"name": "PUSH",
											"source": 16,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 9017,
											"end": 9035,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 9017,
											"end": 9035,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9017,
											"end": 9035,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9010,
											"end": 9072,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9088,
											"end": 9106,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 9088,
											"end": 9106,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9088,
											"end": 9106,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9081,
											"end": 9121,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9138,
											"end": 9157,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 9138,
											"end": 9157,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3744,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 8757,
											"end": 9163,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7923,
											"end": 8219,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 7923,
											"end": 8219,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7991,
											"end": 7998,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "SELFBALANCE",
											"source": 12
										},
										{
											"begin": 8114,
											"end": 8145,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 8131,
											"end": 8136,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8138,
											"end": 8144,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8114,
											"end": 8130,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 8114,
											"end": 8145,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8114,
											"end": 8145,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 8114,
											"end": 8145,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8171,
											"end": 8212,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 8171,
											"end": 8192,
											"name": "SELFBALANCE",
											"source": 12
										},
										{
											"begin": 8197,
											"end": 8211,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8171,
											"end": 8196,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 8171,
											"end": 8212,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8171,
											"end": 8212,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 8171,
											"end": 8212,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8164,
											"end": 8212,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 7923,
											"end": 8219,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7923,
											"end": 8219,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8789,
											"end": 9195,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 8789,
											"end": 9195,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8893,
											"end": 8894,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8855,
											"end": 8876,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8855,
											"end": 8876,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8915,
											"end": 8921,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 8915,
											"end": 8921,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15AB88C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8855,
											"end": 8895,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8855,
											"end": 8895,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8915,
											"end": 8921,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8921,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8921,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8921,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8926,
											"name": "PUSH",
											"source": 12,
											"value": "AD5C4648"
										},
										{
											"begin": 8915,
											"end": 8926,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8921,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 8915,
											"end": 8928,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8905,
											"end": 8909,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8910,
											"end": 8911,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8905,
											"end": 8912,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8905,
											"end": 8912,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8905,
											"end": 8912,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8905,
											"end": 8912,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8905,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 8905,
											"end": 8912,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8905,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 8905,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 8905,
											"end": 8912,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8905,
											"end": 8912,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 8905,
											"end": 8912,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8905,
											"end": 8928,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8905,
											"end": 8928,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8905,
											"end": 8928,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8905,
											"end": 8912,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8905,
											"end": 8912,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8905,
											"end": 8912,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8905,
											"end": 8912,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 8905,
											"end": 8912,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8905,
											"end": 8912,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8905,
											"end": 8912,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8905,
											"end": 8912,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8905,
											"end": 8912,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8905,
											"end": 8928,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8956,
											"end": 8965,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8956,
											"end": 8965,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8956,
											"end": 8965,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8956,
											"end": 8965,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8956,
											"end": 8965,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 8942,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 8942,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8956,
											"end": 8965,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 8956,
											"end": 8965,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8938,
											"end": 8966,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 8966,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 8966,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 8966,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 8991,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 8985,
											"end": 8991,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9137,
											"end": 9149,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 9137,
											"end": 9149,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B6F9DE95"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 8991,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 8991,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 8991,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 8991,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9042,
											"name": "PUSH",
											"source": 12,
											"value": "B6F9DE95"
										},
										{
											"begin": 8985,
											"end": 9042,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9050,
											"end": 9061,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9050,
											"end": 9061,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 8991,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8985,
											"end": 8991,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9119,
											"end": 9123,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9119,
											"end": 9123,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9137,
											"end": 9149,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9137,
											"end": 9149,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9137,
											"end": 9149,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9137,
											"end": 9149,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9163,
											"end": 9178,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 9163,
											"end": 9178,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8985,
											"end": 9188,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8845,
											"end": 9195,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 9195,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 9195,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 845,
											"end": 1086,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 845,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3559,
											"end": 3574,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3559,
											"end": 3574,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3559,
											"end": 3574,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3541,
											"end": 3575,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3611,
											"end": 3626,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3611,
											"end": 3626,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3591,
											"end": 3609,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 3591,
											"end": 3609,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3591,
											"end": 3609,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3584,
											"end": 3627,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3643,
											"end": 3661,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 3643,
											"end": 3661,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3643,
											"end": 3661,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3670,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3670,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3670,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 983,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 983,
											"end": 1079,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1033,
											"end": 1060,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3476,
											"end": 3494,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 3476,
											"end": 3494,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 3301,
											"end": 3676,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 983,
											"end": 1079,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 983,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 845,
											"end": 1086,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 845,
											"end": 1086,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 845,
											"end": 1086,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 845,
											"end": 1086,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 845,
											"end": 1086,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3461,
											"end": 3684,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 3461,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3606,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3625,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 3647,
											"end": 3653,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3655,
											"end": 3659,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3676,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 3625,
											"end": 3677,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3625,
											"end": 3677,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 3625,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3618,
											"end": 3677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3618,
											"end": 3677,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3461,
											"end": 3684,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 3461,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3461,
											"end": 3684,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3461,
											"end": 3684,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3461,
											"end": 3684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3461,
											"end": 3684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3461,
											"end": 3684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3461,
											"end": 3684,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8229,
											"end": 8779,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 8229,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8406,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8390,
											"end": 8406,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8406,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8404,
											"end": 8405,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 8390,
											"end": 8406,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8406,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8406,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8406,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8390,
											"end": 8406,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8406,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8406,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8406,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8366,
											"end": 8387,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8366,
											"end": 8387,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8406,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8390,
											"end": 8406,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8406,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8406,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8406,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8406,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8406,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8406,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8406,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8406,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8390,
											"end": 8406,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8366,
											"end": 8406,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8434,
											"end": 8439,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8420,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8421,
											"end": 8422,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8416,
											"end": 8423,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8423,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8423,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8423,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 8416,
											"end": 8423,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 8416,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 8416,
											"end": 8423,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8416,
											"end": 8423,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 8416,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8416,
											"end": 8440,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8440,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8440,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8423,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8416,
											"end": 8423,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8423,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8423,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8423,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8423,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8423,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8423,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8423,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8423,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8440,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8440,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8440,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8440,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8466,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 8460,
											"end": 8466,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15AB88C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8466,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8466,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8466,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8466,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8466,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8471,
											"name": "PUSH",
											"source": 12,
											"value": "AD5C4648"
										},
										{
											"begin": 8460,
											"end": 8471,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8423,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8423,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8466,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 8460,
											"end": 8473,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8454,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8455,
											"end": 8456,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 8450,
											"end": 8457,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8457,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8457,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8457,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 8450,
											"end": 8457,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 8450,
											"end": 8457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 8450,
											"end": 8457,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8450,
											"end": 8457,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 8450,
											"end": 8457,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8450,
											"end": 8473,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8473,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8473,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8457,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8450,
											"end": 8457,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8457,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8457,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8457,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8457,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8457,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8457,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8457,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8473,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8506,
											"end": 8512,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 8506,
											"end": 8512,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8506,
											"end": 8512,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8506,
											"end": 8512,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8506,
											"end": 8512,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3855,
											"end": 3906,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3915,
											"end": 3949,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3915,
											"end": 3949,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3915,
											"end": 3949,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8484,
											"end": 8497,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8497,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8497,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8497,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8497,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 8484,
											"end": 8497,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 8484,
											"end": 8527,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8563,
											"end": 8569,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 8563,
											"end": 8569,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "791AC947"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8563,
											"end": 8569,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8569,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8569,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8569,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8620,
											"name": "PUSH",
											"source": 12,
											"value": "791AC947"
										},
										{
											"begin": 8563,
											"end": 8620,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8634,
											"end": 8645,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8634,
											"end": 8645,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8569,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8563,
											"end": 8569,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8702,
											"end": 8706,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8702,
											"end": 8706,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8728,
											"end": 8732,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 8728,
											"end": 8732,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8747,
											"end": 8762,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 8747,
											"end": 8762,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8772,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3039,
											"end": 3135,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 3039,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3097,
											"end": 3104,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 3127,
											"end": 3128,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3124,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4548,
											"end": 5048,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 4548,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4713,
											"end": 4725,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4770,
											"end": 4775,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4766,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4775,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4775,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 4737,
											"end": 4818,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4818,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4737,
											"end": 4818,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4737,
											"end": 4818,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4818,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6192,
											"end": 6194,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4737,
											"end": 4818,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4737,
											"end": 4818,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4818,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6174,
											"end": 6195,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6231,
											"end": 6233,
											"name": "PUSH",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6204,
											"end": 6234,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6270,
											"end": 6304,
											"name": "PUSH",
											"source": 16,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 6250,
											"end": 6268,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 6250,
											"end": 6268,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6250,
											"end": 6268,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6243,
											"end": 6305,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6321,
											"end": 6339,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 6321,
											"end": 6339,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6321,
											"end": 6339,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6314,
											"end": 6350,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6367,
											"end": 6386,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 6367,
											"end": 6386,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4737,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 5990,
											"end": 6392,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4737,
											"end": 4818,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 4737,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1054,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1054,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 4828,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 4828,
											"end": 4888,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4828,
											"end": 4888,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4828,
											"end": 4888,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4828,
											"end": 4888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4828,
											"end": 4888,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8190,
											"end": 8192,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4828,
											"end": 4888,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4828,
											"end": 4888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4828,
											"end": 4888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8172,
											"end": 8193,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8229,
											"end": 8231,
											"name": "PUSH",
											"source": 16,
											"value": "1D"
										},
										{
											"begin": 8209,
											"end": 8227,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 8209,
											"end": 8227,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8209,
											"end": 8227,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8202,
											"end": 8232,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8268,
											"end": 8299,
											"name": "PUSH",
											"source": 16,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 8248,
											"end": 8266,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 8248,
											"end": 8266,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8266,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8241,
											"end": 8300,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8317,
											"end": 8335,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 8317,
											"end": 8335,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4828,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 7988,
											"end": 8341,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4828,
											"end": 4888,
											"name": "tag",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 4828,
											"end": 4888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4900,
											"end": 4912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4914,
											"end": 4937,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4947,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4941,
											"end": 4952,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4960,
											"end": 4965,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 4971,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "tag",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "tag",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "tag",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4972,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4972,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4989,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 5007,
											"end": 5014,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5016,
											"end": 5026,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5028,
											"end": 5040,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 4989,
											"end": 5041,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4989,
											"end": 5041,
											"name": "tag",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 4989,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4982,
											"end": 5041,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 5048,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4548,
											"end": 5048,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6950,
											"end": 7642,
											"name": "tag",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 6950,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7096,
											"end": 7108,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7124,
											"end": 7131,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7120,
											"end": 7636,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7120,
											"end": 7636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 7120,
											"end": 7636,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7154,
											"end": 7164,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7147,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 7147,
											"end": 7164,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7120,
											"end": 7636,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 7120,
											"end": 7636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7265,
											"end": 7282,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7265,
											"end": 7282,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7265,
											"end": 7286,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7261,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 7261,
											"end": 7626,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7459,
											"end": 7469,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7453,
											"end": 7470,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7519,
											"end": 7534,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7506,
											"end": 7516,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7502,
											"end": 7504,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7498,
											"end": 7517,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7491,
											"end": 7535,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7261,
											"end": 7626,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 7261,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7598,
											"end": 7610,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7591,
											"end": 7611,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7591,
											"end": 7611,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7591,
											"end": 7611,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7591,
											"end": 7611,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7591,
											"end": 7611,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7591,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 7591,
											"end": 7611,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7591,
											"end": 7611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7591,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 7591,
											"end": 7611,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 261,
											"name": "tag",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 14,
											"end": 261,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 181,
											"end": 190,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 200,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "324"
										},
										{
											"begin": 225,
											"end": 230,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 200,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 200,
											"end": 231,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 517,
											"name": "tag",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 266,
											"end": 517,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 336,
											"end": 342,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 389,
											"end": 391,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 377,
											"end": 386,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 368,
											"end": 375,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 364,
											"end": 387,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 360,
											"end": 392,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 357,
											"end": 409,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "382"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 405,
											"end": 406,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 403,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 395,
											"end": 407,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 357,
											"end": 409,
											"name": "tag",
											"source": 16,
											"value": "382"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 437,
											"end": 446,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 431,
											"end": 447,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 456,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "324"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 456,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 456,
											"end": 487,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 522,
											"end": 799,
											"name": "tag",
											"source": 16,
											"value": "250"
										},
										{
											"begin": 522,
											"end": 799,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 589,
											"end": 595,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 644,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 630,
											"end": 639,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 621,
											"end": 628,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 617,
											"end": 640,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 613,
											"end": 645,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 610,
											"end": 662,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 610,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 610,
											"end": 662,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 658,
											"end": 659,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 656,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 648,
											"end": 660,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 610,
											"end": 662,
											"name": "tag",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 610,
											"end": 662,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 690,
											"end": 699,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 684,
											"end": 700,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 743,
											"end": 748,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 736,
											"end": 749,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 729,
											"end": 750,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 722,
											"end": 727,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 719,
											"end": 751,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 709,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "324"
										},
										{
											"begin": 709,
											"end": 769,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 765,
											"end": 766,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 762,
											"end": 763,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 755,
											"end": 767,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1083,
											"end": 1263,
											"name": "tag",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 1083,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1142,
											"end": 1148,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1195,
											"end": 1197,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1183,
											"end": 1192,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1174,
											"end": 1181,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1170,
											"end": 1193,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1166,
											"end": 1198,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1163,
											"end": 1215,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1163,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 1163,
											"end": 1215,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1211,
											"end": 1212,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1209,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1201,
											"end": 1213,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1163,
											"end": 1215,
											"name": "tag",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 1163,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1234,
											"end": 1257,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1234,
											"end": 1257,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1083,
											"end": 1263,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1083,
											"end": 1263,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 1268,
											"end": 1452,
											"name": "tag",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 1268,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1338,
											"end": 1344,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1393,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1379,
											"end": 1388,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1370,
											"end": 1377,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1366,
											"end": 1389,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1362,
											"end": 1394,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1359,
											"end": 1411,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1359,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 1359,
											"end": 1411,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1407,
											"end": 1408,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1404,
											"end": 1405,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1397,
											"end": 1409,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1359,
											"end": 1411,
											"name": "tag",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 1359,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1430,
											"end": 1446,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1430,
											"end": 1446,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1268,
											"end": 1452,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1268,
											"end": 1452,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 1457,
											"end": 1705,
											"name": "tag",
											"source": 16,
											"value": "93"
										},
										{
											"begin": 1457,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1525,
											"end": 1531,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1539,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1586,
											"end": 1588,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1583,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1565,
											"end": 1572,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1561,
											"end": 1584,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1557,
											"end": 1589,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1554,
											"end": 1606,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1554,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "395"
										},
										{
											"begin": 1554,
											"end": 1606,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1602,
											"end": 1603,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1600,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1592,
											"end": 1604,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1554,
											"end": 1606,
											"name": "tag",
											"source": 16,
											"value": "395"
										},
										{
											"begin": 1554,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1625,
											"end": 1648,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1625,
											"end": 1648,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1625,
											"end": 1648,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1695,
											"end": 1697,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1667,
											"end": 1699,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1667,
											"end": 1699,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1457,
											"end": 1705,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 1710,
											"end": 1955,
											"name": "tag",
											"source": 16,
											"value": "169"
										},
										{
											"begin": 1710,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1789,
											"end": 1795,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1803,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1850,
											"end": 1852,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1838,
											"end": 1847,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1829,
											"end": 1836,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1825,
											"end": 1848,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1821,
											"end": 1853,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1818,
											"end": 1870,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1818,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 1818,
											"end": 1870,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1866,
											"end": 1867,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1863,
											"end": 1864,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1856,
											"end": 1868,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1818,
											"end": 1870,
											"name": "tag",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 1818,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1889,
											"end": 1905,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1889,
											"end": 1905,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1945,
											"end": 1947,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1930,
											"end": 1948,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1930,
											"end": 1948,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1930,
											"end": 1948,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1889,
											"end": 1905,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1889,
											"end": 1905,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1955,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 1960,
											"end": 2343,
											"name": "tag",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 1960,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2037,
											"end": 2043,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2051,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2053,
											"end": 2059,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2108,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 2094,
											"end": 2103,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2085,
											"end": 2092,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2081,
											"end": 2104,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2077,
											"end": 2109,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2074,
											"end": 2126,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2074,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 2074,
											"end": 2126,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2122,
											"end": 2123,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2119,
											"end": 2120,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2112,
											"end": 2124,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2074,
											"end": 2126,
											"name": "tag",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 2074,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2145,
											"end": 2168,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2135,
											"end": 2168,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2135,
											"end": 2168,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2215,
											"end": 2217,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2204,
											"end": 2213,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2200,
											"end": 2218,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2187,
											"end": 2219,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2177,
											"end": 2219,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2177,
											"end": 2219,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2258,
											"end": 2267,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2254,
											"end": 2272,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2241,
											"end": 2273,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2282,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2282,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 2282,
											"end": 2313,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2282,
											"end": 2313,
											"name": "tag",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 2282,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2322,
											"end": 2337,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2322,
											"end": 2337,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2322,
											"end": 2337,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2343,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2343,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2343,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2343,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2343,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2343,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 2348,
											"end": 2809,
											"name": "tag",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 2348,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2401,
											"end": 2404,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2444,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2433,
											"end": 2445,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2466,
											"end": 2472,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2461,
											"end": 2464,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2454,
											"end": 2473,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2492,
											"end": 2496,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2521,
											"end": 2523,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2516,
											"end": 2519,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2512,
											"end": 2524,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2505,
											"end": 2524,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 2505,
											"end": 2524,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2558,
											"end": 2560,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2551,
											"end": 2556,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2547,
											"end": 2561,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2579,
											"end": 2580,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2784,
											"name": "tag",
											"source": 16,
											"value": "403"
										},
										{
											"begin": 2589,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2603,
											"end": 2609,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2600,
											"end": 2601,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2597,
											"end": 2610,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 2589,
											"end": 2784,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2589,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "405"
										},
										{
											"begin": 2589,
											"end": 2784,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2668,
											"end": 2681,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2668,
											"end": 2681,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2664,
											"end": 2703,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2652,
											"end": 2704,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 2652,
											"end": 2704,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2724,
											"end": 2736,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 2724,
											"end": 2736,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2724,
											"end": 2736,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2724,
											"end": 2736,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 2759,
											"end": 2774,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2759,
											"end": 2774,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2759,
											"end": 2774,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2759,
											"end": 2774,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2700,
											"end": 2701,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 2618,
											"end": 2627,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2589,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "403"
										},
										{
											"begin": 2589,
											"end": 2784,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2589,
											"end": 2784,
											"name": "tag",
											"source": 16,
											"value": "405"
										},
										{
											"begin": 2589,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2800,
											"end": 2803,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 2800,
											"end": 2803,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 2348,
											"end": 2809,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2348,
											"end": 2809,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 2814,
											"end": 3088,
											"name": "tag",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 2814,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2943,
											"end": 2946,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2981,
											"end": 2987,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2975,
											"end": 2988,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2997,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 3043,
											"end": 3049,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3038,
											"end": 3041,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3031,
											"end": 3035,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2997,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 2997,
											"end": 3050,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2997,
											"end": 3050,
											"name": "tag",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 2997,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3066,
											"end": 3082,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3066,
											"end": 3082,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3066,
											"end": 3082,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3066,
											"end": 3082,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3066,
											"end": 3082,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2814,
											"end": 3088,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2814,
											"end": 3088,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 4182,
											"end": 4692,
											"name": "tag",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 4182,
											"end": 4692,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4453,
											"end": 4459,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4442,
											"end": 4451,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4435,
											"end": 4460,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4496,
											"end": 4499,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 4491,
											"end": 4493,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4480,
											"end": 4489,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4476,
											"end": 4494,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4469,
											"end": 4500,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4416,
											"end": 4420,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "414"
										},
										{
											"begin": 4569,
											"end": 4572,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 4558,
											"end": 4567,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4554,
											"end": 4573,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4546,
											"end": 4552,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "tag",
											"source": 16,
											"value": "414"
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4610,
											"end": 4642,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 4610,
											"end": 4642,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4610,
											"end": 4642,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 4610,
											"end": 4642,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4605,
											"end": 4607,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4590,
											"end": 4608,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4590,
											"end": 4608,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4583,
											"end": 4643,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4674,
											"end": 4676,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 4659,
											"end": 4677,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4652,
											"end": 4686,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4509,
											"end": 4574,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4182,
											"end": 4692,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4182,
											"end": 4692,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 4697,
											"end": 5080,
											"name": "tag",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 4697,
											"end": 5080,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4846,
											"end": 4848,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4835,
											"end": 4844,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4828,
											"end": 4849,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4809,
											"end": 4813,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4878,
											"end": 4884,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4921,
											"end": 4927,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4916,
											"end": 4918,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4905,
											"end": 4914,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4901,
											"end": 4919,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4894,
											"end": 4928,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4937,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "416"
										},
										{
											"begin": 4996,
											"end": 5002,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4991,
											"end": 4993,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4980,
											"end": 4989,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4976,
											"end": 4994,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4971,
											"end": 4973,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4963,
											"end": 4969,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4937,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 4937,
											"end": 5003,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 4937,
											"end": 5003,
											"name": "tag",
											"source": 16,
											"value": "416"
										},
										{
											"begin": 4937,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5064,
											"end": 5066,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 5043,
											"end": 5058,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5039,
											"end": 5068,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5024,
											"end": 5069,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5024,
											"end": 5069,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5024,
											"end": 5069,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5024,
											"end": 5069,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5071,
											"end": 5073,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5020,
											"end": 5074,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5020,
											"end": 5074,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4697,
											"end": 5080,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4697,
											"end": 5080,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 5085,
											"end": 5578,
											"name": "tag",
											"source": 16,
											"value": "110"
										},
										{
											"begin": 5085,
											"end": 5578,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5287,
											"end": 5289,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5269,
											"end": 5290,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5269,
											"end": 5290,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5269,
											"end": 5290,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5326,
											"end": 5328,
											"name": "PUSH",
											"source": 16,
											"value": "59"
										},
										{
											"begin": 5306,
											"end": 5324,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5306,
											"end": 5324,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5306,
											"end": 5324,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5299,
											"end": 5329,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5365,
											"end": 5399,
											"name": "PUSH",
											"source": 16,
											"value": "41424F41543A3A6F6E6C794D6173746572456E7465727461696E65723A204F6E"
										},
										{
											"begin": 5360,
											"end": 5362,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5345,
											"end": 5363,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5345,
											"end": 5363,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5338,
											"end": 5400,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5436,
											"end": 5470,
											"name": "PUSH",
											"source": 16,
											"value": "6C7920746865206D617374657220656E7465727461696E657220697320616C6C"
										},
										{
											"begin": 5431,
											"end": 5433,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5409,
											"end": 5471,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5508,
											"end": 5535,
											"name": "PUSH",
											"source": 16,
											"value": "6F77656420746F2063616C6C2074686973206D6574686F642100000000000000"
										},
										{
											"begin": 5502,
											"end": 5505,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 5487,
											"end": 5506,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5487,
											"end": 5506,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5480,
											"end": 5536,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5568,
											"end": 5571,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 5553,
											"end": 5572,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5553,
											"end": 5572,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5085,
											"end": 5578,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 7211,
											"end": 7567,
											"name": "tag",
											"source": 16,
											"value": "132"
										},
										{
											"begin": 7211,
											"end": 7567,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7413,
											"end": 7415,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7395,
											"end": 7416,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7395,
											"end": 7416,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7395,
											"end": 7416,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7432,
											"end": 7450,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7432,
											"end": 7450,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7432,
											"end": 7450,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7425,
											"end": 7455,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7491,
											"end": 7525,
											"name": "PUSH",
											"source": 16,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7486,
											"end": 7488,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7471,
											"end": 7489,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7471,
											"end": 7489,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7464,
											"end": 7526,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7558,
											"end": 7560,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 7543,
											"end": 7561,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7543,
											"end": 7561,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7211,
											"end": 7567,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 9629,
											"end": 10211,
											"name": "tag",
											"source": 16,
											"value": "345"
										},
										{
											"begin": 9629,
											"end": 10211,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9928,
											"end": 9934,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 9917,
											"end": 9926,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9910,
											"end": 9935,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9971,
											"end": 9977,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 9966,
											"end": 9968,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9955,
											"end": 9964,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9951,
											"end": 9969,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9944,
											"end": 9978,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10014,
											"end": 10017,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 10009,
											"end": 10011,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 9998,
											"end": 10007,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9994,
											"end": 10012,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9987,
											"end": 10018,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9891,
											"end": 9895,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10035,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "430"
										},
										{
											"begin": 10087,
											"end": 10090,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 10076,
											"end": 10085,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10072,
											"end": 10091,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 10035,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 10035,
											"end": 10092,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 10035,
											"end": 10092,
											"name": "tag",
											"source": 16,
											"value": "430"
										},
										{
											"begin": 10035,
											"end": 10092,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10128,
											"end": 10160,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 10128,
											"end": 10160,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10128,
											"end": 10160,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 10128,
											"end": 10160,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 10123,
											"end": 10125,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 10108,
											"end": 10126,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10108,
											"end": 10126,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10101,
											"end": 10161,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10192,
											"end": 10195,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 10177,
											"end": 10196,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10170,
											"end": 10205,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10027,
											"end": 10092,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 9629,
											"end": 10211,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9629,
											"end": 10211,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 10469,
											"end": 10691,
											"name": "tag",
											"source": 16,
											"value": "351"
										},
										{
											"begin": 10469,
											"end": 10691,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10509,
											"end": 10513,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10537,
											"end": 10538,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10534,
											"end": 10535,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10531,
											"end": 10539,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 10528,
											"end": 10659,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10528,
											"end": 10659,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "433"
										},
										{
											"begin": 10528,
											"end": 10659,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10581,
											"end": 10591,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 10576,
											"end": 10579,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 10572,
											"end": 10592,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 10569,
											"end": 10570,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10562,
											"end": 10593,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 10613,
											"end": 10614,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 10606,
											"end": 10621,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10644,
											"end": 10648,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 10641,
											"end": 10642,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10634,
											"end": 10649,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 10528,
											"end": 10659,
											"name": "tag",
											"source": 16,
											"value": "433"
										},
										{
											"begin": 10528,
											"end": 10659,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10676,
											"end": 10685,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 10676,
											"end": 10685,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10469,
											"end": 10691,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 10696,
											"end": 10954,
											"name": "tag",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 10696,
											"end": 10954,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10768,
											"end": 10769,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10778,
											"end": 10891,
											"name": "tag",
											"source": 16,
											"value": "435"
										},
										{
											"begin": 10778,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10792,
											"end": 10798,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10789,
											"end": 10790,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10786,
											"end": 10799,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 10778,
											"end": 10891,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10778,
											"end": 10891,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 10778,
											"end": 10891,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10868,
											"end": 10879,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10868,
											"end": 10879,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10868,
											"end": 10879,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10862,
											"end": 10880,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 10849,
											"end": 10860,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10849,
											"end": 10860,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10849,
											"end": 10860,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10842,
											"end": 10881,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10814,
											"end": 10816,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10807,
											"end": 10817,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10778,
											"end": 10891,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "435"
										},
										{
											"begin": 10778,
											"end": 10891,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10778,
											"end": 10891,
											"name": "tag",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 10778,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10909,
											"end": 10915,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10906,
											"end": 10907,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10903,
											"end": 10916,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 10900,
											"end": 10948,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10900,
											"end": 10948,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 10900,
											"end": 10948,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10944,
											"end": 10945,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10926,
											"end": 10942,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10926,
											"end": 10942,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10919,
											"end": 10946,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10696,
											"end": 10954,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 10959,
											"end": 11086,
											"name": "tag",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 10959,
											"end": 11086,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11020,
											"end": 11030,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 11015,
											"end": 11018,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 11011,
											"end": 11031,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 11008,
											"end": 11009,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11001,
											"end": 11032,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11051,
											"end": 11055,
											"name": "PUSH",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 11048,
											"end": 11049,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 11041,
											"end": 11056,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11075,
											"end": 11079,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 11072,
											"end": 11073,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11065,
											"end": 11080,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 11223,
											"end": 11354,
											"name": "tag",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 11223,
											"end": 11354,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11298,
											"end": 11329,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11298,
											"end": 11329,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 11288,
											"end": 11330,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11288,
											"end": 11330,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 11278,
											"end": 11348,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "196"
										},
										{
											"begin": 11278,
											"end": 11348,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11344,
											"end": 11345,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11341,
											"end": 11342,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11334,
											"end": 11346,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"deposit(uint256,uint256)": "e2bbb158",
							"emergencyWithdraw(uint256,uint256,address)": "f72b2a4c",
							"flipToken()": "5945365e",
							"getDepositFee(uint256)": "9fbe42e3",
							"getLiquidity(uint256)": "951583c3",
							"getMasterChef()": "b5644963",
							"minAmountToSwap()": "13f43a57",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardSystem()": "73d38793",
							"rewardToken()": "f7c618c1",
							"setMasterEntertainer(address)": "54613450",
							"setMinAmountToSwap(uint256)": "2b0a696d",
							"setRewardSystem(address)": "2b3ea9e1",
							"setRouter(address)": "c0d78655",
							"stakeToken()": "51ed6a30",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256,uint256,address)": "0ad58d2f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_flipToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_stakeToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardSystem\",\"type\":\"address\"},{\"internalType\":\"contract IPancakeSwapMasterChef\",\"name\":\"_masterChef\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_masterEntertainer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"masterEntertainer\",\"type\":\"address\"}],\"name\":\"SetMasterEntertainer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SetMinAmountToSwap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"SetRewardSystem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"SetRouter\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flipToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"getDepositFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMasterChef\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAmountToSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardSystem\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_masterEntertainer\",\"type\":\"address\"}],\"name\":\"setMasterEntertainer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minAmount\",\"type\":\"uint256\"}],\"name\":\"setMinAmountToSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardSystem\",\"type\":\"address\"}],\"name\":\"setRewardSystem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"_router\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BaseFlipPool.sol\":\"BaseFlipPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd\",\"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x418cfe64226a974419f8ab7287ad4bb413156a4d7af8ab5d9bcaa5678d1a2f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f65118c99d5d6cfe602720418b8551c2da6c3de650e61c5231b0be4396aae0d\",\"dweb:/ipfs/QmdLmkRHJhEifzzDjF44MHXcQx2SXc5EzhpHzN2z1vUq8H\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d41d627f4ef9c6006df8c2d01227d3cf4a6c3359b5704c629d88933272eecadd\",\"dweb:/ipfs/QmYDo7MvMsvuDxuJZ9RC9zFganS3Tm8RYzSmBP5qSmJfuY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b\",\"urls\":[\"bzz-raw://85d5ad2dd23ee127f40907a12865a1e8cb5828814f6f2480285e1827dd72dedf\",\"dweb:/ipfs/QmayKQWJgWmr46DqWseADyUanmqxh662hPNdAkdHRjiQQH\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]},\"contracts/BaseFlipPool.sol\":{\"keccak256\":\"0x549e6f1134fb15d24426c481a46b330d160dc18c407cb0b44bffa1a0df53c01b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2b368239bb811494d47b095886be61baeadcc1b9734874eb64fb557960a7df33\",\"dweb:/ipfs/QmUmRg9EQPyqVSXHeKPDLGYLRwQ92UaVxYfEVq3bcRmyQc\"]},\"contracts/flip_interfaces/IPancakeSwapMasterChef.sol\":{\"keccak256\":\"0xa5fcc53369faff334e6e48b72307a3125b9eb753600d79144cd59c14b947c61a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://040c770da0e9eba42436e0aeb918864f948df895fac84bd7e3c3af4c94c01a89\",\"dweb:/ipfs/QmQejCEKDPacJePHHkdo5SPCx5igG4NhcKeqPQFqCEm4ja\"]},\"contracts/interfaces/IMasterChefContractor.sol\":{\"keccak256\":\"0x3ac949ffab3e5a12adb30e45a149c823b938f395c8ec142f9125f3b8e560b89d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5873371a2cef9fd3a320c3903d766e9ec0f685997f2a9e247906b01c7f4787ce\",\"dweb:/ipfs/QmShABwnxPG9RADMNdkN2EKnyRrfGJCMPf24rdEn982m19\"]},\"contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xca695d0e538e9ff25e60094195cb09927268cfcdebfc7454f0047113bd9f7fa0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fe35341ea6086bfea59aff3dbf7211999b23ffb74822dcf43d37121c9bce0bfc\",\"dweb:/ipfs/QmSvn6N4774bkSbWVYNY73QRU4a5fjybe4VhLVEnM1B6Sm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/BaseFlipPool.sol:BaseFlipPool",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2314,
								"contract": "contracts/BaseFlipPool.sol:BaseFlipPool",
								"label": "masterChef",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IPancakeSwapMasterChef)3123"
							},
							{
								"astId": 2317,
								"contract": "contracts/BaseFlipPool.sol:BaseFlipPool",
								"label": "rewardToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)767"
							},
							{
								"astId": 2320,
								"contract": "contracts/BaseFlipPool.sol:BaseFlipPool",
								"label": "stakeToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)767"
							},
							{
								"astId": 2323,
								"contract": "contracts/BaseFlipPool.sol:BaseFlipPool",
								"label": "flipToken",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(IERC20)767"
							},
							{
								"astId": 2325,
								"contract": "contracts/BaseFlipPool.sol:BaseFlipPool",
								"label": "rewardSystem",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 2328,
								"contract": "contracts/BaseFlipPool.sol:BaseFlipPool",
								"label": "router",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IUniswapV2Router02)2283"
							},
							{
								"astId": 2330,
								"contract": "contracts/BaseFlipPool.sol:BaseFlipPool",
								"label": "masterEntertainer",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 2333,
								"contract": "contracts/BaseFlipPool.sol:BaseFlipPool",
								"label": "minAmountToSwap",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)767": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IPancakeSwapMasterChef)3123": {
								"encoding": "inplace",
								"label": "contract IPancakeSwapMasterChef",
								"numberOfBytes": "20"
							},
							"t_contract(IUniswapV2Router02)2283": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/flip_interfaces/IPancakeSwapMasterChef.sol": {
				"IPancakeSwapMasterChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "enterStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "leaveStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingCake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "withdrawWithoutRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit(uint256,uint256)": "e2bbb158",
							"enterStaking(uint256)": "41441d3b",
							"leaveStaking(uint256)": "1058d281",
							"pendingCake(uint256,address)": "1175a1dd",
							"poolInfo(uint256)": "1526fe27",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70",
							"withdrawWithoutRewards(uint256)": "a8b39eee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"withdrawWithoutRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/flip_interfaces/IPancakeSwapMasterChef.sol\":\"IPancakeSwapMasterChef\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/flip_interfaces/IPancakeSwapMasterChef.sol\":{\"keccak256\":\"0xa5fcc53369faff334e6e48b72307a3125b9eb753600d79144cd59c14b947c61a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://040c770da0e9eba42436e0aeb918864f948df895fac84bd7e3c3af4c94c01a89\",\"dweb:/ipfs/QmQejCEKDPacJePHHkdo5SPCx5igG4NhcKeqPQFqCEm4ja\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IMasterChefContractor.sol": {
				"IMasterChefContractor": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "getDepositFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "getLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMasterChef",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit(uint256,uint256)": "e2bbb158",
							"emergencyWithdraw(uint256,uint256,address)": "f72b2a4c",
							"getDepositFee(uint256)": "9fbe42e3",
							"getLiquidity(uint256)": "951583c3",
							"getMasterChef()": "b5644963",
							"withdraw(uint256,uint256,address)": "0ad58d2f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"getDepositFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMasterChef\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMasterChefContractor.sol\":\"IMasterChefContractor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"contracts/interfaces/IMasterChefContractor.sol\":{\"keccak256\":\"0x3ac949ffab3e5a12adb30e45a149c823b938f395c8ec142f9125f3b8e560b89d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5873371a2cef9fd3a320c3903d766e9ec0f685997f2a9e247906b01c7f4787ce\",\"dweb:/ipfs/QmShABwnxPG9RADMNdkN2EKnyRrfGJCMPf24rdEn982m19\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/TransferHelper.sol\":181:1276  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/TransferHelper.sol\":181:1276  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220563cedce9d3a91c228f4b5b85914c338f842ead52716c631eb9133b61933c38f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220563cedce9d3a91c228f4b5b85914c338f842ead52716c631eb9133b61933c38f64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP EXTCODECOPY 0xED 0xCE SWAP14 GASPRICE SWAP2 0xC2 0x28 DELEGATECALL 0xB5 0xB8 MSIZE EQ 0xC3 CODESIZE 0xF8 TIMESTAMP 0xEA 0xD5 0x27 AND 0xC6 BALANCE 0xEB SWAP2 CALLER 0xB6 NOT CALLER 0xC3 DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "181:1095:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;181:1095:15;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220563cedce9d3a91c228f4b5b85914c338f842ead52716c631eb9133b61933c38f64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP EXTCODECOPY 0xED 0xCE SWAP14 GASPRICE SWAP2 0xC2 0x28 DELEGATECALL 0xB5 0xB8 MSIZE EQ 0xC3 CODESIZE 0xF8 TIMESTAMP 0xEA 0xD5 0x27 AND 0xC6 BALANCE 0xEB SWAP2 CALLER 0xB6 NOT CALLER 0xC3 DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "181:1095:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220563cedce9d3a91c228f4b5b85914c338f842ead52716c631eb9133b61933c38f64736f6c63430008070033",
									".code": [
										{
											"begin": 181,
											"end": 1276,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xca695d0e538e9ff25e60094195cb09927268cfcdebfc7454f0047113bd9f7fa0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fe35341ea6086bfea59aff3dbf7211999b23ffb74822dcf43d37121c9bce0bfc\",\"dweb:/ipfs/QmSvn6N4774bkSbWVYNY73QRU4a5fjybe4VhLVEnM1B6Sm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/BaseFlipPool.sol:105:28:\n    |\n105 |     function getDepositFee(uint256 _pid) external override view returns (uint256) {\n    |                            ^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 5577,
					"file": "contracts/BaseFlipPool.sol",
					"start": 5565
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n   --> contracts/BaseFlipPool.sol:105:5:\n    |\n105 |     function getDepositFee(uint256 _pid) external override view returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 5645,
					"file": "contracts/BaseFlipPool.sol",
					"start": 5542
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1333
						],
						"Ownable": [
							103
						]
					},
					"id": 104,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 104,
							"sourceUnit": 1334,
							"src": "58:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1333,
										"src": "614:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "614:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "90:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 103,
							"linearizedBaseContracts": [
								103,
								1333
							],
							"name": "Ownable",
							"nameLocation": "603:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "644:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 103,
									"src": "628:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "628:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "663:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "700:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "684:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "731:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "715:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "683:57:0"
									},
									"src": "657:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "857:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1323,
																"src": "877:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "867:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "867:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "867:23:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "747:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "857:0:0"
									},
									"scope": 103,
									"src": "843:54:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1028:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1045:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1038:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "903:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "982:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1019:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:9:0"
									},
									"scope": 103,
									"src": "973:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1167:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1185:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1185:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1323,
																	"src": "1196:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1196:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1185:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1210:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1177:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1255:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1064:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1155:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1164:2:0"
									},
									"src": "1146:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1659:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1687:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1679:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1679:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1679:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "1669:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1669:21:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1269:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1649:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1649:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1614:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1631:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1659:0:0"
									},
									"scope": 103,
									"src": "1605:92:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1916:119:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "1934:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1954:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1946:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1946:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1946:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1934:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1958:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1926:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1926:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1926:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2019:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "2009:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2009:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2009:19:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1703:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1906:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1906:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1855:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1881:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1873:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1872:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1916:0:0"
									},
									"scope": 103,
									"src": "1846:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "2086:124:0",
										"statements": [
											{
												"assignments": [
													89
												],
												"declarations": [
													{
														"constant": false,
														"id": 89,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2104:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 101,
														"src": "2096:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 88,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2096:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 91,
												"initialValue": {
													"id": 90,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2115:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2096:25:0"
											},
											{
												"expression": {
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 92,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2131:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 93,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "2140:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2131:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "2131:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 97,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "2184:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 98,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2194:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 96,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2163:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "EmitStatement",
												"src": "2158:45:0"
											}
										]
									},
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setOwner",
									"nameLocation": "2050:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2068:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "2060:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2059:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2086:0:0"
									},
									"scope": 103,
									"src": "2041:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 104,
							"src": "585:1627:0",
							"usedErrors": []
						}
					],
					"src": "33:2180:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							143
						]
					},
					"id": 144,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 105,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 106,
								"nodeType": "StructuredDocumentation",
								"src": "58:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 143,
							"linearizedBaseContracts": [
								143
							],
							"name": "ReentrancyGuard",
							"nameLocation": "827:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 109,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1622:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 143,
									"src": "1597:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 107,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1597:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 108,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1637:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 112,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1669:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 143,
									"src": "1644:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 110,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1644:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 111,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1680:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 114,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1704:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 143,
									"src": "1688:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 113,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1688:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "1732:39:1",
										"statements": [
											{
												"expression": {
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 117,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "1742:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 118,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "1752:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1742:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "1742:22:1"
											}
										]
									},
									"id": 122,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1729:2:1"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1732:0:1"
									},
									"scope": 143,
									"src": "1718:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2170:421:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 126,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "2259:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 127,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "2270:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2259:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2280:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2251:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2251:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "2251:63:1"
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 132,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "2389:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 133,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "2399:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2389:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "2389:18:1"
											},
											{
												"id": 136,
												"nodeType": "PlaceholderStatement",
												"src": "2418:1:1"
											},
											{
												"expression": {
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 137,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "2562:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 138,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "2572:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2562:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2562:22:1"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "1777:364:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."
									},
									"id": 142,
									"name": "nonReentrant",
									"nameLocation": "2155:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:2:1"
									},
									"src": "2146:445:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 144,
							"src": "809:1784:1",
							"usedErrors": []
						}
					],
					"src": "33:2561:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1333
						],
						"ERC20": [
							689
						],
						"IERC20": [
							767
						],
						"IERC20Metadata": [
							792
						]
					},
					"id": 690,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 145,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 690,
							"sourceUnit": 768,
							"src": "58:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 147,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 690,
							"sourceUnit": 793,
							"src": "81:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 148,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 690,
							"sourceUnit": 1334,
							"src": "123:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 150,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1333,
										"src": "1339:7:2"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1339:7:2"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 767,
										"src": "1348:6:2"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1348:6:2"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 792,
										"src": "1356:14:2"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1356:14:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 149,
								"nodeType": "StructuredDocumentation",
								"src": "158:1162:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 689,
							"linearizedBaseContracts": [
								689,
								792,
								767,
								1333
							],
							"name": "ERC20",
							"nameLocation": "1330:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1413:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 689,
									"src": "1377:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1385:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1377:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1396:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1485:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 689,
									"src": "1429:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1437:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1429:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 163,
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1456:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1448:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1467:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1519:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 689,
									"src": "1503:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1503:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1553:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 689,
									"src": "1538:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1538:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1579:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 689,
									"src": "1564:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1564:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1593:298:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 689,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										779
									],
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "2143:29:2",
										"statements": [
											{
												"expression": {
													"id": 195,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2160:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 194,
												"id": 196,
												"nodeType": "Return",
												"src": "2153:12:2"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 191,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2110:8:2"
									},
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "2128:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 192,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2128:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2127:15:2"
									},
									"scope": 689,
									"src": "2074:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										785
									],
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "2356:31:2",
										"statements": [
											{
												"expression": {
													"id": 205,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2373:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 204,
												"id": 206,
												"nodeType": "Return",
												"src": "2366:14:2"
											}
										]
									},
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "2178:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2294:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 201,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2323:8:2"
									},
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2300:2:2"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "2341:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 202,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2341:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2340:15:2"
									},
									"scope": 689,
									"src": "2285:102:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										791
									],
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "3076:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3093:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 214,
												"id": 216,
												"nodeType": "Return",
												"src": "3086:9:2"
											}
										]
									},
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "2393:613:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3020:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 211,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3051:8:2"
									},
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:2:2"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "3069:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 212,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3069:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:7:2"
									},
									"scope": 689,
									"src": "3011:91:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										698
									],
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "3232:36:2",
										"statements": [
											{
												"expression": {
													"id": 225,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3249:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 224,
												"id": 226,
												"nodeType": "Return",
												"src": "3242:19:2"
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "3108:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3171:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 221,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3205:8:2"
									},
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3182:2:2"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "3223:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3222:9:2"
									},
									"scope": 689,
									"src": "3162:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "3409:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 237,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3426:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 239,
													"indexExpression": {
														"id": 238,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "3436:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3426:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 236,
												"id": 240,
												"nodeType": "Return",
												"src": "3419:25:2"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "3274:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3335:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 233,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3382:8:2"
									},
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3353:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "3345:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3344:17:2"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "3400:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3399:9:2"
									},
									"scope": 689,
									"src": "3326:125:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "3746:80:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 254,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1323,
																"src": "3766:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3766:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 256,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "3780:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 257,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "3791:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 253,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "3756:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3756:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "3756:42:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3815:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 252,
												"id": 261,
												"nodeType": "Return",
												"src": "3808:11:2"
											}
										]
									},
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "3457:192:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3663:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 249,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3722:8:2"
									},
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3680:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "3672:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3672:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3699:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "3691:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3691:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3671:35:2"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "3740:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 250,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3740:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3739:6:2"
									},
									"scope": 689,
									"src": "3654:172:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										726
									],
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "3982:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 274,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3999:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 276,
														"indexExpression": {
															"id": 275,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "4011:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3999:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 278,
													"indexExpression": {
														"id": 277,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "4018:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3999:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 273,
												"id": 279,
												"nodeType": "Return",
												"src": "3992:34:2"
											}
										]
									},
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "3832:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3893:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 270,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3955:8:2"
									},
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3911:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "3903:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3903:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3926:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "3918:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3918:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3902:32:2"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "3973:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3973:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3972:9:2"
									},
									"scope": 689,
									"src": "3884:149:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										736
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4260:77:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 293,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1323,
																"src": "4279:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4279:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "4293:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "4302:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 292,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "4270:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4270:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4270:39:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4326:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 291,
												"id": 300,
												"nodeType": "Return",
												"src": "4319:11:2"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "4039:127:2",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4180:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 288,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4236:8:2"
									},
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4196:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4188:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4188:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4213:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4205:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4205:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4187:33:2"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4254:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4254:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4253:6:2"
									},
									"scope": 689,
									"src": "4171:166:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "4946:336:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 316,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4966:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 317,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4974:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 318,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4985:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 315,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "4956:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4956:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "4956:36:2"
											},
											{
												"assignments": [
													322
												],
												"declarations": [
													{
														"constant": false,
														"id": 322,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "5011:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 349,
														"src": "5003:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 321,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5003:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 329,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 323,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5030:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 325,
														"indexExpression": {
															"id": 324,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5042:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5030:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 328,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 326,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "5050:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5050:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5030:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5003:60:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 331,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 322,
																"src": "5081:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 332,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "5101:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5081:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5109:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 330,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5073:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5073:79:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "5073:79:2"
											},
											{
												"id": 346,
												"nodeType": "UncheckedBlock",
												"src": "5162:92:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 338,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "5195:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 339,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1323,
																		"src": "5203:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5203:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 341,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 322,
																		"src": "5217:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 342,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 309,
																		"src": "5236:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5217:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 337,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "5186:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5186:57:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 345,
														"nodeType": "ExpressionStatement",
														"src": "5186:57:2"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5271:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 314,
												"id": 348,
												"nodeType": "Return",
												"src": "5264:11:2"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4343:456:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4813:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 311,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4922:8:2"
									},
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4843:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4835:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4835:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4867:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4859:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4859:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4894:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4886:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4825:81:2"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4940:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 312,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4940:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4939:6:2"
									},
									"scope": 689,
									"src": "4804:478:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "5771:118:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 361,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1323,
																"src": "5790:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5790:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 363,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "5804:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 364,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 165,
																		"src": "5813:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 367,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 365,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1323,
																			"src": "5825:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5825:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5813:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 369,
																"indexExpression": {
																	"id": 368,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "5839:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5813:34:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 370,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "5850:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5813:47:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 360,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "5781:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5781:80:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "5781:80:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5878:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 359,
												"id": 375,
												"nodeType": "Return",
												"src": "5871:11:2"
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "5288:384:2",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5686:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5712:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5704:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5704:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5729:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5721:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5703:37:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5765:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 357,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5765:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5764:6:2"
									},
									"scope": 689,
									"src": "5677:212:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "6475:306:2",
										"statements": [
											{
												"assignments": [
													388
												],
												"declarations": [
													{
														"constant": false,
														"id": 388,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6493:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "6485:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 387,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6485:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 395,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 389,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "6512:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 392,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 390,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1323,
																"src": "6524:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6524:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6512:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 394,
													"indexExpression": {
														"id": 393,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "6538:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6512:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6485:61:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 397,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "6564:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 398,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 382,
																"src": "6584:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6564:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6601:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 396,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6556:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6556:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "6556:85:2"
											},
											{
												"id": 412,
												"nodeType": "UncheckedBlock",
												"src": "6651:102:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 404,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1323,
																		"src": "6684:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6684:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 406,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "6698:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 407,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 388,
																		"src": "6707:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 408,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 382,
																		"src": "6726:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6707:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 403,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "6675:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6675:67:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 411,
														"nodeType": "ExpressionStatement",
														"src": "6675:67:2"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 386,
												"id": 414,
												"nodeType": "Return",
												"src": "6763:11:2"
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "5895:476:2",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6385:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6411:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "6403:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6428:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "6420:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6420:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6402:42:2"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "6469:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 384,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6469:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6468:6:2"
									},
									"scope": 689,
									"src": "6376:405:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "7372:596:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 427,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "7390:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7408:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7400:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 428,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7400:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7400:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7390:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7412:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 426,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7382:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7382:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "7382:70:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 437,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "7470:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7491:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7483:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 438,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7483:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7483:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7470:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7495:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7462:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7462:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "7462:71:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 447,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "7565:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "7573:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 449,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "7584:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 446,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "7544:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7544:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "7544:47:2"
											},
											{
												"assignments": [
													453
												],
												"declarations": [
													{
														"constant": false,
														"id": 453,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "7610:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 492,
														"src": "7602:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 452,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7602:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 457,
												"initialValue": {
													"baseExpression": {
														"id": 454,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "7626:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 456,
													"indexExpression": {
														"id": 455,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "7636:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7626:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7602:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 459,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "7661:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 460,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "7678:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7661:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7686:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 458,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7653:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7653:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 464,
												"nodeType": "ExpressionStatement",
												"src": "7653:74:2"
											},
											{
												"id": 473,
												"nodeType": "UncheckedBlock",
												"src": "7737:77:2",
												"statements": [
													{
														"expression": {
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 465,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "7761:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 467,
																"indexExpression": {
																	"id": 466,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "7771:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7761:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 468,
																	"name": "senderBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 453,
																	"src": "7781:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 469,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "7797:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7781:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7761:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 472,
														"nodeType": "ExpressionStatement",
														"src": "7761:42:2"
													}
												]
											},
											{
												"expression": {
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 474,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "7823:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 476,
														"indexExpression": {
															"id": 475,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "7833:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7823:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 477,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "7847:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7823:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "7823:30:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 481,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "7878:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 482,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "7886:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 483,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "7897:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 480,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "7869:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7869:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "EmitStatement",
												"src": "7864:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 487,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "7935:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 488,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "7943:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 489,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "7954:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 486,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "7915:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7915:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "7915:46:2"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "6787:463:2",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7264:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7291:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "7283:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7283:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7315:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "7307:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7307:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7342:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "7334:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7334:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7273:81:2"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7372:0:2"
									},
									"scope": 689,
									"src": "7255:713:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "8309:324:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 502,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "8327:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8346:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8338:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 503,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8338:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8338:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8327:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8350:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 501,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8319:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8319:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "8319:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8424:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8416:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 512,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8416:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8416:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 516,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8428:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 517,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "8437:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 511,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "8395:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8395:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "8395:49:2"
											},
											{
												"expression": {
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 520,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "8455:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 521,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "8471:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8455:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 523,
												"nodeType": "ExpressionStatement",
												"src": "8455:22:2"
											},
											{
												"expression": {
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 524,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "8487:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 526,
														"indexExpression": {
															"id": 525,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8497:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8487:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 527,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "8509:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8487:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "8487:28:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8547:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8539:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 531,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8539:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8539:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 535,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8551:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "8560:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 530,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "8530:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8530:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "EmitStatement",
												"src": "8525:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8606:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8598:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 540,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8598:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8598:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8610:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "8619:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 539,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "8578:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8578:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "8578:48:2"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "7974:265:2",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8253:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8267:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "8259:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8259:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8284:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "8276:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8276:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8258:33:2"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8309:0:2"
									},
									"scope": 689,
									"src": "8244:389:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "9018:511:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 558,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 552,
																"src": "9036:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9055:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9047:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 559,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9047:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9047:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9036:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9059:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 557,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9028:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9028:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "9028:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 568,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "9127:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9144:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9136:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 569,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9136:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9136:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "9148:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 567,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "9106:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9106:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "9106:49:2"
											},
											{
												"assignments": [
													577
												],
												"declarations": [
													{
														"constant": false,
														"id": 577,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9174:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 620,
														"src": "9166:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 576,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9166:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 581,
												"initialValue": {
													"baseExpression": {
														"id": 578,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "9191:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 580,
													"indexExpression": {
														"id": 579,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "9201:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9191:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9166:43:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 583,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "9227:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 584,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "9245:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9227:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9253:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9219:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9219:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "9219:71:2"
											},
											{
												"id": 597,
												"nodeType": "UncheckedBlock",
												"src": "9300:79:2",
												"statements": [
													{
														"expression": {
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 589,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "9324:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 591,
																"indexExpression": {
																	"id": 590,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 552,
																	"src": "9334:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9324:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 592,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "9345:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 593,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "9362:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9345:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9324:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 596,
														"nodeType": "ExpressionStatement",
														"src": "9324:44:2"
													}
												]
											},
											{
												"expression": {
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 598,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "9388:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 599,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "9404:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9388:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "9388:22:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 603,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "9435:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9452:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9444:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 604,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9444:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9444:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 608,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "9456:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 602,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "9426:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9426:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "EmitStatement",
												"src": "9421:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 612,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "9494:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9511:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9503:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 613,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9503:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9503:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "9515:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 611,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "9474:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9474:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "9474:48:2"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "8639:309:2",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8962:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8976:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "8968:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8968:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8993:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "8985:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8985:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8967:33:2"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9018:0:2"
									},
									"scope": 689,
									"src": "8953:576:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "10065:257:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 632,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "10083:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10100:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10092:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 633,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10092:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10092:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10083:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10104:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 631,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10075:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10075:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "10075:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 642,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "10161:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10180:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10172:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 643,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10172:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10172:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10161:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10184:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10153:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10153:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "10153:68:2"
											},
											{
												"expression": {
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 651,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10232:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 654,
															"indexExpression": {
																"id": 652,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "10244:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10232:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 655,
														"indexExpression": {
															"id": 653,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "10251:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10232:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 656,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "10262:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10232:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 658,
												"nodeType": "ExpressionStatement",
												"src": "10232:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 660,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "10292:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 661,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "10299:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 662,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "10308:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 659,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "10283:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10283:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 664,
												"nodeType": "EmitStatement",
												"src": "10278:37:2"
											}
										]
									},
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "9535:412:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9961:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9987:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "9979:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9979:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10010:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "10002:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10002:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10035:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "10027:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10027:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:78:2"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10065:0:2"
									},
									"scope": 689,
									"src": "9952:370:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "11025:2:2",
										"statements": []
									},
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "10328:573:2",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "10915:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10953:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "10945:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10945:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10975:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "10967:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10995:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "10987:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10987:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10935:72:2"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11025:0:2"
									},
									"scope": 689,
									"src": "10906:121:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "11733:2:2",
										"statements": []
									},
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "11033:577:2",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "11624:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11661:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "11653:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11683:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "11675:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11703:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "11695:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11695:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11643:72:2"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11733:0:2"
									},
									"scope": 689,
									"src": "11615:120:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 690,
							"src": "1321:10416:2",
							"usedErrors": []
						}
					],
					"src": "33:11705:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							767
						]
					},
					"id": 768,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 691,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 692,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 767,
							"linearizedBaseContracts": [
								767
							],
							"name": "IERC20",
							"nameLocation": "139:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 698,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "232:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:3"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "269:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:9:3"
									},
									"scope": 767,
									"src": "223:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "370:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "388:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "380:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:17:3"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "420:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:9:3"
									},
									"scope": 767,
									"src": "361:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "658:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "675:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "667:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "694:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "686:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:35:3"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "720:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:6:3"
									},
									"scope": 767,
									"src": "649:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 726,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1010:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1028:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "1020:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1043:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "1035:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:32:3"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "1075:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:3"
									},
									"scope": 767,
									"src": "1001:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 736,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1746:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1762:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1754:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1779:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1771:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:33:3"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1805:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 733,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:6:3"
									},
									"scope": 767,
									"src": "1737:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2127:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2157:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2149:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2181:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2173:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2208:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2200:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2200:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:81:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2239:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2239:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2238:6:3"
									},
									"scope": 767,
									"src": "2118:127:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "2251:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 757,
									"name": "Transfer",
									"nameLocation": "2420:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2445:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2429:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2467:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2451:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2451:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2479:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2471:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:57:3"
									},
									"src": "2414:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "2492:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 766,
									"name": "Approval",
									"nameLocation": "2651:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2676:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "2660:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2660:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2699:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "2683:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2716:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "2708:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:63:3"
									},
									"src": "2645:78:3"
								}
							],
							"scope": 768,
							"src": "129:2596:3",
							"usedErrors": []
						}
					],
					"src": "33:2693:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							767
						],
						"IERC20Metadata": [
							792
						]
					},
					"id": 793,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 769,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 770,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 793,
							"sourceUnit": 768,
							"src": "58:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 772,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 767,
										"src": "228:6:4"
									},
									"id": 773,
									"nodeType": "InheritanceSpecifier",
									"src": "228:6:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 771,
								"nodeType": "StructuredDocumentation",
								"src": "83:116:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 792,
							"linearizedBaseContracts": [
								792,
								767
							],
							"name": "IERC20Metadata",
							"nameLocation": "210:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "241:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 779,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "309:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "313:2:4"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "339:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 776,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "339:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:15:4"
									},
									"scope": 792,
									"src": "300:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "360:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 785,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "430:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "436:2:4"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "462:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 782,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "462:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "461:15:4"
									},
									"scope": 792,
									"src": "421:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "483:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 791,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "562:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "570:2:4"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "596:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 788,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "596:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:7:4"
									},
									"scope": 792,
									"src": "553:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 793,
							"src": "200:405:4",
							"usedErrors": []
						}
					],
					"src": "33:573:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1312
						],
						"IERC20": [
							767
						],
						"SafeERC20": [
							1016
						]
					},
					"id": 1017,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 794,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 795,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1017,
							"sourceUnit": 768,
							"src": "58:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 796,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1017,
							"sourceUnit": 1313,
							"src": "82:36:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 797,
								"nodeType": "StructuredDocumentation",
								"src": "120:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1016,
							"linearizedBaseContracts": [
								1016
							],
							"name": "SafeERC20",
							"nameLocation": "586:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 800,
									"libraryName": {
										"id": 798,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1312,
										"src": "608:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "602:26:5",
									"typeName": {
										"id": 799,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "620:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "736:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 811,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "766:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$767",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 814,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 803,
																			"src": "796:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$767",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 716,
																		"src": "796:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "796:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 817,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "821:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 818,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "825:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 812,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "773:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "773:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "773:58:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$767",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 810,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "746:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$767_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "746:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "746:86:5"
											}
										]
									},
									"id": 823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "643:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "672:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "665:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$767",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 802,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 801,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 767,
														"src": "665:6:5"
													},
													"referencedDeclaration": 767,
													"src": "665:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$767",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "695:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "687:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "715:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "707:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:71:5"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "736:0:5"
									},
									"scope": 1016,
									"src": "634:205:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 848,
										"nodeType": "Block",
										"src": "973:113:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 836,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "1003:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$767",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 839,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "1033:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$767",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 748,
																		"src": "1033:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1033:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 842,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "1062:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 843,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 830,
																	"src": "1068:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 844,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "1072:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 837,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1010:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1010:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1010:68:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$767",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 835,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "983:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$767_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "983:96:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "983:96:5"
											}
										]
									},
									"id": 849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "854:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "887:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "880:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$767",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 825,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 824,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 767,
														"src": "880:6:5"
													},
													"referencedDeclaration": 767,
													"src": "880:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$767",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "910:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "902:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "932:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "924:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "952:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "944:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "944:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "870:93:5"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "973:0:5"
									},
									"scope": 1016,
									"src": "845:241:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 892,
										"nodeType": "Block",
										"src": "1452:497:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 861,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 857,
																			"src": "1701:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1710:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1701:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 864,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1700:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 869,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1741:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1016",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1016",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 868,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1733:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 867,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1733:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 870,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1733:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 871,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 855,
																					"src": "1748:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 865,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 853,
																					"src": "1717:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$767",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 866,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 726,
																				"src": "1717:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1717:39:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1760:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1717:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 875,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1716:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1700:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1776:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 860,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1679:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1679:163:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 879,
												"nodeType": "ExpressionStatement",
												"src": "1679:163:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 881,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "1872:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$767",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 884,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 853,
																			"src": "1902:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$767",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 736,
																		"src": "1902:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1902:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 887,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "1926:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 888,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "1935:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 882,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1879:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1879:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1879:62:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$767",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 880,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "1852:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$767_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1852:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "ExpressionStatement",
												"src": "1852:90:5"
											}
										]
									},
									"documentation": {
										"id": 850,
										"nodeType": "StructuredDocumentation",
										"src": "1092:249:5",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1355:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1383:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "1376:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$767",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 852,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 851,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 767,
														"src": "1376:6:5"
													},
													"referencedDeclaration": 767,
													"src": "1376:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$767",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1406:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "1398:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1398:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1431:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "1423:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1423:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1366:76:5"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1452:0:5"
									},
									"scope": 1016,
									"src": "1346:603:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "2071:194:5",
										"statements": [
											{
												"assignments": [
													904
												],
												"declarations": [
													{
														"constant": false,
														"id": 904,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2089:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 928,
														"src": "2081:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 903,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2081:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 915,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 909,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2128:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$1016",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$1016",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2120:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 907,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2120:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2120:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 911,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 898,
																"src": "2135:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 905,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "2104:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$767",
																	"typeString": "contract IERC20"
																}
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 726,
															"src": "2104:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2104:39:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 913,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "2146:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2104:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2081:70:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "2181:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$767",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 920,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 896,
																			"src": "2211:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$767",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 736,
																		"src": "2211:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2211:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 923,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 898,
																	"src": "2235:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 924,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 904,
																	"src": "2244:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 918,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2188:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2188:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2188:69:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$767",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 916,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "2161:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$767_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:97:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "2161:97:5"
											}
										]
									},
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "1964:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2002:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "1995:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$767",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 895,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 894,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 767,
														"src": "1995:6:5"
													},
													"referencedDeclaration": 767,
													"src": "1995:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$767",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2025:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2017:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2017:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2050:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2042:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2042:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1985:76:5"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2071:0:5"
									},
									"scope": 1016,
									"src": "1955:310:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 976,
										"nodeType": "Block",
										"src": "2387:370:5",
										"statements": [
											{
												"id": 975,
												"nodeType": "UncheckedBlock",
												"src": "2397:354:5",
												"statements": [
													{
														"assignments": [
															940
														],
														"declarations": [
															{
																"constant": false,
																"id": 940,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2429:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 975,
																"src": "2421:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 939,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2421:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 949,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 945,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2468:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1016",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1016",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2460:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 943,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2460:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2460:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 947,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 934,
																	"src": "2475:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 941,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 932,
																	"src": "2444:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$767",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 726,
																"src": "2444:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2444:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2421:62:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 951,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "2505:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 952,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "2521:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2505:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2528:43:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 950,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2497:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2497:75:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 956,
														"nodeType": "ExpressionStatement",
														"src": "2497:75:5"
													},
													{
														"assignments": [
															958
														],
														"declarations": [
															{
																"constant": false,
																"id": 958,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2594:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 975,
																"src": "2586:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 957,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2586:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 962,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 959,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "2609:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 960,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "2624:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2609:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2586:43:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 964,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 932,
																	"src": "2663:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$767",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 967,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 932,
																					"src": "2693:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$767",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 968,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 736,
																				"src": "2693:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2693:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 970,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 934,
																			"src": "2717:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 971,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 958,
																			"src": "2726:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 965,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2670:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2670:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2670:69:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$767",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 963,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1015,
																"src": "2643:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$767_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2643:97:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 974,
														"nodeType": "ExpressionStatement",
														"src": "2643:97:5"
													}
												]
											}
										]
									},
									"id": 977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2280:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2318:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "2311:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$767",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 931,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 930,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 767,
														"src": "2311:6:5"
													},
													"referencedDeclaration": 767,
													"src": "2311:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$767",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2341:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "2333:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2333:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2366:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "2358:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:76:5"
									},
									"returnParameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2387:0:5"
									},
									"scope": 1016,
									"src": "2271:486:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "3210:636:5",
										"statements": [
											{
												"assignments": [
													987
												],
												"declarations": [
													{
														"constant": false,
														"id": 987,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3572:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1014,
														"src": "3559:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 986,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3559:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 996,
												"initialValue": {
													"arguments": [
														{
															"id": 993,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "3613:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3619:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 990,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "3593:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$767",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$767",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3585:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 988,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3585:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3585:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1107,
														"src": "3585:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3559:95:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 997,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "3668:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3668:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 999,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3688:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3668:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1013,
												"nodeType": "IfStatement",
												"src": "3664:176:5",
												"trueBody": {
													"id": 1012,
													"nodeType": "Block",
													"src": "3691:149:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1004,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 987,
																				"src": "3763:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1006,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3776:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1005,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3776:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1007,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3775:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1002,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3752:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3752:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3752:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3784:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1001,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3744:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3744:85:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1011,
															"nodeType": "ExpressionStatement",
															"src": "3744:85:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 978,
										"nodeType": "StructuredDocumentation",
										"src": "2763:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3149:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3176:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "3169:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$767",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 980,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 979,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 767,
														"src": "3169:6:5"
													},
													"referencedDeclaration": 767,
													"src": "3169:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$767",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3196:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "3183:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3183:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3168:33:5"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3210:0:5"
									},
									"scope": 1016,
									"src": "3140:706:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1017,
							"src": "578:3270:5",
							"usedErrors": []
						}
					],
					"src": "33:3816:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1312
						]
					},
					"id": 1313,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1018,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1019,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1312,
							"linearizedBaseContracts": [
								1312
							],
							"name": "Address",
							"nameLocation": "134:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "784:311:6",
										"statements": [
											{
												"assignments": [
													1028
												],
												"declarations": [
													{
														"constant": false,
														"id": 1028,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "989:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1035,
														"src": "981:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1027,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1029,
												"nodeType": "VariableDeclarationStatement",
												"src": "981:12:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1012:52:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1026:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1046:7:6"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1034:11:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1034:20:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1026:4:6"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1022,
														"isOffset": false,
														"isSlot": false,
														"src": "1046:7:6",
														"valueSize": 1
													},
													{
														"declaration": 1028,
														"isOffset": false,
														"isSlot": false,
														"src": "1026:4:6",
														"valueSize": 1
													}
												],
												"id": 1030,
												"nodeType": "InlineAssembly",
												"src": "1003:61:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1031,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "1080:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1032,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1087:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1080:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1026,
												"id": 1034,
												"nodeType": "Return",
												"src": "1073:15:6"
											}
										]
									},
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "148:565:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "727:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "746:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "738:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:17:6"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "778:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1024,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:6"
									},
									"scope": 1312,
									"src": "718:377:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "2083:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1047,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2109:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1312",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1312",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2101:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1045,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2101:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2101:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2101:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1050,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1041,
																"src": "2126:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2101:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2134:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1044,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2093:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2093:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1054,
												"nodeType": "ExpressionStatement",
												"src": "2093:73:6"
											},
											{
												"assignments": [
													1056,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1056,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2183:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1069,
														"src": "2178:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1055,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2178:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1063,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2226:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1057,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1039,
																"src": "2196:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2196:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1059,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1041,
																"src": "2218:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2196:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2196:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1065,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "2247:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2256:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1064,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2239:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2239:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "2239:78:6"
											}
										]
									},
									"documentation": {
										"id": 1037,
										"nodeType": "StructuredDocumentation",
										"src": "1101:906:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2021:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2047:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "2031:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2066:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "2058:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2058:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:43:6"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2083:0:6"
									},
									"scope": 1312,
									"src": "2012:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "3155:84:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1081,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "3185:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1082,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "3193:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3199:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1080,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1087,
															1107
														],
														"referencedDeclaration": 1107,
														"src": "3172:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3172:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1079,
												"id": 1085,
												"nodeType": "Return",
												"src": "3165:67:6"
											}
										]
									},
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "2330:731:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3075:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3096:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "3088:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3117:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "3104:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1074,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3104:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3087:35:6"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "3141:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1077,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3141:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:14:6"
									},
									"scope": 1312,
									"src": "3066:173:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "3608:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1100,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "3647:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1101,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "3655:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3661:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1103,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "3664:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1099,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1127,
															1177
														],
														"referencedDeclaration": 1177,
														"src": "3625:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3625:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1098,
												"id": 1105,
												"nodeType": "Return",
												"src": "3618:59:6"
											}
										]
									},
									"documentation": {
										"id": 1088,
										"nodeType": "StructuredDocumentation",
										"src": "3245:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3470:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3500:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "3492:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3529:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "3516:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1091,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3516:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3557:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "3543:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1093,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3543:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:93:6"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "3594:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1096,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3594:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3593:14:6"
									},
									"scope": 1312,
									"src": "3461:223:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1126,
										"nodeType": "Block",
										"src": "4189:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1120,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "4228:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1121,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "4236:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1122,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1114,
															"src": "4242:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4249:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1119,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1127,
															1177
														],
														"referencedDeclaration": 1177,
														"src": "4206:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4206:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1118,
												"id": 1125,
												"nodeType": "Return",
												"src": "4199:94:6"
											}
										]
									},
									"documentation": {
										"id": 1108,
										"nodeType": "StructuredDocumentation",
										"src": "3690:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4055:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4094:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "4086:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4123:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "4110:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1111,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4110:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4145:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "4137:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4137:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4076:80:6"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "4175:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1116,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4175:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4174:14:6"
									},
									"scope": 1312,
									"src": "4046:254:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "4727:321:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1144,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4753:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1312",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1312",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4745:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1142,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4745:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4745:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4745:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1147,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "4770:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4745:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4777:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1141,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4737:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4737:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1151,
												"nodeType": "ExpressionStatement",
												"src": "4737:81:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1154,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1130,
																	"src": "4847:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1153,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1036,
																"src": "4836:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4836:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4856:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1152,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4828:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4828:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1158,
												"nodeType": "ExpressionStatement",
												"src": "4828:60:6"
											},
											{
												"assignments": [
													1160,
													1162
												],
												"declarations": [
													{
														"constant": false,
														"id": 1160,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4905:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1176,
														"src": "4900:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1159,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4900:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1162,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4927:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1176,
														"src": "4914:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1161,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4914:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1169,
												"initialValue": {
													"arguments": [
														{
															"id": 1167,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "4967:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1163,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1130,
																"src": "4941:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4941:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1165,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "4960:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4941:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4941:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4899:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1171,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "5007:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1172,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "5016:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1173,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "5028:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1170,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "4989:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4989:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1140,
												"id": 1175,
												"nodeType": "Return",
												"src": "4982:59:6"
											}
										]
									},
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "4306:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4557:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4596:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "4588:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4588:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4625:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "4612:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1131,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4612:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4647:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "4639:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4676:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "4662:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1135,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4662:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:116:6"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "4713:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1138,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4713:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4712:14:6"
									},
									"scope": 1312,
									"src": "4548:500:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "5325:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1188,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "5361:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1189,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "5369:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5375:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1187,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1194,
															1229
														],
														"referencedDeclaration": 1229,
														"src": "5342:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5342:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1186,
												"id": 1192,
												"nodeType": "Return",
												"src": "5335:80:6"
											}
										]
									},
									"documentation": {
										"id": 1178,
										"nodeType": "StructuredDocumentation",
										"src": "5054:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5234:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5261:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "5253:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5253:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5282:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "5269:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5269:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5252:35:6"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "5311:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5311:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5310:14:6"
									},
									"scope": 1312,
									"src": "5225:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "5764:229:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1208,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1197,
																	"src": "5793:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1207,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1036,
																"src": "5782:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5782:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5802:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5774:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5774:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1212,
												"nodeType": "ExpressionStatement",
												"src": "5774:67:6"
											},
											{
												"assignments": [
													1214,
													1216
												],
												"declarations": [
													{
														"constant": false,
														"id": 1214,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5858:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1228,
														"src": "5853:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1213,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5853:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1216,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5880:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1228,
														"src": "5867:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1215,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5867:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1221,
												"initialValue": {
													"arguments": [
														{
															"id": 1219,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "5912:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1217,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "5894:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5894:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5894:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5852:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1223,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "5952:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1224,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "5961:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1225,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "5973:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1222,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "5934:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5934:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1205,
												"id": 1227,
												"nodeType": "Return",
												"src": "5927:59:6"
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "5428:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5615:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5651:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "5643:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5643:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5680:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "5667:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1198,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5667:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5708:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "5694:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5694:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5633:93:6"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "5750:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1203,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5750:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5749:14:6"
									},
									"scope": 1312,
									"src": "5606:387:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "6269:101:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1240,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "6307:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1241,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "6315:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6321:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1239,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1246,
															1281
														],
														"referencedDeclaration": 1281,
														"src": "6286:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6286:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1238,
												"id": 1244,
												"nodeType": "Return",
												"src": "6279:84:6"
											}
										]
									},
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "5999:168:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6181:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6210:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "6202:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6202:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6231:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "6218:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6218:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6201:35:6"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "6255:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6255:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6254:14:6"
									},
									"scope": 1312,
									"src": "6172:198:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "6711:233:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1260,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1249,
																	"src": "6740:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1259,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1036,
																"src": "6729:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6729:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6749:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6721:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6721:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "6721:69:6"
											},
											{
												"assignments": [
													1266,
													1268
												],
												"declarations": [
													{
														"constant": false,
														"id": 1266,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6807:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1280,
														"src": "6802:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1265,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6802:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1268,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6829:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1280,
														"src": "6816:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1267,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6816:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1273,
												"initialValue": {
													"arguments": [
														{
															"id": 1271,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "6863:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1269,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "6843:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6843:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6843:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6801:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1275,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "6903:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1276,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "6912:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1277,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "6924:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1274,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "6885:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6885:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1257,
												"id": 1279,
												"nodeType": "Return",
												"src": "6878:59:6"
											}
										]
									},
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "6376:175:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6565:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6603:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "6595:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6595:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6632:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "6619:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1250,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6619:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6660:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "6646:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1252,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6646:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6585:93:6"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "6697:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6697:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6696:14:6"
									},
									"scope": 1312,
									"src": "6556:388:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "7110:532:6",
										"statements": [
											{
												"condition": {
													"id": 1292,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1283,
													"src": "7124:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1308,
													"nodeType": "Block",
													"src": "7181:455:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1296,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "7265:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7265:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7285:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7265:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1306,
																"nodeType": "Block",
																"src": "7573:53:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1303,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1287,
																					"src": "7598:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1302,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7591:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7591:20:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1305,
																		"nodeType": "ExpressionStatement",
																		"src": "7591:20:6"
																	}
																]
															},
															"id": 1307,
															"nodeType": "IfStatement",
															"src": "7261:365:6",
															"trueBody": {
																"id": 1301,
																"nodeType": "Block",
																"src": "7288:279:6",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7408:145:6",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7430:40:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7459:10:6"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7453:5:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7453:17:6"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7434:15:6",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7502:2:6",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7506:10:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7498:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7498:19:6"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7519:15:6"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7491:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7491:44:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7491:44:6"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1285,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7459:10:6",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1285,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7506:10:6",
																				"valueSize": 1
																			}
																		],
																		"id": 1300,
																		"nodeType": "InlineAssembly",
																		"src": "7399:154:6"
																	}
																]
															}
														}
													]
												},
												"id": 1309,
												"nodeType": "IfStatement",
												"src": "7120:516:6",
												"trueBody": {
													"id": 1295,
													"nodeType": "Block",
													"src": "7133:42:6",
													"statements": [
														{
															"expression": {
																"id": 1293,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "7154:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1291,
															"id": 1294,
															"nodeType": "Return",
															"src": "7147:17:6"
														}
													]
												}
											}
										]
									},
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nameLocation": "6959:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6991:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "6986:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1282,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6986:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7021:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "7008:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1284,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7008:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7055:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "7041:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1286,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7041:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6976:97:6"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "7096:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7096:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7095:14:6"
									},
									"scope": 1312,
									"src": "6950:692:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1313,
							"src": "126:7518:6",
							"usedErrors": []
						}
					],
					"src": "33:7612:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1333
						]
					},
					"id": 1334,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1314,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1333,
							"linearizedBaseContracts": [
								1333
							],
							"name": "Context",
							"nameLocation": "572:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1322,
										"nodeType": "Block",
										"src": "648:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1319,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "665:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "665:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1318,
												"id": 1321,
												"nodeType": "Return",
												"src": "658:17:7"
											}
										]
									},
									"id": 1323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "595:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:7"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "639:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:9:7"
									},
									"scope": 1333,
									"src": "586:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1331,
										"nodeType": "Block",
										"src": "755:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1328,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "772:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "772:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1327,
												"id": 1330,
												"nodeType": "Return",
												"src": "765:15:7"
											}
										]
									},
									"id": 1332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "697:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:2:7"
									},
									"returnParameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "739:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1325,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "739:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:16:7"
									},
									"scope": 1333,
									"src": "688:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1334,
							"src": "554:235:7",
							"usedErrors": []
						}
					],
					"src": "33:757:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1645
						]
					},
					"id": 1646,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1335,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1336,
								"nodeType": "StructuredDocumentation",
								"src": "211:186:8",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1645,
							"linearizedBaseContracts": [
								1645
							],
							"name": "SafeMath",
							"nameLocation": "406:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1367,
										"nodeType": "Block",
										"src": "633:140:8",
										"statements": [
											{
												"id": 1366,
												"nodeType": "UncheckedBlock",
												"src": "643:124:8",
												"statements": [
													{
														"assignments": [
															1349
														],
														"declarations": [
															{
																"constant": false,
																"id": 1349,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "675:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1366,
																"src": "667:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1348,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "667:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1353,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1350,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1339,
																"src": "679:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1351,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1341,
																"src": "683:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "679:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "667:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1354,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1349,
																"src": "702:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1355,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1339,
																"src": "706:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "702:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1361,
														"nodeType": "IfStatement",
														"src": "698:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "717:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "724:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1359,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "716:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1347,
															"id": 1360,
															"nodeType": "Return",
															"src": "709:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "748:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1363,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1349,
																	"src": "754:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1364,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "747:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1347,
														"id": 1365,
														"nodeType": "Return",
														"src": "740:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1337,
										"nodeType": "StructuredDocumentation",
										"src": "421:131:8",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "566:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "581:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "573:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "592:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "584:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:22:8"
									},
									"returnParameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "618:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "618:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "624:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:15:8"
									},
									"scope": 1645,
									"src": "557:216:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1395,
										"nodeType": "Block",
										"src": "995:113:8",
										"statements": [
											{
												"id": 1394,
												"nodeType": "UncheckedBlock",
												"src": "1005:97:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1380,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1373,
																"src": "1033:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1381,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "1037:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1033:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1387,
														"nodeType": "IfStatement",
														"src": "1029:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1048:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1055:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1385,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1047:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1379,
															"id": 1386,
															"nodeType": "Return",
															"src": "1040:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1079:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1389,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1371,
																		"src": "1085:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1390,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1373,
																		"src": "1089:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1085:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1392,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1078:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1379,
														"id": 1393,
														"nodeType": "Return",
														"src": "1071:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1369,
										"nodeType": "StructuredDocumentation",
										"src": "779:135:8",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "928:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "943:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "935:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "954:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "946:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "934:22:8"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "980:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1375,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "980:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "986:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:15:8"
									},
									"scope": 1645,
									"src": "919:189:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1437,
										"nodeType": "Block",
										"src": "1332:417:8",
										"statements": [
											{
												"id": 1436,
												"nodeType": "UncheckedBlock",
												"src": "1342:401:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1408,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1399,
																"src": "1600:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1605:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1600:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1415,
														"nodeType": "IfStatement",
														"src": "1596:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1616:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1622:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1413,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1615:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1407,
															"id": 1414,
															"nodeType": "Return",
															"src": "1608:16:8"
														}
													},
													{
														"assignments": [
															1417
														],
														"declarations": [
															{
																"constant": false,
																"id": 1417,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1646:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1436,
																"src": "1638:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1416,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1638:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1421,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1418,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1399,
																"src": "1650:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1419,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1401,
																"src": "1654:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1650:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1638:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1422,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1417,
																	"src": "1673:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1423,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1399,
																	"src": "1677:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1673:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1425,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1401,
																"src": "1682:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1431,
														"nodeType": "IfStatement",
														"src": "1669:33:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1693:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1700:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1429,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1692:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1407,
															"id": 1430,
															"nodeType": "Return",
															"src": "1685:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1724:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1433,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1417,
																	"src": "1730:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1434,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1723:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1407,
														"id": 1435,
														"nodeType": "Return",
														"src": "1716:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1397,
										"nodeType": "StructuredDocumentation",
										"src": "1114:137:8",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1265:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1280:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "1272:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1291:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "1283:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1271:22:8"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "1317:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1403,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1317:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "1323:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:15:8"
									},
									"scope": 1645,
									"src": "1256:493:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "1974:114:8",
										"statements": [
											{
												"id": 1464,
												"nodeType": "UncheckedBlock",
												"src": "1984:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1450,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1443,
																"src": "2012:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2012:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1457,
														"nodeType": "IfStatement",
														"src": "2008:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2028:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2035:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1455,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2027:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1449,
															"id": 1456,
															"nodeType": "Return",
															"src": "2020:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2059:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1459,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1441,
																		"src": "2065:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1460,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1443,
																		"src": "2069:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2065:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1462,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2058:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1449,
														"id": 1463,
														"nodeType": "Return",
														"src": "2051:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1439,
										"nodeType": "StructuredDocumentation",
										"src": "1755:138:8",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1907:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1922:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "1914:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1933:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "1925:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:22:8"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "1959:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1445,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1959:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "1965:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1965:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:8"
									},
									"scope": 1645,
									"src": "1898:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1493,
										"nodeType": "Block",
										"src": "2323:114:8",
										"statements": [
											{
												"id": 1492,
												"nodeType": "UncheckedBlock",
												"src": "2333:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1478,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1471,
																"src": "2361:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2366:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2361:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1485,
														"nodeType": "IfStatement",
														"src": "2357:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2377:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2384:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1483,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2376:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1477,
															"id": 1484,
															"nodeType": "Return",
															"src": "2369:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2408:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1487,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1469,
																		"src": "2414:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1488,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1471,
																		"src": "2418:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2414:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1490,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2407:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1477,
														"id": 1491,
														"nodeType": "Return",
														"src": "2400:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1467,
										"nodeType": "StructuredDocumentation",
										"src": "2094:148:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2256:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2271:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "2263:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2282:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "2274:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:22:8"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "2308:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1473,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2308:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "2314:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2307:15:8"
									},
									"scope": 1645,
									"src": "2247:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "2739:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1504,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "2756:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1505,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1499,
														"src": "2760:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2756:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1503,
												"id": 1507,
												"nodeType": "Return",
												"src": "2749:12:8"
											}
										]
									},
									"documentation": {
										"id": 1495,
										"nodeType": "StructuredDocumentation",
										"src": "2443:224:8",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2681:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2693:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "2685:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2704:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "2696:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:22:8"
									},
									"returnParameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "2730:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:9:8"
									},
									"scope": 1645,
									"src": "2672:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "3106:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1519,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "3123:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1520,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1514,
														"src": "3127:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3123:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1518,
												"id": 1522,
												"nodeType": "Return",
												"src": "3116:12:8"
											}
										]
									},
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "2774:260:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3048:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3060:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "3052:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3071:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "3063:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3051:22:8"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "3097:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3096:9:8"
									},
									"scope": 1645,
									"src": "3039:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1538,
										"nodeType": "Block",
										"src": "3449:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1534,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1527,
														"src": "3466:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1535,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1529,
														"src": "3470:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3466:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1533,
												"id": 1537,
												"nodeType": "Return",
												"src": "3459:12:8"
											}
										]
									},
									"documentation": {
										"id": 1525,
										"nodeType": "StructuredDocumentation",
										"src": "3141:236:8",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3391:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3403:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "3395:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3414:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "3406:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3394:22:8"
									},
									"returnParameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "3440:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3440:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3439:9:8"
									},
									"scope": 1645,
									"src": "3382:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "3834:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1549,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "3851:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1550,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1544,
														"src": "3855:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3851:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1548,
												"id": 1552,
												"nodeType": "Return",
												"src": "3844:12:8"
											}
										]
									},
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "3484:278:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3776:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3788:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "3780:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3799:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "3791:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:22:8"
									},
									"returnParameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "3825:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3825:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3824:9:8"
									},
									"scope": 1645,
									"src": "3767:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1568,
										"nodeType": "Block",
										"src": "4383:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1564,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1557,
														"src": "4400:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1565,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1559,
														"src": "4404:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4400:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1563,
												"id": 1567,
												"nodeType": "Return",
												"src": "4393:12:8"
											}
										]
									},
									"documentation": {
										"id": 1555,
										"nodeType": "StructuredDocumentation",
										"src": "3869:442:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4325:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4337:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "4329:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4348:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "4340:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4340:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4328:22:8"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "4374:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:9:8"
									},
									"scope": 1645,
									"src": "4316:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1593,
										"nodeType": "Block",
										"src": "5001:106:8",
										"statements": [
											{
												"id": 1592,
												"nodeType": "UncheckedBlock",
												"src": "5011:90:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1582,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1574,
																		"src": "5043:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1583,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1572,
																		"src": "5048:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5043:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1585,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1576,
																	"src": "5051:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1581,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5035:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5035:29:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1587,
														"nodeType": "ExpressionStatement",
														"src": "5035:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1588,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1572,
																"src": "5085:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1589,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1574,
																"src": "5089:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5085:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1580,
														"id": 1591,
														"nodeType": "Return",
														"src": "5078:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1570,
										"nodeType": "StructuredDocumentation",
										"src": "4418:453:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4885:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4906:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "4898:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4898:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4925:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "4917:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4917:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4950:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "4936:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1575,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4936:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4888:80:8"
									},
									"returnParameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "4992:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4992:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4991:9:8"
									},
									"scope": 1645,
									"src": "4876:231:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1618,
										"nodeType": "Block",
										"src": "5716:105:8",
										"statements": [
											{
												"id": 1617,
												"nodeType": "UncheckedBlock",
												"src": "5726:89:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1607,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1599,
																		"src": "5758:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5762:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5758:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1610,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "5765:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1606,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5750:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5750:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1612,
														"nodeType": "ExpressionStatement",
														"src": "5750:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1613,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1597,
																"src": "5799:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1614,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1599,
																"src": "5803:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5799:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1605,
														"id": 1616,
														"nodeType": "Return",
														"src": "5792:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1595,
										"nodeType": "StructuredDocumentation",
										"src": "5113:473:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5600:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5621:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "5613:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5613:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5640:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "5632:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5632:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5665:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "5651:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1600,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5651:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5603:80:8"
									},
									"returnParameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "5707:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5707:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5706:9:8"
									},
									"scope": 1645,
									"src": "5591:230:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1643,
										"nodeType": "Block",
										"src": "6592:105:8",
										"statements": [
											{
												"id": 1642,
												"nodeType": "UncheckedBlock",
												"src": "6602:89:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1632,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1624,
																		"src": "6634:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6638:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6634:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1635,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1626,
																	"src": "6641:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1631,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6626:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6626:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1637,
														"nodeType": "ExpressionStatement",
														"src": "6626:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1638,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1622,
																"src": "6675:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1639,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1624,
																"src": "6679:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6675:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1630,
														"id": 1641,
														"nodeType": "Return",
														"src": "6668:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1620,
										"nodeType": "StructuredDocumentation",
										"src": "5827:635:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6476:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6497:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "6489:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6489:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6516:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "6508:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6508:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6541:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "6527:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1625,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6527:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6479:80:8"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "6583:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6583:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6582:9:8"
									},
									"scope": 1645,
									"src": "6467:230:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1646,
							"src": "398:6301:8",
							"usedErrors": []
						}
					],
					"src": "33:6667:8"
				},
				"id": 8
			},
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
					"exportedSymbols": {
						"IUniswapV2Pair": [
							1887
						]
					},
					"id": 1888,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1647,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1887,
							"linearizedBaseContracts": [
								1887
							],
							"name": "IUniswapV2Pair",
							"nameLocation": "36:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1655,
									"name": "Approval",
									"nameLocation": "63:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "88:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "72:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "72:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "111:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "95:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "95:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "125:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "120:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "120:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71:60:9"
									},
									"src": "57:75:9"
								},
								{
									"anonymous": false,
									"id": 1663,
									"name": "Transfer",
									"nameLocation": "143:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "168:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "152:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "152:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "190:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "174:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "174:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "199:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "194:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1660,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "194:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "151:54:9"
									},
									"src": "137:69:9"
								},
								{
									"functionSelector": "06fdde03",
									"id": 1668,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "221:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "225:2:9"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "251:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1665,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "251:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "250:15:9"
									},
									"scope": 1887,
									"src": "212:54:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 1673,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "280:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "286:2:9"
									},
									"returnParameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "312:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1670,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "312:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:15:9"
									},
									"scope": 1887,
									"src": "271:56:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 1678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "341:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "349:2:9"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "375:5:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1675,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "375:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "374:7:9"
									},
									"scope": 1887,
									"src": "332:50:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 1683,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "396:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "407:2:9"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "433:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1680,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "433:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:6:9"
									},
									"scope": 1887,
									"src": "387:52:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1690,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "453:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "471:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "463:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "463:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "462:15:9"
									},
									"returnParameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "501:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1687,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "501:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:6:9"
									},
									"scope": 1887,
									"src": "444:63:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1699,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "521:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "539:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "531:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "554:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "546:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:32:9"
									},
									"returnParameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "586:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "586:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "585:6:9"
									},
									"scope": 1887,
									"src": "512:80:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1708,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "607:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "623:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "615:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "637:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "632:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1702,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "632:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "614:29:9"
									},
									"returnParameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "662:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1705,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "662:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "661:6:9"
									},
									"scope": 1887,
									"src": "598:70:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1717,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "682:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "699:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "691:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "708:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "703:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1711,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "703:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "690:24:9"
									},
									"returnParameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "733:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1714,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "733:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:6:9"
									},
									"scope": 1887,
									"src": "673:66:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "753:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "774:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "766:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "788:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "780:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "797:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "792:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "792:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "765:38:9"
									},
									"returnParameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "822:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "822:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:6:9"
									},
									"scope": 1887,
									"src": "744:84:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3644e515",
									"id": 1733,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "843:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "859:2:9"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "885:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1730,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "884:9:9"
									},
									"scope": 1887,
									"src": "834:60:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "30adf81f",
									"id": 1738,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "908:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:9"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "949:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1735,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "949:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "948:9:9"
									},
									"scope": 1887,
									"src": "899:59:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ecebe00",
									"id": 1745,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "972:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "987:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "979:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "978:15:9"
									},
									"returnParameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "1017:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1017:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1016:6:9"
									},
									"scope": 1887,
									"src": "963:60:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d505accf",
									"id": 1762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1038:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1053:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "1045:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1045:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1068:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "1060:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1082:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "1077:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1750,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1077:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1094:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "1089:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1752,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1089:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1110:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "1104:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1754,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1104:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1121:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "1113:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1756,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1132:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "1124:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1758,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1044:90:9"
									},
									"returnParameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1143:0:9"
									},
									"scope": 1887,
									"src": "1029:115:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 1770,
									"name": "Mint",
									"nameLocation": "1156:4:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1177:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "1161:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1190:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "1185:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1185:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1768,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1204:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "1199:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1767,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1199:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1160:52:9"
									},
									"src": "1150:63:9"
								},
								{
									"anonymous": false,
									"id": 1780,
									"name": "Burn",
									"nameLocation": "1224:4:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1245:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "1229:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1774,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1258:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "1253:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1773,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1253:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1272:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "1267:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1775,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1297:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "1281:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:72:9"
									},
									"src": "1218:83:9"
								},
								{
									"anonymous": false,
									"id": 1794,
									"name": "Swap",
									"nameLocation": "1312:4:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1342:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "1326:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1326:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0In",
												"nameLocation": "1363:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "1358:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1358:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1786,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1In",
												"nameLocation": "1387:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "1382:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1785,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1382:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "1411:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "1406:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1406:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "1436:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "1431:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1789,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1431:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1472:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "1456:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1456:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:164:9"
									},
									"src": "1306:175:9"
								},
								{
									"anonymous": false,
									"id": 1800,
									"name": "Sync",
									"nameLocation": "1492:4:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "1505:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "1497:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1795,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1497:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "1523:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "1515:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1797,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1515:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1496:36:9"
									},
									"src": "1486:47:9"
								},
								{
									"functionSelector": "ba9a7a56",
									"id": 1805,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nameLocation": "1548:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1565:2:9"
									},
									"returnParameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "1591:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1591:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1590:6:9"
									},
									"scope": 1887,
									"src": "1539:58:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c45a0155",
									"id": 1810,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "1611:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1618:2:9"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "1644:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1644:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:9:9"
									},
									"scope": 1887,
									"src": "1602:51:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 1815,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "1667:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1673:2:9"
									},
									"returnParameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "1699:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:9:9"
									},
									"scope": 1887,
									"src": "1658:50:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 1820,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "1722:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1728:2:9"
									},
									"returnParameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "1754:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:9:9"
									},
									"scope": 1887,
									"src": "1713:50:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 1829,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "1777:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1788:2:9"
									},
									"returnParameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "1822:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "1814:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1822,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1814:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "1840:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "1832:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1824,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nameLocation": "1857:18:9",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "1850:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1826,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1850:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:63:9"
									},
									"scope": 1887,
									"src": "1768:109:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5909c0d5",
									"id": 1834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nameLocation": "1891:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1911:2:9"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "1937:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1937:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1936:6:9"
									},
									"scope": 1887,
									"src": "1882:61:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a3d5493",
									"id": 1839,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nameLocation": "1957:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:9"
									},
									"returnParameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "2003:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1836,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2003:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2002:6:9"
									},
									"scope": 1887,
									"src": "1948:61:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7464fc3d",
									"id": 1844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nameLocation": "2023:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:9"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "2054:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2054:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2053:6:9"
									},
									"scope": 1887,
									"src": "2014:46:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a627842",
									"id": 1851,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "2075:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2088:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "2080:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2080:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:12:9"
									},
									"returnParameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2115:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "2110:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2110:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2109:16:9"
									},
									"scope": 1887,
									"src": "2066:60:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "89afcb44",
									"id": 1860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "2140:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2153:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "2145:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2145:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2144:12:9"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2180:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "2175:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1855,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2175:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2194:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "2189:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1857,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2189:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2174:28:9"
									},
									"scope": 1887,
									"src": "2131:72:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "022c0d9f",
									"id": 1871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "2217:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "2227:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "2222:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2222:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "2244:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "2239:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1863,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2239:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2264:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "2256:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2283:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "2268:19:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1867,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2268:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2221:67:9"
									},
									"returnParameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2297:0:9"
									},
									"scope": 1887,
									"src": "2208:90:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bc25cf77",
									"id": 1876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nameLocation": "2312:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2325:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "2317:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2317:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2316:12:9"
									},
									"returnParameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2337:0:9"
									},
									"scope": 1887,
									"src": "2303:35:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fff6cae9",
									"id": 1879,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nameLocation": "2352:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2356:2:9"
									},
									"returnParameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2367:0:9"
									},
									"scope": 1887,
									"src": "2343:25:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "485cc955",
									"id": 1886,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "2383:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "2394:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2394:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "2403:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2403:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2393:18:9"
									},
									"returnParameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2420:0:9"
									},
									"scope": 1887,
									"src": "2374:47:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1888,
							"src": "26:2397:9",
							"usedErrors": []
						}
					],
					"src": "0:2424:9"
				},
				"id": 9
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							2195
						]
					},
					"id": 2196,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1889,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2195,
							"linearizedBaseContracts": [
								2195
							],
							"name": "IUniswapV2Router01",
							"nameLocation": "36:18:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1894,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "70:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "77:2:10"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "103:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "103:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "102:9:10"
									},
									"scope": 2195,
									"src": "61:51:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "126:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "130:2:10"
									},
									"returnParameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "156:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "156:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "155:9:10"
									},
									"scope": 2195,
									"src": "117:48:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 1924,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "180:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "210:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "202:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "234:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "226:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "255:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "250:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1904,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "250:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "284:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "279:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1906,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "279:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "313:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "308:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1908,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "338:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "333:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1910,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "333:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "366:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "358:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "383:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "378:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1914,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "378:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:205:10"
									},
									"returnParameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "421:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "416:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "416:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "435:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "430:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1919,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "430:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "449:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "444:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1921,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "444:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:44:10"
									},
									"scope": 2195,
									"src": "171:289:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 1945,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "474:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "507:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "499:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "527:18:10",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "522:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1927,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "522:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "560:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "555:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1929,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "589:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "584:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1931,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "584:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "619:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "611:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "636:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "631:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1935,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "631:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:161:10"
									},
									"returnParameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "682:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "677:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1938,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "677:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "700:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "695:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "695:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "716:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "711:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1942,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "711:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:50:10"
									},
									"scope": 2195,
									"src": "465:262:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 1966,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "741:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "774:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "766:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "798:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "790:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "819:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "814:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "814:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "843:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "838:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1952,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "868:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "863:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1954,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "863:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "896:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "888:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "913:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "908:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "908:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:171:10"
									},
									"returnParameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "951:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "946:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1961,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "946:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "965:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "960:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1963,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:28:10"
									},
									"scope": 2195,
									"src": "732:242:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 1985,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nameLocation": "988:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1024:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "1016:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1044:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "1039:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1969,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1068:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "1063:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1971,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1097:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "1092:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1973,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1092:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1127:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "1119:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1144:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "1139:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1977,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1139:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1006:152:10"
									},
									"returnParameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1981,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1182:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "1177:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1980,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1177:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1200:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "1195:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1982,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1195:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:34:10"
									},
									"scope": 2195,
									"src": "979:232:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 2014,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nameLocation": "1225:25:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1268:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "1260:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1292:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "1284:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1313:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "1308:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1990,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1308:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1337:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "1332:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1992,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1332:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1362:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "1357:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1994,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1357:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1390:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "1382:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1407:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "1402:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1998,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1402:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1430:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "1425:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2000,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1425:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1448:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "1442:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2002,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1442:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1459:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "1451:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2004,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1470:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "1462:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2006,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:227:10"
									},
									"returnParameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1501:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "1496:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1496:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1515:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "1510:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2011,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1510:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:28:10"
									},
									"scope": 2195,
									"src": "1216:308:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 2041,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nameLocation": "1538:28:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1584:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "1576:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1604:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "1599:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2017,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1599:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1628:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "1623:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2019,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1623:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1657:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "1652:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2021,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1652:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1687:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "1679:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1679:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1704:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "1699:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2025,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1699:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1727:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "1722:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2027,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1722:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1745:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "1739:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2029,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1739:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1756:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "1748:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2031,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1767:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "1759:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2033,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:208:10"
									},
									"returnParameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1798:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "1793:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2036,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1793:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1816:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "1811:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2038,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1811:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1792:34:10"
									},
									"scope": 2195,
									"src": "1529:298:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 2058,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "1841:24:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1880:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "1875:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2042,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1875:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1903:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "1898:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1898:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1944:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "1925:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2046,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1925:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2047,
													"nodeType": "ArrayTypeName",
													"src": "1925:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1966:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "1958:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1983:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "1978:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1978:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:132:10"
									},
									"returnParameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2030:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "2016:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2054,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2016:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2055,
													"nodeType": "ArrayTypeName",
													"src": "2016:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2015:23:10"
									},
									"scope": 2195,
									"src": "1832:207:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 2075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "2053:24:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2092:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "2087:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2059,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2087:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2116:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "2111:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2061,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2111:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2156:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "2137:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2063,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2137:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2064,
													"nodeType": "ArrayTypeName",
													"src": "2137:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2178:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "2170:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2195:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "2190:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2068,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2190:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2077:132:10"
									},
									"returnParameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2242:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "2228:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2071,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2228:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2072,
													"nodeType": "ArrayTypeName",
													"src": "2228:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:23:10"
									},
									"scope": 2195,
									"src": "2044:207:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 2090,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "2265:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2292:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "2287:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2076,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2287:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2325:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "2306:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2078,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2306:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2079,
													"nodeType": "ArrayTypeName",
													"src": "2306:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2339:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "2331:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2348:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "2343:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2083,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2343:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2286:71:10"
									},
									"returnParameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2422:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "2408:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2086,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2408:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2087,
													"nodeType": "ArrayTypeName",
													"src": "2408:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:23:10"
									},
									"scope": 2195,
									"src": "2256:175:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 2107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nameLocation": "2445:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2472:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "2467:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2091,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2467:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2488:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "2483:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2093,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2483:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2520:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "2501:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2095,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2501:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2096,
													"nodeType": "ArrayTypeName",
													"src": "2501:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2534:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "2526:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2526:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2543:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "2538:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2100,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2538:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:86:10"
									},
									"returnParameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2601:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "2587:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2103,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2587:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2104,
													"nodeType": "ArrayTypeName",
													"src": "2587:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:23:10"
									},
									"scope": 2195,
									"src": "2436:174:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 2124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "2624:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2109,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2651:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "2646:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2108,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2646:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2666:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "2661:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2110,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2661:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2699:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "2680:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2112,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2680:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2113,
													"nodeType": "ArrayTypeName",
													"src": "2680:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2713:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "2705:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2722:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "2717:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2117,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2717:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:86:10"
									},
									"returnParameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2780:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "2766:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2120,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2766:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2121,
													"nodeType": "ArrayTypeName",
													"src": "2766:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2765:23:10"
									},
									"scope": 2195,
									"src": "2615:174:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 2139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nameLocation": "2803:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2830:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "2825:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2125,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2825:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2860:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "2841:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2127,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2841:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2128,
													"nodeType": "ArrayTypeName",
													"src": "2841:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2131,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2874:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "2866:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2866:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2883:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "2878:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2132,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2878:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2824:68:10"
									},
									"returnParameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2957:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "2943:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2135,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2943:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2136,
													"nodeType": "ArrayTypeName",
													"src": "2943:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2942:23:10"
									},
									"scope": 2195,
									"src": "2794:172:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 2150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "2981:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "2992:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "2987:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2140,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2987:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "3006:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "3001:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2142,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3001:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "3021:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "3016:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2144,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3016:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2986:44:10"
									},
									"returnParameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3059:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "3054:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2147,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3054:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3053:14:10"
									},
									"scope": 2195,
									"src": "2972:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 2161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "3082:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3100:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "3095:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2151,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3095:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3115:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "3110:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2153,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3110:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3131:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "3126:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2155,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3126:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3094:48:10"
									},
									"returnParameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3171:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "3166:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2158,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3166:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:16:10"
									},
									"scope": 2195,
									"src": "3073:109:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 2172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "3196:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3213:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "3208:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2162,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3208:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2165,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3229:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "3224:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2164,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3224:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3245:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "3240:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2166,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3240:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3207:49:10"
									},
									"returnParameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3285:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "3280:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2169,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3280:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3279:15:10"
									},
									"scope": 2195,
									"src": "3187:108:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 2183,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "3309:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3328:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "3323:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2173,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3323:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3357:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "3338:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2175,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3338:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2176,
													"nodeType": "ArrayTypeName",
													"src": "3338:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:40:10"
									},
									"returnParameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3400:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "3386:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2179,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3386:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2180,
													"nodeType": "ArrayTypeName",
													"src": "3386:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:23:10"
									},
									"scope": 2195,
									"src": "3300:109:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 2194,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "3423:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3441:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "3436:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2184,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3436:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3471:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "3452:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2186,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3452:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2187,
													"nodeType": "ArrayTypeName",
													"src": "3452:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:41:10"
									},
									"returnParameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3514:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "3500:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2190,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3500:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2191,
													"nodeType": "ArrayTypeName",
													"src": "3500:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3499:23:10"
									},
									"scope": 2195,
									"src": "3414:109:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2196,
							"src": "26:3499:10",
							"usedErrors": []
						}
					],
					"src": "0:3526:10"
				},
				"id": 10
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							2195
						],
						"IUniswapV2Router02": [
							2283
						]
					},
					"id": 2284,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2197,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:11"
						},
						{
							"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
							"file": "./IUniswapV2Router01.sol",
							"id": 2198,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2284,
							"sourceUnit": 2196,
							"src": "26:34:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2199,
										"name": "IUniswapV2Router01",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2195,
										"src": "94:18:11"
									},
									"id": 2200,
									"nodeType": "InheritanceSpecifier",
									"src": "94:18:11"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2283,
							"linearizedBaseContracts": [
								2283,
								2195
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "72:18:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "af2979eb",
									"id": 2217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nameLocation": "128:47:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "193:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "185:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "213:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "208:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2203,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "208:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "237:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "232:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2205,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "232:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "266:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "261:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2207,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "261:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "296:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "288:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "313:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "308:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "175:152:11"
									},
									"returnParameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "351:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "346:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2214,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "346:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:16:11"
									},
									"scope": 2283,
									"src": "119:243:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0d5984",
									"id": 2242,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nameLocation": "376:57:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "451:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "443:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "471:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "466:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2220,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "466:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "495:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "490:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2222,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "490:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2225,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "524:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "519:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2224,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "519:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "554:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "546:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "571:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "566:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2228,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "566:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "594:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "589:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2230,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "589:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "612:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "606:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2232,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "606:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "623:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "615:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2234,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "634:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "626:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2236,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "433:208:11"
									},
									"returnParameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "665:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "660:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2239,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "660:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "659:16:11"
									},
									"scope": 2283,
									"src": "367:309:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 2256,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "691:53:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "759:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "754:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2243,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "754:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "782:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "777:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2245,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "777:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "823:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "804:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2247,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "804:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2248,
													"nodeType": "ArrayTypeName",
													"src": "804:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "845:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "837:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "862:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "857:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2252,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "857:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:132:11"
									},
									"returnParameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "885:0:11"
									},
									"scope": 2283,
									"src": "682:204:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 2268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "900:50:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2258,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "965:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "960:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2257,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1006:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "987:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2259,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "987:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2260,
													"nodeType": "ArrayTypeName",
													"src": "987:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1028:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "1020:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1045:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "1040:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2264,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1040:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:109:11"
									},
									"returnParameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1076:0:11"
									},
									"scope": 2283,
									"src": "891:186:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 2282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "1091:50:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1156:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2282,
												"src": "1151:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2269,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1151:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1179:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2282,
												"src": "1174:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2271,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1174:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2275,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1220:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2282,
												"src": "1201:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2273,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1201:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2274,
													"nodeType": "ArrayTypeName",
													"src": "1201:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1242:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2282,
												"src": "1234:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1259:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2282,
												"src": "1254:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2278,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1254:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:132:11"
									},
									"returnParameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1282:0:11"
									},
									"scope": 2283,
									"src": "1082:201:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2284,
							"src": "62:1223:11",
							"usedErrors": []
						}
					],
					"src": "0:1286:11"
				},
				"id": 11
			},
			"contracts/BaseFlipPool.sol": {
				"ast": {
					"absolutePath": "contracts/BaseFlipPool.sol",
					"exportedSymbols": {
						"Address": [
							1312
						],
						"BaseFlipPool": [
							3064
						],
						"Context": [
							1333
						],
						"ERC20": [
							689
						],
						"IERC20": [
							767
						],
						"IERC20Metadata": [
							792
						],
						"IMasterChefContractor": [
							3171
						],
						"IPancakeSwapMasterChef": [
							3123
						],
						"IUniswapV2Pair": [
							1887
						],
						"IUniswapV2Router01": [
							2195
						],
						"IUniswapV2Router02": [
							2283
						],
						"Ownable": [
							103
						],
						"ReentrancyGuard": [
							143
						],
						"SafeERC20": [
							1016
						],
						"SafeMath": [
							1645
						],
						"TransferHelper": [
							3288
						]
					},
					"id": 3065,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2285,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "37:22:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 2286,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3065,
							"sourceUnit": 1313,
							"src": "60:51:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2287,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3065,
							"sourceUnit": 104,
							"src": "112:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3065,
							"sourceUnit": 1646,
							"src": "165:57:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2289,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3065,
							"sourceUnit": 768,
							"src": "223:56:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3065,
							"sourceUnit": 690,
							"src": "280:55:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 2291,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3065,
							"sourceUnit": 1017,
							"src": "336:65:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 2292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3065,
							"sourceUnit": 144,
							"src": "402:62:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
							"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
							"id": 2293,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3065,
							"sourceUnit": 2284,
							"src": "465:75:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
							"file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
							"id": 2294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3065,
							"sourceUnit": 1888,
							"src": "541:66:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IMasterChefContractor.sol",
							"file": "./interfaces/IMasterChefContractor.sol",
							"id": 2295,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3065,
							"sourceUnit": 3172,
							"src": "608:48:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/flip_interfaces/IPancakeSwapMasterChef.sol",
							"file": "./flip_interfaces/IPancakeSwapMasterChef.sol",
							"id": 2296,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3065,
							"sourceUnit": 3124,
							"src": "657:54:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/TransferHelper.sol",
							"file": "./libraries/TransferHelper.sol",
							"id": 2297,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3065,
							"sourceUnit": 3289,
							"src": "712:40:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2298,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 103,
										"src": "779:7:12"
									},
									"id": 2299,
									"nodeType": "InheritanceSpecifier",
									"src": "779:7:12"
								},
								{
									"baseName": {
										"id": 2300,
										"name": "IMasterChefContractor",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3171,
										"src": "788:21:12"
									},
									"id": 2301,
									"nodeType": "InheritanceSpecifier",
									"src": "788:21:12"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3064,
							"linearizedBaseContracts": [
								3064,
								3171,
								103,
								1333
							],
							"name": "BaseFlipPool",
							"nameLocation": "763:12:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2304,
									"libraryName": {
										"id": 2302,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1645,
										"src": "822:8:12"
									},
									"nodeType": "UsingForDirective",
									"src": "816:27:12",
									"typeName": {
										"id": 2303,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "835:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 2308,
									"libraryName": {
										"id": 2305,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1016,
										"src": "854:9:12"
									},
									"nodeType": "UsingForDirective",
									"src": "848:27:12",
									"typeName": {
										"id": 2307,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2306,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 767,
											"src": "868:6:12"
										},
										"referencedDeclaration": 767,
										"src": "868:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$767",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"id": 2311,
									"libraryName": {
										"id": 2309,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1312,
										"src": "886:7:12"
									},
									"nodeType": "UsingForDirective",
									"src": "880:26:12",
									"typeName": {
										"id": 2310,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "898:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 2314,
									"mutability": "mutable",
									"name": "masterChef",
									"nameLocation": "1259:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 3064,
									"src": "1236:33:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPancakeSwapMasterChef_$3123",
										"typeString": "contract IPancakeSwapMasterChef"
									},
									"typeName": {
										"id": 2313,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2312,
											"name": "IPancakeSwapMasterChef",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3123,
											"src": "1236:22:12"
										},
										"referencedDeclaration": 3123,
										"src": "1236:22:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPancakeSwapMasterChef_$3123",
											"typeString": "contract IPancakeSwapMasterChef"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 2317,
									"mutability": "mutable",
									"name": "rewardToken",
									"nameLocation": "1289:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 3064,
									"src": "1275:25:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$767",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 2316,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2315,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 767,
											"src": "1275:6:12"
										},
										"referencedDeclaration": 767,
										"src": "1275:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$767",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "51ed6a30",
									"id": 2320,
									"mutability": "mutable",
									"name": "stakeToken",
									"nameLocation": "1349:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 3064,
									"src": "1335:24:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$767",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 2319,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2318,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 767,
											"src": "1335:6:12"
										},
										"referencedDeclaration": 767,
										"src": "1335:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$767",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5945365e",
									"id": 2323,
									"mutability": "mutable",
									"name": "flipToken",
									"nameLocation": "1415:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 3064,
									"src": "1401:23:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$767",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 2322,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2321,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 767,
											"src": "1401:6:12"
										},
										"referencedDeclaration": 767,
										"src": "1401:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$767",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "73d38793",
									"id": 2325,
									"mutability": "mutable",
									"name": "rewardSystem",
									"nameLocation": "1470:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 3064,
									"src": "1455:27:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2324,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1455:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2328,
									"mutability": "mutable",
									"name": "router",
									"nameLocation": "1512:6:12",
									"nodeType": "VariableDeclaration",
									"scope": 3064,
									"src": "1493:25:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$2283",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 2327,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2326,
											"name": "IUniswapV2Router02",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2283,
											"src": "1493:18:12"
										},
										"referencedDeclaration": 2283,
										"src": "1493:18:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$2283",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2330,
									"mutability": "mutable",
									"name": "masterEntertainer",
									"nameLocation": "1537:17:12",
									"nodeType": "VariableDeclaration",
									"scope": 3064,
									"src": "1529:25:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2329,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1529:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "13f43a57",
									"id": 2333,
									"mutability": "mutable",
									"name": "minAmountToSwap",
									"nameLocation": "1580:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 3064,
									"src": "1565:40:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2331,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1565:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2332,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1598:7:12",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 2339,
									"name": "SetRewardSystem",
									"nameLocation": "1930:15:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1962:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "1946:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2337,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1984:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "1968:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1968:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1945:50:12"
									},
									"src": "1924:72:12"
								},
								{
									"anonymous": false,
									"id": 2343,
									"name": "SetMasterEntertainer",
									"nameLocation": "2007:20:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2341,
												"indexed": true,
												"mutability": "mutable",
												"name": "masterEntertainer",
												"nameLocation": "2044:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 2343,
												"src": "2028:33:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:35:12"
									},
									"src": "2001:62:12"
								},
								{
									"anonymous": false,
									"id": 2347,
									"name": "SetRouter",
									"nameLocation": "2074:9:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2345,
												"indexed": true,
												"mutability": "mutable",
												"name": "router",
												"nameLocation": "2100:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2347,
												"src": "2084:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:24:12"
									},
									"src": "2068:40:12"
								},
								{
									"anonymous": false,
									"id": 2351,
									"name": "SetMinAmountToSwap",
									"nameLocation": "2119:18:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2349,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2146:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "2138:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:16:12"
									},
									"src": "2113:41:12"
								},
								{
									"body": {
										"id": 2365,
										"nodeType": "Block",
										"src": "2505:170:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2356,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2531:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2531:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2523:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2354,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2523:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2523:19:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2359,
																"name": "masterEntertainer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2330,
																"src": "2546:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2523:40:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a6f6e6c794d6173746572456e7465727461696e65723a204f6e6c7920746865206d617374657220656e7465727461696e657220697320616c6c6f77656420746f2063616c6c2074686973206d6574686f6421",
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2565:91:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_21e4842dc146c03ef71494afc50aa244fd2e52b0ec7b2dc19cb5f11801f005ae",
																"typeString": "literal_string \"ABOAT::onlyMasterEntertainer: Only the master entertainer is allowed to call this method!\""
															},
															"value": "ABOAT::onlyMasterEntertainer: Only the master entertainer is allowed to call this method!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_21e4842dc146c03ef71494afc50aa244fd2e52b0ec7b2dc19cb5f11801f005ae",
																"typeString": "literal_string \"ABOAT::onlyMasterEntertainer: Only the master entertainer is allowed to call this method!\""
															}
														],
														"id": 2353,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2515:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2515:142:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2363,
												"nodeType": "ExpressionStatement",
												"src": "2515:142:12"
											},
											{
												"id": 2364,
												"nodeType": "PlaceholderStatement",
												"src": "2667:1:12"
											}
										]
									},
									"id": 2366,
									"name": "onlyMasterEntertainer",
									"nameLocation": "2483:21:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2505:0:12"
									},
									"src": "2474:201:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2481,
										"nodeType": "Block",
										"src": "2849:769:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2388,
																		"name": "_flipToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2369,
																		"src": "2875:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$767",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$767",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 2387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2867:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2386,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2867:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2867:19:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2898:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2890:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2390,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2890:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2890:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2867:33:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "466c697020546f6b656e2063616e2774206265207a65726f2061646472657373",
															"id": 2395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:34:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_313e3f0c8e984ed735f820e259241f8a14c9ab9a21e04251d8dfba5294922c6d",
																"typeString": "literal_string \"Flip Token can't be zero address\""
															},
															"value": "Flip Token can't be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_313e3f0c8e984ed735f820e259241f8a14c9ab9a21e04251d8dfba5294922c6d",
																"typeString": "literal_string \"Flip Token can't be zero address\""
															}
														],
														"id": 2385,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2859:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2859:78:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2397,
												"nodeType": "ExpressionStatement",
												"src": "2859:78:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2401,
																		"name": "_stakeToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2372,
																		"src": "2963:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$767",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$767",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 2400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2955:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2399,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2955:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2955:20:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2987:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2979:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2403,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2979:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2979:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2955:34:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b6520546f6b656e2063616e2774206265207a65726f2061646472657373",
															"id": 2408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2991:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d98b1c54aa4393b4f5e83c52af1e239027cf51e55005507e2797ab15552f1de",
																"typeString": "literal_string \"Stake Token can't be zero address\""
															},
															"value": "Stake Token can't be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d98b1c54aa4393b4f5e83c52af1e239027cf51e55005507e2797ab15552f1de",
																"typeString": "literal_string \"Stake Token can't be zero address\""
															}
														],
														"id": 2398,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2947:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2947:80:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2410,
												"nodeType": "ExpressionStatement",
												"src": "2947:80:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2414,
																		"name": "_rewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2375,
																		"src": "3053:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$767",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$767",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 2413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3045:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2412,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3045:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3045:21:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3078:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3070:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2416,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3070:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3070:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3045:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52657761726420546f6b656e2063616e2774206265207a65726f2061646472657373",
															"id": 2421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3082:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_705fdf4e1fda478b74d773a311969f26a4ef64c7d0a9ef175974e9bc0ef11a7d",
																"typeString": "literal_string \"Reward Token can't be zero address\""
															},
															"value": "Reward Token can't be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_705fdf4e1fda478b74d773a311969f26a4ef64c7d0a9ef175974e9bc0ef11a7d",
																"typeString": "literal_string \"Reward Token can't be zero address\""
															}
														],
														"id": 2411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3037:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3037:82:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2423,
												"nodeType": "ExpressionStatement",
												"src": "3037:82:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2425,
																"name": "_rewardSystem",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "3137:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3162:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3154:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2426,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3154:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3154:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3137:27:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265776172642053797374656d2063616e2774206265207a65726f2061646472657373",
															"id": 2431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3166:37:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a449262043586a6ed441a315327dedaab1bc73af1db741e04bafa2716ad48b88",
																"typeString": "literal_string \"Reward System can't be zero address\""
															},
															"value": "Reward System can't be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a449262043586a6ed441a315327dedaab1bc73af1db741e04bafa2716ad48b88",
																"typeString": "literal_string \"Reward System can't be zero address\""
															}
														],
														"id": 2424,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3129:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3129:75:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2433,
												"nodeType": "ExpressionStatement",
												"src": "3129:75:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2437,
																		"name": "_masterChef",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2380,
																		"src": "3230:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IPancakeSwapMasterChef_$3123",
																			"typeString": "contract IPancakeSwapMasterChef"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IPancakeSwapMasterChef_$3123",
																			"typeString": "contract IPancakeSwapMasterChef"
																		}
																	],
																	"id": 2436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3222:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2435,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3222:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3222:20:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3254:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3246:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2439,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3246:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3246:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3222:34:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d617374657220436865662063616e2774206265207a65726f2061646472657373",
															"id": 2444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3258:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d95fc865c22b00bff394cd371f2dc119a9184d8014f02551ac1b63777d8e927b",
																"typeString": "literal_string \"Master Chef can't be zero address\""
															},
															"value": "Master Chef can't be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d95fc865c22b00bff394cd371f2dc119a9184d8014f02551ac1b63777d8e927b",
																"typeString": "literal_string \"Master Chef can't be zero address\""
															}
														],
														"id": 2434,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3214:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3214:80:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2446,
												"nodeType": "ExpressionStatement",
												"src": "3214:80:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2448,
																"name": "_masterEntertainer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2382,
																"src": "3312:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3342:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3334:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2449,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3334:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3334:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3312:32:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d617374657220456e7465727461696e65722063616e2774206265207a65726f2061646472657373",
															"id": 2454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3346:42:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3ac5307462f1240dc69e6b46adc569750e239215835082a7e1180fc5b9080fbe",
																"typeString": "literal_string \"Master Entertainer can't be zero address\""
															},
															"value": "Master Entertainer can't be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3ac5307462f1240dc69e6b46adc569750e239215835082a7e1180fc5b9080fbe",
																"typeString": "literal_string \"Master Entertainer can't be zero address\""
															}
														],
														"id": 2447,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3304:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:85:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2456,
												"nodeType": "ExpressionStatement",
												"src": "3304:85:12"
											},
											{
												"expression": {
													"id": 2459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2457,
														"name": "flipToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2323,
														"src": "3399:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$767",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2458,
														"name": "_flipToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2369,
														"src": "3411:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$767",
															"typeString": "contract IERC20"
														}
													},
													"src": "3399:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$767",
														"typeString": "contract IERC20"
													}
												},
												"id": 2460,
												"nodeType": "ExpressionStatement",
												"src": "3399:22:12"
											},
											{
												"expression": {
													"id": 2463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2461,
														"name": "masterChef",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2314,
														"src": "3431:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPancakeSwapMasterChef_$3123",
															"typeString": "contract IPancakeSwapMasterChef"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2462,
														"name": "_masterChef",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2380,
														"src": "3444:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPancakeSwapMasterChef_$3123",
															"typeString": "contract IPancakeSwapMasterChef"
														}
													},
													"src": "3431:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPancakeSwapMasterChef_$3123",
														"typeString": "contract IPancakeSwapMasterChef"
													}
												},
												"id": 2464,
												"nodeType": "ExpressionStatement",
												"src": "3431:24:12"
											},
											{
												"expression": {
													"id": 2467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2465,
														"name": "masterEntertainer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2330,
														"src": "3465:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2466,
														"name": "_masterEntertainer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2382,
														"src": "3485:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3465:38:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2468,
												"nodeType": "ExpressionStatement",
												"src": "3465:38:12"
											},
											{
												"expression": {
													"id": 2471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2469,
														"name": "stakeToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2320,
														"src": "3513:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$767",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2470,
														"name": "_stakeToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2372,
														"src": "3526:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$767",
															"typeString": "contract IERC20"
														}
													},
													"src": "3513:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$767",
														"typeString": "contract IERC20"
													}
												},
												"id": 2472,
												"nodeType": "ExpressionStatement",
												"src": "3513:24:12"
											},
											{
												"expression": {
													"id": 2475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2473,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2317,
														"src": "3547:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$767",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2474,
														"name": "_rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2375,
														"src": "3561:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$767",
															"typeString": "contract IERC20"
														}
													},
													"src": "3547:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$767",
														"typeString": "contract IERC20"
													}
												},
												"id": 2476,
												"nodeType": "ExpressionStatement",
												"src": "3547:26:12"
											},
											{
												"expression": {
													"id": 2479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2477,
														"name": "rewardSystem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2325,
														"src": "3583:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2478,
														"name": "_rewardSystem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2377,
														"src": "3598:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3583:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2480,
												"nodeType": "ExpressionStatement",
												"src": "3583:28:12"
											}
										]
									},
									"id": 2482,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "_flipToken",
												"nameLocation": "2709:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "2702:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$767",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2368,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2367,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 767,
														"src": "2702:6:12"
													},
													"referencedDeclaration": 767,
													"src": "2702:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$767",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "_stakeToken",
												"nameLocation": "2728:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "2721:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$767",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2371,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2370,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 767,
														"src": "2721:6:12"
													},
													"referencedDeclaration": 767,
													"src": "2721:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$767",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nameLocation": "2748:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "2741:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$767",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2374,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2373,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 767,
														"src": "2741:6:12"
													},
													"referencedDeclaration": 767,
													"src": "2741:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$767",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "_rewardSystem",
												"nameLocation": "2770:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "2762:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2762:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "_masterChef",
												"nameLocation": "2808:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "2785:34:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPancakeSwapMasterChef_$3123",
													"typeString": "contract IPancakeSwapMasterChef"
												},
												"typeName": {
													"id": 2379,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2378,
														"name": "IPancakeSwapMasterChef",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3123,
														"src": "2785:22:12"
													},
													"referencedDeclaration": 3123,
													"src": "2785:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPancakeSwapMasterChef_$3123",
														"typeString": "contract IPancakeSwapMasterChef"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2382,
												"mutability": "mutable",
												"name": "_masterEntertainer",
												"nameLocation": "2829:18:12",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "2821:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2821:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2701:147:12"
									},
									"returnParameters": {
										"id": 2384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2849:0:12"
									},
									"scope": 3064,
									"src": "2690:928:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2509,
										"nodeType": "Block",
										"src": "4010:193:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2490,
																"name": "_rewardSystem",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2484,
																"src": "4028:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4053:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4045:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2491,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4045:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4045:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4028:27:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265776172642053797374656d2063616e27742062652073657420746f207a65726f2061646472657373",
															"id": 2496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4057:44:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d7d88b583e6e4d65f20b31e494ad419841cf43f946ab532f9ed552486f9d47ef",
																"typeString": "literal_string \"Reward System can't be set to zero address\""
															},
															"value": "Reward System can't be set to zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d7d88b583e6e4d65f20b31e494ad419841cf43f946ab532f9ed552486f9d47ef",
																"typeString": "literal_string \"Reward System can't be set to zero address\""
															}
														],
														"id": 2489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4020:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4020:82:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2498,
												"nodeType": "ExpressionStatement",
												"src": "4020:82:12"
											},
											{
												"expression": {
													"id": 2501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2499,
														"name": "rewardSystem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2325,
														"src": "4112:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2500,
														"name": "_rewardSystem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2484,
														"src": "4127:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4112:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2502,
												"nodeType": "ExpressionStatement",
												"src": "4112:28:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2504,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4171:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4171:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2506,
															"name": "rewardSystem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2325,
															"src": "4183:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2503,
														"name": "SetRewardSystem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2339,
														"src": "4155:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4155:41:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2508,
												"nodeType": "EmitStatement",
												"src": "4150:46:12"
											}
										]
									},
									"functionSelector": "2b3ea9e1",
									"id": 2510,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2487,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2486,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4001:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4001:9:12"
										}
									],
									"name": "setRewardSystem",
									"nameLocation": "3955:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "_rewardSystem",
												"nameLocation": "3979:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "3971:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3971:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3970:23:12"
									},
									"returnParameters": {
										"id": 2488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4010:0:12"
									},
									"scope": 3064,
									"src": "3946:257:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2542,
										"nodeType": "Block",
										"src": "4277:162:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2521,
																		"name": "_router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2513,
																		"src": "4303:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV2Router02_$2283",
																			"typeString": "contract IUniswapV2Router02"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IUniswapV2Router02_$2283",
																			"typeString": "contract IUniswapV2Router02"
																		}
																	],
																	"id": 2520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4295:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2519,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4295:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4295:16:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4323:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4315:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2523,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4315:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4315:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4295:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f757465722063616e27742062652073657420746f207a65726f2061646472657373",
															"id": 2528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4327:37:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5a9cac642e8596a17e397670f192ad1fb0b5021eb5f42d99960d4ffd67203f2a",
																"typeString": "literal_string \"Router can't be set to zero address\""
															},
															"value": "Router can't be set to zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5a9cac642e8596a17e397670f192ad1fb0b5021eb5f42d99960d4ffd67203f2a",
																"typeString": "literal_string \"Router can't be set to zero address\""
															}
														],
														"id": 2518,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4287:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4287:78:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2530,
												"nodeType": "ExpressionStatement",
												"src": "4287:78:12"
											},
											{
												"expression": {
													"id": 2533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2531,
														"name": "router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2328,
														"src": "4375:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$2283",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2532,
														"name": "_router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2513,
														"src": "4384:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$2283",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "4375:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$2283",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 2534,
												"nodeType": "ExpressionStatement",
												"src": "4375:16:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2538,
																	"name": "router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2328,
																	"src": "4424:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2283",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2283",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 2537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4416:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2536,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4416:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4416:15:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2535,
														"name": "SetRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2347,
														"src": "4406:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4406:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2541,
												"nodeType": "EmitStatement",
												"src": "4401:31:12"
											}
										]
									},
									"functionSelector": "c0d78655",
									"id": 2543,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2516,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2515,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4267:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4267:9:12"
										}
									],
									"name": "setRouter",
									"nameLocation": "4222:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2513,
												"mutability": "mutable",
												"name": "_router",
												"nameLocation": "4251:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "4232:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV2Router02_$2283",
													"typeString": "contract IUniswapV2Router02"
												},
												"typeName": {
													"id": 2512,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2511,
														"name": "IUniswapV2Router02",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2283,
														"src": "4232:18:12"
													},
													"referencedDeclaration": 2283,
													"src": "4232:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$2283",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4231:28:12"
									},
									"returnParameters": {
										"id": 2517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4277:0:12"
									},
									"scope": 3064,
									"src": "4213:226:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2568,
										"nodeType": "Block",
										"src": "4524:211:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2551,
																"name": "_masterEntertainer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2545,
																"src": "4542:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4572:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4564:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2552,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4564:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4564:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4542:32:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d617374657220456e7465727461696e65722063616e27742062652073657420746f207a65726f2061646472657373",
															"id": 2557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4576:49:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c0f52bf107b9ed5d7e76e90e7140bb3b6030f0eb634d11644cfddbbf2f383b8e",
																"typeString": "literal_string \"Master Entertainer can't be set to zero address\""
															},
															"value": "Master Entertainer can't be set to zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c0f52bf107b9ed5d7e76e90e7140bb3b6030f0eb634d11644cfddbbf2f383b8e",
																"typeString": "literal_string \"Master Entertainer can't be set to zero address\""
															}
														],
														"id": 2550,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4534:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4534:92:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2559,
												"nodeType": "ExpressionStatement",
												"src": "4534:92:12"
											},
											{
												"expression": {
													"id": 2562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2560,
														"name": "masterEntertainer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2330,
														"src": "4636:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2561,
														"name": "_masterEntertainer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2545,
														"src": "4656:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4636:38:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2563,
												"nodeType": "ExpressionStatement",
												"src": "4636:38:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2565,
															"name": "masterEntertainer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2330,
															"src": "4710:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2564,
														"name": "SetMasterEntertainer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2343,
														"src": "4689:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4689:39:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2567,
												"nodeType": "EmitStatement",
												"src": "4684:44:12"
											}
										]
									},
									"functionSelector": "54613450",
									"id": 2569,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2548,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2547,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4514:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4514:9:12"
										}
									],
									"name": "setMasterEntertainer",
									"nameLocation": "4458:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "_masterEntertainer",
												"nameLocation": "4487:18:12",
												"nodeType": "VariableDeclaration",
												"scope": 2569,
												"src": "4479:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4479:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4478:28:12"
									},
									"returnParameters": {
										"id": 2549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4524:0:12"
									},
									"scope": 3064,
									"src": "4449:286:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2584,
										"nodeType": "Block",
										"src": "4810:95:12",
										"statements": [
											{
												"expression": {
													"id": 2578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2576,
														"name": "minAmountToSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2333,
														"src": "4820:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2577,
														"name": "_minAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2571,
														"src": "4838:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4820:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2579,
												"nodeType": "ExpressionStatement",
												"src": "4820:28:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2581,
															"name": "minAmountToSwap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2333,
															"src": "4882:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2580,
														"name": "SetMinAmountToSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2351,
														"src": "4863:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4863:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2583,
												"nodeType": "EmitStatement",
												"src": "4858:40:12"
											}
										]
									},
									"functionSelector": "2b0a696d",
									"id": 2585,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2574,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2573,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4800:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4800:9:12"
										}
									],
									"name": "setMinAmountToSwap",
									"nameLocation": "4754:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "_minAmount",
												"nameLocation": "4781:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "4773:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4773:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4772:20:12"
									},
									"returnParameters": {
										"id": 2575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4810:0:12"
									},
									"scope": 3064,
									"src": "4745:160:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3131
									],
									"body": {
										"id": 2596,
										"nodeType": "Block",
										"src": "5301:43:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2593,
															"name": "masterChef",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2314,
															"src": "5326:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPancakeSwapMasterChef_$3123",
																"typeString": "contract IPancakeSwapMasterChef"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IPancakeSwapMasterChef_$3123",
																"typeString": "contract IPancakeSwapMasterChef"
															}
														],
														"id": 2592,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5318:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2591,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5318:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 2594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5318:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2590,
												"id": 2595,
												"nodeType": "Return",
												"src": "5311:26:12"
											}
										]
									},
									"functionSelector": "b5644963",
									"id": 2597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMasterChef",
									"nameLocation": "5244:13:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2587,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5269:8:12"
									},
									"parameters": {
										"id": 2586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5257:2:12"
									},
									"returnParameters": {
										"id": 2590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2597,
												"src": "5292:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5292:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5291:9:12"
									},
									"scope": 3064,
									"src": "5235:109:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3145
									],
									"body": {
										"id": 2618,
										"nodeType": "Block",
										"src": "5431:101:12",
										"statements": [
											{
												"assignments": [
													2606,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2606,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "5450:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2618,
														"src": "5442:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2605,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5442:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2615,
												"initialValue": {
													"arguments": [
														{
															"id": 2609,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2599,
															"src": "5482:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 2612,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5496:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BaseFlipPool_$3064",
																		"typeString": "contract BaseFlipPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BaseFlipPool_$3064",
																		"typeString": "contract BaseFlipPool"
																	}
																],
																"id": 2611,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5488:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2610,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5488:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5488:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2607,
															"name": "masterChef",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2314,
															"src": "5462:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPancakeSwapMasterChef_$3123",
																"typeString": "contract IPancakeSwapMasterChef"
															}
														},
														"id": 2608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "userInfo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3115,
														"src": "5462:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256,address) view external returns (uint256,uint256)"
														}
													},
													"id": 2614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5462:40:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5441:61:12"
											},
											{
												"expression": {
													"id": 2616,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2606,
													"src": "5519:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2604,
												"id": 2617,
												"nodeType": "Return",
												"src": "5512:13:12"
											}
										]
									},
									"functionSelector": "951583c3",
									"id": 2619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLiquidity",
									"nameLocation": "5363:12:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2601,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5399:8:12"
									},
									"parameters": {
										"id": 2600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2599,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "5384:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2619,
												"src": "5376:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5376:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5375:14:12"
									},
									"returnParameters": {
										"id": 2604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2619,
												"src": "5422:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5422:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5421:9:12"
									},
									"scope": 3064,
									"src": "5354:178:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3138
									],
									"body": {
										"id": 2629,
										"nodeType": "Block",
										"src": "5620:25:12",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 2627,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5637:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 2626,
												"id": 2628,
												"nodeType": "Return",
												"src": "5630:8:12"
											}
										]
									},
									"functionSelector": "9fbe42e3",
									"id": 2630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDepositFee",
									"nameLocation": "5551:13:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2623,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5588:8:12"
									},
									"parameters": {
										"id": 2622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "5573:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "5565:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5565:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5564:14:12"
									},
									"returnParameters": {
										"id": 2626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "5611:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:9:12"
									},
									"scope": 3064,
									"src": "5542:103:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2633,
										"nodeType": "Block",
										"src": "6002:2:12",
										"statements": []
									},
									"id": 2634,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5982:2:12"
									},
									"returnParameters": {
										"id": 2632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6002:0:12"
									},
									"scope": 3064,
									"src": "5975:29:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3152
									],
									"body": {
										"id": 2649,
										"nodeType": "Block",
										"src": "6102:40:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2645,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2636,
															"src": "6121:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2646,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2638,
															"src": "6127:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2644,
														"name": "_deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2704,
														"src": "6112:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6112:23:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2648,
												"nodeType": "ExpressionStatement",
												"src": "6112:23:12"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 2650,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2642,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2641,
												"name": "onlyMasterEntertainer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2366,
												"src": "6080:21:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "6080:21:12"
										}
									],
									"name": "deposit",
									"nameLocation": "6023:7:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2640,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6071:8:12"
									},
									"parameters": {
										"id": 2639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2636,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "6039:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2650,
												"src": "6031:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6031:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2638,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6053:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2650,
												"src": "6045:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6045:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6030:31:12"
									},
									"returnParameters": {
										"id": 2643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6102:0:12"
									},
									"scope": 3064,
									"src": "6014:128:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2703,
										"nodeType": "Block",
										"src": "6210:305:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2662,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6256:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6256:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6248:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2660,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6248:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6248:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2667,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6277:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BaseFlipPool_$3064",
																		"typeString": "contract BaseFlipPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BaseFlipPool_$3064",
																		"typeString": "contract BaseFlipPool"
																	}
																],
																"id": 2666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6269:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2665,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6269:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6269:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2669,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2654,
															"src": "6284:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2657,
															"name": "stakeToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2320,
															"src": "6220:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$767",
																"typeString": "contract IERC20"
															}
														},
														"id": 2659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 849,
														"src": "6220:27:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$767_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$767_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 2670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6220:72:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2671,
												"nodeType": "ExpressionStatement",
												"src": "6220:72:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2677,
																	"name": "masterChef",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2314,
																	"src": "6329:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IPancakeSwapMasterChef_$3123",
																		"typeString": "contract IPancakeSwapMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IPancakeSwapMasterChef_$3123",
																		"typeString": "contract IPancakeSwapMasterChef"
																	}
																],
																"id": 2676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6321:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2675,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6321:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6321:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2679,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2654,
															"src": "6342:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2672,
															"name": "stakeToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2320,
															"src": "6302:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$767",
																"typeString": "contract IERC20"
															}
														},
														"id": 2674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 736,
														"src": "6302:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6302:48:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2681,
												"nodeType": "ExpressionStatement",
												"src": "6302:48:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2682,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2652,
														"src": "6363:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6371:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6363:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2698,
													"nodeType": "Block",
													"src": "6430:58:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2694,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2652,
																		"src": "6463:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2695,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2654,
																		"src": "6469:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2691,
																		"name": "masterChef",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2314,
																		"src": "6444:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IPancakeSwapMasterChef_$3123",
																			"typeString": "contract IPancakeSwapMasterChef"
																		}
																	},
																	"id": 2693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "deposit",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3082,
																	"src": "6444:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) external"
																	}
																},
																"id": 2696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6444:33:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2697,
															"nodeType": "ExpressionStatement",
															"src": "6444:33:12"
														}
													]
												},
												"id": 2699,
												"nodeType": "IfStatement",
												"src": "6360:128:12",
												"trueBody": {
													"id": 2690,
													"nodeType": "Block",
													"src": "6374:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2686,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2652,
																		"src": "6399:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2687,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2654,
																		"src": "6405:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2685,
																	"name": "enterStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2804,
																	"src": "6388:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 2688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6388:25:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2689,
															"nodeType": "ExpressionStatement",
															"src": "6388:25:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2700,
														"name": "swapToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2871,
														"src": "6497:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6497:11:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2702,
												"nodeType": "ExpressionStatement",
												"src": "6497:11:12"
											}
										]
									},
									"id": 2704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_deposit",
									"nameLocation": "6161:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2652,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "6178:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "6170:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6170:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6192:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "6184:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6184:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6169:31:12"
									},
									"returnParameters": {
										"id": 2656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6210:0:12"
									},
									"scope": 3064,
									"src": "6152:363:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										3161
									],
									"body": {
										"id": 2749,
										"nodeType": "Block",
										"src": "6631:257:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2716,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2706,
														"src": "6644:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2717,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6652:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6644:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2732,
													"nodeType": "Block",
													"src": "6711:59:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2728,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2706,
																		"src": "6745:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2729,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2708,
																		"src": "6751:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2725,
																		"name": "masterChef",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2314,
																		"src": "6725:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IPancakeSwapMasterChef_$3123",
																			"typeString": "contract IPancakeSwapMasterChef"
																		}
																	},
																	"id": 2727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "withdraw",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3089,
																	"src": "6725:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) external"
																	}
																},
																"id": 2730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6725:34:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2731,
															"nodeType": "ExpressionStatement",
															"src": "6725:34:12"
														}
													]
												},
												"id": 2733,
												"nodeType": "IfStatement",
												"src": "6641:129:12",
												"trueBody": {
													"id": 2724,
													"nodeType": "Block",
													"src": "6655:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2720,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2706,
																		"src": "6680:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2721,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2708,
																		"src": "6686:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2719,
																	"name": "leaveStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2819,
																	"src": "6669:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 2722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6669:25:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2723,
															"nodeType": "ExpressionStatement",
															"src": "6669:25:12"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2734,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2708,
														"src": "6782:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2735,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6792:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6782:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2745,
												"nodeType": "IfStatement",
												"src": "6779:82:12",
												"trueBody": {
													"id": 2744,
													"nodeType": "Block",
													"src": "6795:66:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2740,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2710,
																		"src": "6833:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2741,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2708,
																		"src": "6842:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2737,
																		"name": "stakeToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2320,
																		"src": "6809:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$767",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 823,
																	"src": "6809:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$767_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$767_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6809:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2743,
															"nodeType": "ExpressionStatement",
															"src": "6809:41:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2746,
														"name": "swapToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2871,
														"src": "6870:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6870:11:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2748,
												"nodeType": "ExpressionStatement",
												"src": "6870:11:12"
											}
										]
									},
									"functionSelector": "0ad58d2f",
									"id": 2750,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2714,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2713,
												"name": "onlyMasterEntertainer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2366,
												"src": "6609:21:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "6609:21:12"
										}
									],
									"name": "withdraw",
									"nameLocation": "6534:8:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2712,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6600:8:12"
									},
									"parameters": {
										"id": 2711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2706,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "6551:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2750,
												"src": "6543:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6543:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6565:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2750,
												"src": "6557:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6557:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2710,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "6582:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2750,
												"src": "6574:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6574:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6542:48:12"
									},
									"returnParameters": {
										"id": 2715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6631:0:12"
									},
									"scope": 3064,
									"src": "6525:363:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3170
									],
									"body": {
										"id": 2785,
										"nodeType": "Block",
										"src": "7018:183:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2765,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2752,
															"src": "7062:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2762,
															"name": "masterChef",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2314,
															"src": "7028:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPancakeSwapMasterChef_$3123",
																"typeString": "contract IPancakeSwapMasterChef"
															}
														},
														"id": 2764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "withdrawWithoutRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3104,
														"src": "7028:33:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 2766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7028:39:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2767,
												"nodeType": "ExpressionStatement",
												"src": "7028:39:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2769,
															"name": "stakeToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2320,
															"src": "7095:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$767",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 2770,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2756,
															"src": "7107:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2771,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2754,
															"src": "7116:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$767",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2768,
														"name": "safeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3063,
														"src": "7077:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$767_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7077:47:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2773,
												"nodeType": "ExpressionStatement",
												"src": "7077:47:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2775,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2752,
															"src": "7143:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2780,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "7178:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_BaseFlipPool_$3064",
																				"typeString": "contract BaseFlipPool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_BaseFlipPool_$3064",
																				"typeString": "contract BaseFlipPool"
																			}
																		],
																		"id": 2779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7170:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2778,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7170:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7170:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2776,
																	"name": "stakeToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2320,
																	"src": "7149:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$767",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 706,
																"src": "7149:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7149:35:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2774,
														"name": "_deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2704,
														"src": "7134:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7134:51:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2784,
												"nodeType": "ExpressionStatement",
												"src": "7134:51:12"
											}
										]
									},
									"functionSelector": "f72b2a4c",
									"id": 2786,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2760,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2759,
												"name": "onlyMasterEntertainer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2366,
												"src": "6996:21:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "6996:21:12"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "6912:17:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2758,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6987:8:12"
									},
									"parameters": {
										"id": 2757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "6938:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2786,
												"src": "6930:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6930:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2754,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6952:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2786,
												"src": "6944:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6944:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2756,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "6969:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2786,
												"src": "6961:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6961:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6929:48:12"
									},
									"returnParameters": {
										"id": 2761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7018:0:12"
									},
									"scope": 3064,
									"src": "6903:298:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2803,
										"nodeType": "Block",
										"src": "7271:71:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2796,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2788,
															"src": "7300:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2797,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2790,
															"src": "7306:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2793,
															"name": "masterChef",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2314,
															"src": "7281:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPancakeSwapMasterChef_$3123",
																"typeString": "contract IPancakeSwapMasterChef"
															}
														},
														"id": 2795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "deposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3082,
														"src": "7281:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256) external"
														}
													},
													"id": 2798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7281:33:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2799,
												"nodeType": "ExpressionStatement",
												"src": "7281:33:12"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2800,
														"name": "swapToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2871,
														"src": "7324:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7324:11:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2802,
												"nodeType": "ExpressionStatement",
												"src": "7324:11:12"
											}
										]
									},
									"id": 2804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "enterStake",
									"nameLocation": "7220:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2788,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "7239:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2804,
												"src": "7231:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7231:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2790,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7253:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2804,
												"src": "7245:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7245:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7230:31:12"
									},
									"returnParameters": {
										"id": 2792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7271:0:12"
									},
									"scope": 3064,
									"src": "7211:131:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2818,
										"nodeType": "Block",
										"src": "7412:51:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2814,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2806,
															"src": "7442:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2815,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2808,
															"src": "7448:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2811,
															"name": "masterChef",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2314,
															"src": "7422:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPancakeSwapMasterChef_$3123",
																"typeString": "contract IPancakeSwapMasterChef"
															}
														},
														"id": 2813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3089,
														"src": "7422:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256) external"
														}
													},
													"id": 2816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7422:34:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2817,
												"nodeType": "ExpressionStatement",
												"src": "7422:34:12"
											}
										]
									},
									"id": 2819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "leaveStake",
									"nameLocation": "7361:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2806,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "7380:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2819,
												"src": "7372:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7372:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2808,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7394:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2819,
												"src": "7386:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7386:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7371:31:12"
									},
									"returnParameters": {
										"id": 2810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7412:0:12"
									},
									"scope": 3064,
									"src": "7352:111:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2870,
										"nodeType": "Block",
										"src": "7508:405:12",
										"statements": [
											{
												"assignments": [
													2823
												],
												"declarations": [
													{
														"constant": false,
														"id": 2823,
														"mutability": "mutable",
														"name": "balanceToSwap",
														"nameLocation": "7526:13:12",
														"nodeType": "VariableDeclaration",
														"scope": 2870,
														"src": "7518:21:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2822,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7518:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2831,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2828,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7572:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BaseFlipPool_$3064",
																		"typeString": "contract BaseFlipPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BaseFlipPool_$3064",
																		"typeString": "contract BaseFlipPool"
																	}
																],
																"id": 2827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7564:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2826,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7564:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7564:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2824,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2317,
															"src": "7542:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$767",
																"typeString": "contract IERC20"
															}
														},
														"id": 2825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 706,
														"src": "7542:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7542:36:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7518:60:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2834,
																	"name": "router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2328,
																	"src": "7599:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2283",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2283",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 2833,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7591:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2832,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7591:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7591:15:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7618:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7610:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2836,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7610:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7610:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "7591:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2841,
															"name": "balanceToSwap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2823,
															"src": "7624:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7640:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7624:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7591:50:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2853,
															"name": "balanceToSwap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2823,
															"src": "7739:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 2854,
															"name": "minAmountToSwap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2333,
															"src": "7756:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7739:32:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2868,
													"nodeType": "IfStatement",
													"src": "7736:163:12",
													"trueBody": {
														"id": 2867,
														"nodeType": "Block",
														"src": "7773:126:12",
														"statements": [
															{
																"assignments": [
																	2857
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2857,
																		"mutability": "mutable",
																		"name": "ethBalance",
																		"nameLocation": "7795:10:12",
																		"nodeType": "VariableDeclaration",
																		"scope": 2867,
																		"src": "7787:18:12",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2856,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7787:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2862,
																"initialValue": {
																	"arguments": [
																		{
																			"id": 2859,
																			"name": "rewardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2317,
																			"src": "7819:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$767",
																				"typeString": "contract IERC20"
																			}
																		},
																		{
																			"id": 2860,
																			"name": "balanceToSwap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2823,
																			"src": "7832:13:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$767",
																				"typeString": "contract IERC20"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2858,
																		"name": "swapForEth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2904,
																		"src": "7808:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$767_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (contract IERC20,uint256) returns (uint256)"
																		}
																	},
																	"id": 2861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7808:38:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "7787:59:12"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 2864,
																			"name": "ethBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2857,
																			"src": "7877:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2863,
																		"name": "swapEthForTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3011,
																		"src": "7860:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																			"typeString": "function (uint256)"
																		}
																	},
																	"id": 2865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7860:28:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2866,
																"nodeType": "ExpressionStatement",
																"src": "7860:28:12"
															}
														]
													}
												},
												"id": 2869,
												"nodeType": "IfStatement",
												"src": "7588:311:12",
												"trueBody": {
													"id": 2852,
													"nodeType": "Block",
													"src": "7643:79:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2846,
																		"name": "rewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2317,
																		"src": "7675:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$767",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2847,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 32,
																			"src": "7688:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7688:7:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2849,
																		"name": "balanceToSwap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2823,
																		"src": "7697:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$767",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2845,
																	"name": "safeTokenTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3063,
																	"src": "7657:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$767_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7657:54:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2851,
															"nodeType": "ExpressionStatement",
															"src": "7657:54:12"
														}
													]
												}
											}
										]
									},
									"id": 2871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapToken",
									"nameLocation": "7487:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7496:2:12"
									},
									"returnParameters": {
										"id": 2821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7508:0:12"
									},
									"scope": 3064,
									"src": "7478:435:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2903,
										"nodeType": "Block",
										"src": "8000:219:12",
										"statements": [
											{
												"assignments": [
													2882
												],
												"declarations": [
													{
														"constant": false,
														"id": 2882,
														"mutability": "mutable",
														"name": "initialBalance",
														"nameLocation": "8018:14:12",
														"nodeType": "VariableDeclaration",
														"scope": 2903,
														"src": "8010:22:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2881,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8010:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2888,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 2885,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "8043:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_BaseFlipPool_$3064",
																	"typeString": "contract BaseFlipPool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_BaseFlipPool_$3064",
																	"typeString": "contract BaseFlipPool"
																}
															],
															"id": 2884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8035:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2883,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8035:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 2886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8035:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "8035:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8010:46:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2890,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2874,
															"src": "8131:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$767",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 2891,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2876,
															"src": "8138:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$767",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2889,
														"name": "swapTokensForEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2965,
														"src": "8114:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$767_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,uint256)"
														}
													},
													"id": 2892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8114:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2893,
												"nodeType": "ExpressionStatement",
												"src": "8114:31:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2900,
															"name": "initialBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2882,
															"src": "8197:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2896,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "8179:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_BaseFlipPool_$3064",
																			"typeString": "contract BaseFlipPool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_BaseFlipPool_$3064",
																			"typeString": "contract BaseFlipPool"
																		}
																	],
																	"id": 2895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8171:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2894,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8171:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8171:13:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "8171:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1524,
														"src": "8171:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8171:41:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2880,
												"id": 2902,
												"nodeType": "Return",
												"src": "8164:48:12"
											}
										]
									},
									"id": 2904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapForEth",
									"nameLocation": "7932:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2874,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7950:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2904,
												"src": "7943:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$767",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2873,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2872,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 767,
														"src": "7943:6:12"
													},
													"referencedDeclaration": 767,
													"src": "7943:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$767",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2876,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7965:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2904,
												"src": "7957:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7957:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7942:30:12"
									},
									"returnParameters": {
										"id": 2880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2904,
												"src": "7991:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7991:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7990:9:12"
									},
									"scope": 3064,
									"src": "7923:296:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2964,
										"nodeType": "Block",
										"src": "8299:480:12",
										"statements": [
											{
												"assignments": [
													2916
												],
												"declarations": [
													{
														"constant": false,
														"id": 2916,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "8383:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 2964,
														"src": "8366:21:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2914,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8366:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2915,
															"nodeType": "ArrayTypeName",
															"src": "8366:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2922,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 2920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8404:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 2919,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "8390:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2917,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8394:7:12",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2918,
															"nodeType": "ArrayTypeName",
															"src": "8394:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 2921,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8390:16:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8366:40:12"
											},
											{
												"expression": {
													"id": 2930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2923,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2916,
															"src": "8416:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2925,
														"indexExpression": {
															"hexValue": "30",
															"id": 2924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8421:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8416:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2928,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2907,
																"src": "8434:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$767",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$767",
																	"typeString": "contract IERC20"
																}
															],
															"id": 2927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8426:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2926,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8426:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 2929,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8426:14:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8416:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2931,
												"nodeType": "ExpressionStatement",
												"src": "8416:24:12"
											},
											{
												"expression": {
													"id": 2938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2932,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2916,
															"src": "8450:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2934,
														"indexExpression": {
															"hexValue": "31",
															"id": 2933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8455:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8450:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 2935,
																"name": "router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2328,
																"src": "8460:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$2283",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 2936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "WETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1899,
															"src": "8460:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																"typeString": "function () pure external returns (address)"
															}
														},
														"id": 2937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8460:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8450:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2939,
												"nodeType": "ExpressionStatement",
												"src": "8450:23:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2945,
																	"name": "router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2328,
																	"src": "8506:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2283",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2283",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 2944,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8498:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2943,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8498:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8498:15:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2947,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2909,
															"src": "8515:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2940,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2907,
															"src": "8484:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$767",
																"typeString": "contract IERC20"
															}
														},
														"id": 2942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 736,
														"src": "8484:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8484:43:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2949,
												"nodeType": "ExpressionStatement",
												"src": "8484:43:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2953,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2909,
															"src": "8634:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 2954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8659:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2955,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2916,
															"src": "8702:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 2958,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8728:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BaseFlipPool_$3064",
																		"typeString": "contract BaseFlipPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BaseFlipPool_$3064",
																		"typeString": "contract BaseFlipPool"
																	}
																],
																"id": 2957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8720:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2956,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8720:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8720:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2960,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "8747:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "8747:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2950,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2328,
															"src": "8563:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$2283",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"id": 2952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swapExactTokensForETHSupportingFeeOnTransferTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2282,
														"src": "8563:57:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
														}
													},
													"id": 2962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8563:209:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2963,
												"nodeType": "ExpressionStatement",
												"src": "8563:209:12"
											}
										]
									},
									"id": 2965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForEth",
									"nameLocation": "8238:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2907,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8262:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2965,
												"src": "8255:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$767",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2906,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2905,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 767,
														"src": "8255:6:12"
													},
													"referencedDeclaration": 767,
													"src": "8255:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$767",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2909,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "8277:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2965,
												"src": "8269:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8269:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8254:35:12"
									},
									"returnParameters": {
										"id": 2911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8299:0:12"
									},
									"scope": 3064,
									"src": "8229:550:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3010,
										"nodeType": "Block",
										"src": "8845:350:12",
										"statements": [
											{
												"assignments": [
													2974
												],
												"declarations": [
													{
														"constant": false,
														"id": 2974,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "8872:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 3010,
														"src": "8855:21:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2972,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8855:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2973,
															"nodeType": "ArrayTypeName",
															"src": "8855:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2980,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 2978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8893:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 2977,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "8879:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2975,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8883:7:12",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2976,
															"nodeType": "ArrayTypeName",
															"src": "8883:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 2979,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8879:16:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8855:40:12"
											},
											{
												"expression": {
													"id": 2987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2981,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2974,
															"src": "8905:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2983,
														"indexExpression": {
															"hexValue": "30",
															"id": 2982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8910:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8905:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 2984,
																"name": "router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2328,
																"src": "8915:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$2283",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 2985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "WETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1899,
															"src": "8915:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																"typeString": "function () pure external returns (address)"
															}
														},
														"id": 2986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8915:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8905:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2988,
												"nodeType": "ExpressionStatement",
												"src": "8905:23:12"
											},
											{
												"expression": {
													"id": 2996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2989,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2974,
															"src": "8938:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2991,
														"indexExpression": {
															"hexValue": "31",
															"id": 2990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8943:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8938:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2994,
																"name": "flipToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2323,
																"src": "8956:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$767",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$767",
																	"typeString": "contract IERC20"
																}
															],
															"id": 2993,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8948:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2992,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8948:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 2995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8948:18:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8938:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2997,
												"nodeType": "ExpressionStatement",
												"src": "8938:28:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 3003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9076:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 3004,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2974,
															"src": "9119:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"id": 3005,
															"name": "rewardSystem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2325,
															"src": "9137:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3006,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "9163:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "9163:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2998,
																"name": "router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2328,
																"src": "8985:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$2283",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 3000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "swapExactETHForTokensSupportingFeeOnTransferTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2268,
															"src": "8985:57:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function (uint256,address[] memory,address,uint256) payable external"
															}
														},
														"id": 3002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 3001,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2967,
																"src": "9050:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "8985:77:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$value",
															"typeString": "function (uint256,address[] memory,address,uint256) payable external"
														}
													},
													"id": 3008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8985:203:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3009,
												"nodeType": "ExpressionStatement",
												"src": "8985:203:12"
											}
										]
									},
									"id": 3011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapEthForTokens",
									"nameLocation": "8798:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2967,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "8823:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 3011,
												"src": "8815:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8815:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8814:21:12"
									},
									"returnParameters": {
										"id": 2969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8845:0:12"
									},
									"scope": 3064,
									"src": "8789:406:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3062,
										"nodeType": "Block",
										"src": "9285:377:12",
										"statements": [
											{
												"assignments": [
													3022
												],
												"declarations": [
													{
														"constant": false,
														"id": 3022,
														"mutability": "mutable",
														"name": "tokenBalance",
														"nameLocation": "9303:12:12",
														"nodeType": "VariableDeclaration",
														"scope": 3062,
														"src": "9295:20:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3021,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9295:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3030,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3027,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9342:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BaseFlipPool_$3064",
																		"typeString": "contract BaseFlipPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BaseFlipPool_$3064",
																		"typeString": "contract BaseFlipPool"
																	}
																],
																"id": 3026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9334:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3025,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9334:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9334:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3023,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3014,
															"src": "9318:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$767",
																"typeString": "contract IERC20"
															}
														},
														"id": 3024,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 706,
														"src": "9318:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 3029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9318:30:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9295:53:12"
											},
											{
												"assignments": [
													3032
												],
												"declarations": [
													{
														"constant": false,
														"id": 3032,
														"mutability": "mutable",
														"name": "transferSuccess",
														"nameLocation": "9363:15:12",
														"nodeType": "VariableDeclaration",
														"scope": 3062,
														"src": "9358:20:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3031,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9358:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3034,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 3033,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9381:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9358:28:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3035,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3018,
														"src": "9400:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 3036,
														"name": "tokenBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3022,
														"src": "9410:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9400:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3055,
													"nodeType": "Block",
													"src": "9506:71:12",
													"statements": [
														{
															"expression": {
																"id": 3053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3047,
																	"name": "transferSuccess",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3032,
																	"src": "9520:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 3050,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3016,
																			"src": "9553:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 3051,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3018,
																			"src": "9558:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 3048,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3014,
																			"src": "9538:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$767",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 3049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 716,
																		"src": "9538:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 3052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9538:28:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9520:46:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3054,
															"nodeType": "ExpressionStatement",
															"src": "9520:46:12"
														}
													]
												},
												"id": 3056,
												"nodeType": "IfStatement",
												"src": "9396:181:12",
												"trueBody": {
													"id": 3046,
													"nodeType": "Block",
													"src": "9424:76:12",
													"statements": [
														{
															"expression": {
																"id": 3044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3038,
																	"name": "transferSuccess",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3032,
																	"src": "9438:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 3041,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3016,
																			"src": "9471:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 3042,
																			"name": "tokenBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3022,
																			"src": "9476:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 3039,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3014,
																			"src": "9456:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$767",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 3040,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 716,
																		"src": "9456:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 3043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9456:33:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9438:51:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3045,
															"nodeType": "ExpressionStatement",
															"src": "9438:51:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3058,
															"name": "transferSuccess",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3032,
															"src": "9594:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a73616665546f6b656e5472616e736665723a207472616e73666572206661696c6564",
															"id": 3059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9611:43:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_66684ac81254500ff8f8680c7efdc6b9f9d87b6b36566528fe4eb381df689dbc",
																"typeString": "literal_string \"ABOAT::safeTokenTransfer: transfer failed\""
															},
															"value": "ABOAT::safeTokenTransfer: transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_66684ac81254500ff8f8680c7efdc6b9f9d87b6b36566528fe4eb381df689dbc",
																"typeString": "literal_string \"ABOAT::safeTokenTransfer: transfer failed\""
															}
														],
														"id": 3057,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9586:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9586:69:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3061,
												"nodeType": "ExpressionStatement",
												"src": "9586:69:12"
											}
										]
									},
									"id": 3063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTokenTransfer",
									"nameLocation": "9214:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3014,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9239:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3063,
												"src": "9232:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$767",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 3013,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3012,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 767,
														"src": "9232:6:12"
													},
													"referencedDeclaration": 767,
													"src": "9232:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$767",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3016,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "9254:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3063,
												"src": "9246:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9246:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3018,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "9267:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 3063,
												"src": "9259:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9259:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9231:44:12"
									},
									"returnParameters": {
										"id": 3020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9285:0:12"
									},
									"scope": 3064,
									"src": "9205:457:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3065,
							"src": "754:8915:12",
							"usedErrors": []
						}
					],
					"src": "37:9632:12"
				},
				"id": 12
			},
			"contracts/flip_interfaces/IPancakeSwapMasterChef.sol": {
				"ast": {
					"absolutePath": "contracts/flip_interfaces/IPancakeSwapMasterChef.sol",
					"exportedSymbols": {
						"IPancakeSwapMasterChef": [
							3123
						]
					},
					"id": 3124,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3066,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "37:22:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3123,
							"linearizedBaseContracts": [
								3123
							],
							"name": "IPancakeSwapMasterChef",
							"nameLocation": "71:22:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "1175a1dd",
									"id": 3075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingCake",
									"nameLocation": "109:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3068,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "129:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 3075,
												"src": "121:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "121:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3070,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "143:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3075,
												"src": "135:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "135:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "120:29:13"
									},
									"returnParameters": {
										"id": 3074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3075,
												"src": "173:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "173:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "172:9:13"
									},
									"scope": 3123,
									"src": "100:82:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e2bbb158",
									"id": 3082,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "196:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3077,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "212:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 3082,
												"src": "204:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3079,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "226:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3082,
												"src": "218:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "218:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:31:13"
									},
									"returnParameters": {
										"id": 3081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:0:13"
									},
									"scope": 3123,
									"src": "187:57:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "441a3e70",
									"id": 3089,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "258:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3084,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "275:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 3089,
												"src": "267:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "267:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3086,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "289:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3089,
												"src": "281:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "281:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "266:31:13"
									},
									"returnParameters": {
										"id": 3088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "306:0:13"
									},
									"scope": 3123,
									"src": "249:58:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "41441d3b",
									"id": 3094,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "enterStaking",
									"nameLocation": "321:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3091,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "342:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "334:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:17:13"
									},
									"returnParameters": {
										"id": 3093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "359:0:13"
									},
									"scope": 3123,
									"src": "312:48:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1058d281",
									"id": 3099,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "leaveStaking",
									"nameLocation": "374:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3096,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "395:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3099,
												"src": "387:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "386:17:13"
									},
									"returnParameters": {
										"id": 3098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:0:13"
									},
									"scope": 3123,
									"src": "365:48:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a8b39eee",
									"id": 3104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawWithoutRewards",
									"nameLocation": "427:22:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3101,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "458:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 3104,
												"src": "450:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:14:13"
									},
									"returnParameters": {
										"id": 3103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:13"
									},
									"scope": 3123,
									"src": "418:55:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "93f1a40b",
									"id": 3115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "userInfo",
									"nameLocation": "487:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3106,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "504:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 3115,
												"src": "496:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "496:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3108,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "518:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3115,
												"src": "510:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:29:13"
									},
									"returnParameters": {
										"id": 3114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3115,
												"src": "548:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "548:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3115,
												"src": "557:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "547:18:13"
									},
									"scope": 3123,
									"src": "478:88:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1526fe27",
									"id": 3122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "poolInfo",
									"nameLocation": "580:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3117,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "597:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "589:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "588:14:13"
									},
									"returnParameters": {
										"id": 3121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "626:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "625:9:13"
									},
									"scope": 3123,
									"src": "571:64:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3124,
							"src": "61:576:13",
							"usedErrors": []
						}
					],
					"src": "37:600:13"
				},
				"id": 13
			},
			"contracts/interfaces/IMasterChefContractor.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IMasterChefContractor.sol",
					"exportedSymbols": {
						"IERC20": [
							767
						],
						"IMasterChefContractor": [
							3171
						]
					},
					"id": 3172,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3125,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "36:22:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 3126,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3172,
							"sourceUnit": 768,
							"src": "60:56:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3171,
							"linearizedBaseContracts": [
								3171
							],
							"name": "IMasterChefContractor",
							"nameLocation": "128:21:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "b5644963",
									"id": 3131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMasterChef",
									"nameLocation": "165:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "178:2:14"
									},
									"returnParameters": {
										"id": 3130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3131,
												"src": "204:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:9:14"
									},
									"scope": 3171,
									"src": "156:57:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9fbe42e3",
									"id": 3138,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDepositFee",
									"nameLocation": "227:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3133,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "249:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "241:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "241:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "240:14:14"
									},
									"returnParameters": {
										"id": 3137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "278:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "278:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "277:9:14"
									},
									"scope": 3171,
									"src": "218:69:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "951583c3",
									"id": 3145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLiquidity",
									"nameLocation": "301:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3140,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "322:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 3145,
												"src": "314:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "314:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "313:14:14"
									},
									"returnParameters": {
										"id": 3144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3145,
												"src": "351:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "351:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "350:9:14"
									},
									"scope": 3171,
									"src": "292:68:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e2bbb158",
									"id": 3152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "374:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3147,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "390:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 3152,
												"src": "382:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "382:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3149,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "404:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3152,
												"src": "396:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "381:31:14"
									},
									"returnParameters": {
										"id": 3151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "421:0:14"
									},
									"scope": 3171,
									"src": "365:57:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0ad58d2f",
									"id": 3161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "436:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3154,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "453:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 3161,
												"src": "445:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3156,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "467:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3161,
												"src": "459:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3158,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "484:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3161,
												"src": "476:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "476:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "444:47:14"
									},
									"returnParameters": {
										"id": 3160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "500:0:14"
									},
									"scope": 3171,
									"src": "427:74:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f72b2a4c",
									"id": 3170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nameLocation": "515:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3163,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "541:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 3170,
												"src": "533:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3165,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "555:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3170,
												"src": "547:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3167,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "572:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3170,
												"src": "564:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "564:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:48:14"
									},
									"returnParameters": {
										"id": 3169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "589:0:14"
									},
									"scope": 3171,
									"src": "506:84:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3172,
							"src": "118:474:14",
							"usedErrors": []
						}
					],
					"src": "36:556:14"
				},
				"id": 14
			},
			"contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"TransferHelper": [
							3288
						]
					},
					"id": 3289,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3173,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "46:22:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 3288,
							"linearizedBaseContracts": [
								3288
							],
							"name": "TransferHelper",
							"nameLocation": "189:14:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3215,
										"nodeType": "Block",
										"src": "313:281:15",
										"statements": [
											{
												"assignments": [
													3183,
													3185
												],
												"declarations": [
													{
														"constant": false,
														"id": 3183,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "329:7:15",
														"nodeType": "VariableDeclaration",
														"scope": 3215,
														"src": "324:12:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3182,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "324:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3185,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "351:4:15",
														"nodeType": "VariableDeclaration",
														"scope": 3215,
														"src": "338:17:15",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3184,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "338:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3195,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30786139303539636262",
																	"id": 3190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "405:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	"value": "0xa9059cbb"
																},
																{
																	"id": 3191,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3177,
																	"src": "417:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3192,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3179,
																	"src": "421:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3188,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "382:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3189,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "382:22:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 3193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "382:45:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 3186,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3175,
															"src": "371:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 3187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "371:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 3194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "371:57:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "323:105:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3197,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "459:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 3198,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3185,
																					"src": "471:4:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 3199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "471:11:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 3200,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "486:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "471:16:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 3204,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3185,
																					"src": "502:4:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 3206,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "509:4:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 3205,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "509:4:15",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 3207,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "508:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 3202,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "491:3:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 3203,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "491:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 3208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "491:24:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "471:44:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3210,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "470:46:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "459:57:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564",
															"id": 3212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "530:47:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611",
																"typeString": "literal_string \"TransferHelper::safeTransfer: transfer failed\""
															},
															"value": "TransferHelper::safeTransfer: transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611",
																"typeString": "literal_string \"TransferHelper::safeTransfer: transfer failed\""
															}
														],
														"id": 3196,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "438:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "438:149:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3214,
												"nodeType": "ExpressionStatement",
												"src": "438:149:15"
											}
										]
									},
									"id": 3216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "219:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3175,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "249:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3216,
												"src": "241:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "241:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3177,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "272:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 3216,
												"src": "264:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3179,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "292:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3216,
												"src": "284:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "284:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "231:72:15"
									},
									"returnParameters": {
										"id": 3181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "313:0:15"
									},
									"scope": 3288,
									"src": "210:384:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3261,
										"nodeType": "Block",
										"src": "729:291:15",
										"statements": [
											{
												"assignments": [
													3228,
													3230
												],
												"declarations": [
													{
														"constant": false,
														"id": 3228,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "745:7:15",
														"nodeType": "VariableDeclaration",
														"scope": 3261,
														"src": "740:12:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3227,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "740:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3230,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "767:4:15",
														"nodeType": "VariableDeclaration",
														"scope": 3261,
														"src": "754:17:15",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3229,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "754:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3241,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 3235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "821:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 3236,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3220,
																	"src": "833:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3237,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3222,
																	"src": "839:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3238,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "843:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3233,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "798:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "798:22:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 3239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "798:51:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 3231,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3218,
															"src": "787:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 3232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "787:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 3240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "787:63:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "739:111:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3243,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3228,
																"src": "881:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 3244,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3230,
																					"src": "893:4:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 3245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "893:11:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 3246,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "908:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "893:16:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 3250,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3230,
																					"src": "924:4:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 3252,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "931:4:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 3251,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "931:4:15",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 3253,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "930:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 3248,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "913:3:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 3249,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "913:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 3254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "913:24:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "893:44:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3256,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "892:46:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "881:57:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c6564",
															"id": 3258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "952:51:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
																"typeString": "literal_string \"TransferHelper::transferFrom: transferFrom failed\""
															},
															"value": "TransferHelper::transferFrom: transferFrom failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
																"typeString": "literal_string \"TransferHelper::transferFrom: transferFrom failed\""
															}
														],
														"id": 3242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "860:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "860:153:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3260,
												"nodeType": "ExpressionStatement",
												"src": "860:153:15"
											}
										]
									},
									"id": 3262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "609:16:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3218,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "643:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3262,
												"src": "635:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3220,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "666:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3262,
												"src": "658:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3222,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "688:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 3262,
												"src": "680:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3224,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "708:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3262,
												"src": "700:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "625:94:15"
									},
									"returnParameters": {
										"id": 3226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "729:0:15"
									},
									"scope": 3288,
									"src": "600:420:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3286,
										"nodeType": "Block",
										"src": "1087:187:15",
										"statements": [
											{
												"assignments": [
													3270,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 3270,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1103:7:15",
														"nodeType": "VariableDeclaration",
														"scope": 3286,
														"src": "1098:12:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3269,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1098:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 3280,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "1138:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 3275,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1142:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 3278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1138:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 3271,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3264,
																"src": "1116:2:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1116:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 3274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 3273,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3266,
																"src": "1131:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1116:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 3279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1116:35:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1097:54:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3282,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3270,
															"src": "1182:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665724554483a20455448207472616e73666572206661696c6564",
															"id": 3283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1203:54:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350",
																"typeString": "literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""
															},
															"value": "TransferHelper::safeTransferETH: ETH transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350",
																"typeString": "literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""
															}
														],
														"id": 3281,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1161:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1161:106:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3285,
												"nodeType": "ExpressionStatement",
												"src": "1161:106:15"
											}
										]
									},
									"id": 3287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "1035:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3264,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1059:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 3287,
												"src": "1051:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3266,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1071:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3287,
												"src": "1063:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1050:27:15"
									},
									"returnParameters": {
										"id": 3268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1087:0:15"
									},
									"scope": 3288,
									"src": "1026:248:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3289,
							"src": "181:1095:15",
							"usedErrors": []
						}
					],
					"src": "46:1231:15"
				},
				"id": 15
			}
		}
	}
}