{
	"id": "59e6c1163e9e7d1473c20baef9c45fd5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BalanceHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity 0.8.7;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"./interfaces/IMasterEntertainer.sol\";\r\n\r\ncontract BalanceHelper {\r\n    using Address for address;\r\n    using SafeMath for uint256;\r\n\r\n    IERC20 _token;\r\n    IMasterEntertainer _masterEntertainer;\r\n\r\n    struct Stake {\r\n        uint32 VestingDays;\r\n        uint256 TokenBalance;\r\n    }\r\n\r\n    \r\n    constructor(IERC20 token, IMasterEntertainer masterEntertainer) {\r\n        _token = token;\r\n        _masterEntertainer = masterEntertainer;\r\n    }\r\n\r\n    function getTokenBalanceOf(address[] memory userAddresses) public view returns(uint256) {\r\n        uint256 tokenBalance = 0;\r\n        for (uint i = 0; i < userAddresses.length; i++) \r\n        {\r\n            tokenBalance = tokenBalance.add(_token.balanceOf(userAddresses[i]));\r\n        }\r\n        return tokenBalance;\r\n    }\r\n\r\n    function GetStakedBalance(uint32[] memory vestingDays, address[] memory userAddresses) public view returns(Stake[] memory) {\r\n        Stake[] memory stakes = new Stake[](vestingDays.length);\r\n        for (uint i = 0; i < vestingDays.length; i++) \r\n        {\r\n            stakes[i].VestingDays = vestingDays[i];\r\n            stakes[i].TokenBalance = 0;\r\n        }\r\n        for (uint i = 0; i < userAddresses.length; i++) \r\n        {\r\n            for (uint z = 0; z < vestingDays.length; z++) \r\n            {\r\n                stakes[z].TokenBalance = stakes[z].TokenBalance.add(_masterEntertainer.getBalanceOf(userAddresses[i], vestingDays[z]));\r\n            }\r\n        }\r\n        return stakes;\r\n    }\r\n    \r\n\r\n}"
			},
			"contracts/interfaces/IMasterEntertainer.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.7;\n\ninterface IMasterEntertainer {\n    function updatePrice() external; \n    function getBalanceOf(address _user, uint256 _vesting) external view returns (uint256);\n    function depositForUser(uint256 _pid, uint256 _amount, address _user) external;\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _setOwner(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _setOwner(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _setOwner(newOwner);\n    }\n\n    function _setOwner(address newOwner) private {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) private pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":126:7644  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":126:7644  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201ff9cb264245318e9b05ff061165b15ecdf2494194cca0974b49b09fcd82b25464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ff9cb264245318e9b05ff061165b15ecdf2494194cca0974b49b09fcd82b25464736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xF9 0xCB 0x26 TIMESTAMP GASLIMIT BALANCE DUP15 SWAP12 SDIV SELFDESTRUCT MOD GT PUSH6 0xB15ECDF24941 SWAP5 0xCC LOG0 SWAP8 0x4B 0x49 0xB0 SWAP16 0xCD DUP3 0xB2 SLOAD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "126:7518:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ff9cb264245318e9b05ff061165b15ecdf2494194cca0974b49b09fcd82b25464736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xF9 0xCB 0x26 TIMESTAMP GASLIMIT BALANCE DUP15 SWAP12 SDIV SELFDESTRUCT MOD GT PUSH6 0xB15ECDF24941 SWAP5 0xCC LOG0 SWAP8 0x4B 0x49 0xB0 SWAP16 0xCD DUP3 0xB2 SLOAD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "126:7518:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201ff9cb264245318e9b05ff061165b15ecdf2494194cca0974b49b09fcd82b25464736f6c63430008070033",
									".code": [
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":398:6699  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":398:6699  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fb39f214e649fa34e1f9a153a77a055e38ab95b2663b7bd2c96a001666763c0164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb39f214e649fa34e1f9a153a77a055e38ab95b2663b7bd2c96a001666763c0164736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB CODECOPY CALLCODE EQ 0xE6 0x49 STATICCALL CALLVALUE 0xE1 0xF9 LOG1 MSTORE8 0xA7 PUSH27 0x55E38AB95B2663B7BD2C96A001666763C0164736F6C6343000807 STOP CALLER ",
							"sourceMap": "398:6301:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb39f214e649fa34e1f9a153a77a055e38ab95b2663b7bd2c96a001666763c0164736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB CODECOPY CALLCODE EQ 0xE6 0x49 STATICCALL CALLVALUE 0xE1 0xF9 LOG1 MSTORE8 0xA7 PUSH27 0x55E38AB95B2663B7BD2C96A001666763C0164736F6C6343000807 STOP CALLER ",
							"sourceMap": "398:6301:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fb39f214e649fa34e1f9a153a77a055e38ab95b2663b7bd2c96a001666763c0164736f6c63430008070033",
									".code": [
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BalanceHelper.sol": {
				"BalanceHelper": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "contract IMasterEntertainer",
									"name": "masterEntertainer",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "vestingDays",
									"type": "uint32[]"
								},
								{
									"internalType": "address[]",
									"name": "userAddresses",
									"type": "address[]"
								}
							],
							"name": "GetStakedBalance",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "VestingDays",
											"type": "uint32"
										},
										{
											"internalType": "uint256",
											"name": "TokenBalance",
											"type": "uint256"
										}
									],
									"internalType": "struct BalanceHelper.Stake[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "userAddresses",
									"type": "address[]"
								}
							],
							"name": "getTokenBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BalanceHelper.sol\":336:1790  contract BalanceHelper {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BalanceHelper.sol\":594:740  constructor(IERC20 token, IMasterEntertainer masterEntertainer) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/BalanceHelper.sol\":678:683  token */\n  dup2\n    /* \"contracts/BalanceHelper.sol\":669:675  _token */\n  0x00\n  dup1\n    /* \"contracts/BalanceHelper.sol\":669:683  _token = token */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BalanceHelper.sol\":715:732  masterEntertainer */\n  dup1\n    /* \"contracts/BalanceHelper.sol\":694:712  _masterEntertainer */\n  0x01\n  0x00\n    /* \"contracts/BalanceHelper.sol\":694:732  _masterEntertainer = masterEntertainer */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BalanceHelper.sol\":594:740  constructor(IERC20 token, IMasterEntertainer masterEntertainer) {\r... */\n  pop\n  pop\n    /* \"contracts/BalanceHelper.sol\":336:1790  contract BalanceHelper {\r... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:178   */\ntag_8:\n    /* \"#utility.yul\":78:83   */\n  0x00\n    /* \"#utility.yul\":109:115   */\n  dup2\n    /* \"#utility.yul\":103:116   */\n  mload\n    /* \"#utility.yul\":94:116   */\n  swap1\n  pop\n    /* \"#utility.yul\":125:172   */\n  tag_10\n    /* \"#utility.yul\":166:171   */\n  dup2\n    /* \"#utility.yul\":125:172   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:178   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":184:381   */\ntag_12:\n    /* \"#utility.yul\":268:273   */\n  0x00\n    /* \"#utility.yul\":299:305   */\n  dup2\n    /* \"#utility.yul\":293:306   */\n  mload\n    /* \"#utility.yul\":284:306   */\n  swap1\n  pop\n    /* \"#utility.yul\":315:375   */\n  tag_14\n    /* \"#utility.yul\":369:374   */\n  dup2\n    /* \"#utility.yul\":315:375   */\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":184:381   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":387:976   */\ntag_3:\n    /* \"#utility.yul\":507:513   */\n  0x00\n    /* \"#utility.yul\":515:521   */\n  dup1\n    /* \"#utility.yul\":564:566   */\n  0x40\n    /* \"#utility.yul\":552:561   */\n  dup4\n    /* \"#utility.yul\":543:550   */\n  dup6\n    /* \"#utility.yul\":539:562   */\n  sub\n    /* \"#utility.yul\":535:567   */\n  slt\n    /* \"#utility.yul\":532:651   */\n  iszero\n  tag_17\n  jumpi\n    /* \"#utility.yul\":570:649   */\n  tag_18\n  tag_19\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":532:651   */\ntag_17:\n    /* \"#utility.yul\":690:691   */\n  0x00\n    /* \"#utility.yul\":715:793   */\n  tag_20\n    /* \"#utility.yul\":785:792   */\n  dup6\n    /* \"#utility.yul\":776:782   */\n  dup3\n    /* \"#utility.yul\":765:774   */\n  dup7\n    /* \"#utility.yul\":761:783   */\n  add\n    /* \"#utility.yul\":715:793   */\n  tag_8\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":705:793   */\n  swap3\n  pop\n    /* \"#utility.yul\":661:803   */\n  pop\n    /* \"#utility.yul\":842:844   */\n  0x20\n    /* \"#utility.yul\":868:959   */\n  tag_21\n    /* \"#utility.yul\":951:958   */\n  dup6\n    /* \"#utility.yul\":942:948   */\n  dup3\n    /* \"#utility.yul\":931:940   */\n  dup7\n    /* \"#utility.yul\":927:949   */\n  add\n    /* \"#utility.yul\":868:959   */\n  tag_12\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":858:959   */\n  swap2\n  pop\n    /* \"#utility.yul\":813:969   */\n  pop\n    /* \"#utility.yul\":387:976   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1063:1159   */\ntag_24:\n    /* \"#utility.yul\":1100:1107   */\n  0x00\n    /* \"#utility.yul\":1129:1153   */\n  tag_26\n    /* \"#utility.yul\":1147:1152   */\n  dup3\n    /* \"#utility.yul\":1129:1153   */\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":1118:1153   */\n  swap1\n  pop\n    /* \"#utility.yul\":1063:1159   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1165:1275   */\ntag_28:\n    /* \"#utility.yul\":1216:1223   */\n  0x00\n    /* \"#utility.yul\":1245:1269   */\n  tag_30\n    /* \"#utility.yul\":1263:1268   */\n  dup3\n    /* \"#utility.yul\":1245:1269   */\n  tag_24\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1234:1269   */\n  swap1\n  pop\n    /* \"#utility.yul\":1165:1275   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1281:1404   */\ntag_31:\n    /* \"#utility.yul\":1345:1352   */\n  0x00\n    /* \"#utility.yul\":1374:1398   */\n  tag_33\n    /* \"#utility.yul\":1392:1397   */\n  dup3\n    /* \"#utility.yul\":1374:1398   */\n  tag_24\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1363:1398   */\n  swap1\n  pop\n    /* \"#utility.yul\":1281:1404   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1410:1536   */\ntag_27:\n    /* \"#utility.yul\":1447:1454   */\n  0x00\n    /* \"#utility.yul\":1487:1529   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1480:1485   */\n  dup3\n    /* \"#utility.yul\":1476:1530   */\n  and\n    /* \"#utility.yul\":1465:1530   */\n  swap1\n  pop\n    /* \"#utility.yul\":1410:1536   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1665:1782   */\ntag_19:\n    /* \"#utility.yul\":1774:1775   */\n  0x00\n    /* \"#utility.yul\":1771:1772   */\n  dup1\n    /* \"#utility.yul\":1764:1776   */\n  revert\n    /* \"#utility.yul\":1788:1938   */\ntag_11:\n    /* \"#utility.yul\":1875:1913   */\n  tag_39\n    /* \"#utility.yul\":1907:1912   */\n  dup2\n    /* \"#utility.yul\":1875:1913   */\n  tag_28\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1868:1873   */\n  dup2\n    /* \"#utility.yul\":1865:1914   */\n  eq\n    /* \"#utility.yul\":1855:1932   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1928:1929   */\n  0x00\n    /* \"#utility.yul\":1925:1926   */\n  dup1\n    /* \"#utility.yul\":1918:1930   */\n  revert\n    /* \"#utility.yul\":1855:1932   */\ntag_40:\n    /* \"#utility.yul\":1788:1938   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1944:2120   */\ntag_15:\n    /* \"#utility.yul\":2044:2095   */\n  tag_42\n    /* \"#utility.yul\":2089:2094   */\n  dup2\n    /* \"#utility.yul\":2044:2095   */\n  tag_31\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":2037:2042   */\n  dup2\n    /* \"#utility.yul\":2034:2096   */\n  eq\n    /* \"#utility.yul\":2024:2114   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2110:2111   */\n  0x00\n    /* \"#utility.yul\":2107:2108   */\n  dup1\n    /* \"#utility.yul\":2100:2112   */\n  revert\n    /* \"#utility.yul\":2024:2114   */\ntag_43:\n    /* \"#utility.yul\":1944:2120   */\n  pop\n  jump\t// out\n    /* \"contracts/BalanceHelper.sol\":336:1790  contract BalanceHelper {\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BalanceHelper.sol\":336:1790  contract BalanceHelper {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0a5f75b6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x77969091\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BalanceHelper.sol\":748:1071  function getTokenBalanceOf(address[] memory userAddresses) public view returns(uint256) {\r... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BalanceHelper.sol\":1079:1779  function GetStakedBalance(uint32[] memory vestingDays, address[] memory userAddresses) public view returns(Stake[] memory) {\r... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BalanceHelper.sol\":748:1071  function getTokenBalanceOf(address[] memory userAddresses) public view returns(uint256) {\r... */\n    tag_8:\n        /* \"contracts/BalanceHelper.sol\":827:834  uint256 */\n      0x00\n        /* \"contracts/BalanceHelper.sol\":847:867  uint256 tokenBalance */\n      dup1\n        /* \"contracts/BalanceHelper.sol\":870:871  0 */\n      0x00\n        /* \"contracts/BalanceHelper.sol\":847:871  uint256 tokenBalance = 0 */\n      swap1\n      pop\n        /* \"contracts/BalanceHelper.sol\":887:893  uint i */\n      0x00\n        /* \"contracts/BalanceHelper.sol\":882:1034  for (uint i = 0; i < userAddresses.length; i++) \r... */\n    tag_18:\n        /* \"contracts/BalanceHelper.sol\":903:916  userAddresses */\n      dup4\n        /* \"contracts/BalanceHelper.sol\":903:923  userAddresses.length */\n      mload\n        /* \"contracts/BalanceHelper.sol\":899:900  i */\n      dup2\n        /* \"contracts/BalanceHelper.sol\":899:923  i < userAddresses.length */\n      lt\n        /* \"contracts/BalanceHelper.sol\":882:1034  for (uint i = 0; i < userAddresses.length; i++) \r... */\n      iszero\n      tag_19\n      jumpi\n        /* \"contracts/BalanceHelper.sol\":970:1022  tokenBalance.add(_token.balanceOf(userAddresses[i])) */\n      tag_21\n        /* \"contracts/BalanceHelper.sol\":987:993  _token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BalanceHelper.sol\":987:1003  _token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/BalanceHelper.sol\":1004:1017  userAddresses */\n      dup7\n        /* \"contracts/BalanceHelper.sol\":1018:1019  i */\n      dup5\n        /* \"contracts/BalanceHelper.sol\":1004:1020  userAddresses[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_22\n      jumpi\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n    tag_22:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/BalanceHelper.sol\":987:1021  _token.balanceOf(userAddresses[i]) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_29\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_29:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"contracts/BalanceHelper.sol\":970:982  tokenBalance */\n      dup4\n        /* \"contracts/BalanceHelper.sol\":970:986  tokenBalance.add */\n      tag_32\n      swap1\n        /* \"contracts/BalanceHelper.sol\":970:1022  tokenBalance.add(_token.balanceOf(userAddresses[i])) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_21:\n        /* \"contracts/BalanceHelper.sol\":955:1022  tokenBalance = tokenBalance.add(_token.balanceOf(userAddresses[i])) */\n      swap2\n      pop\n        /* \"contracts/BalanceHelper.sol\":925:928  i++ */\n      dup1\n      dup1\n      tag_33\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      swap2\n      pop\n      pop\n        /* \"contracts/BalanceHelper.sol\":882:1034  for (uint i = 0; i < userAddresses.length; i++) \r... */\n      jump(tag_18)\n    tag_19:\n      pop\n        /* \"contracts/BalanceHelper.sol\":1051:1063  tokenBalance */\n      dup1\n        /* \"contracts/BalanceHelper.sol\":1044:1063  return tokenBalance */\n      swap2\n      pop\n      pop\n        /* \"contracts/BalanceHelper.sol\":748:1071  function getTokenBalanceOf(address[] memory userAddresses) public view returns(uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BalanceHelper.sol\":1079:1779  function GetStakedBalance(uint32[] memory vestingDays, address[] memory userAddresses) public view returns(Stake[] memory) {\r... */\n    tag_14:\n        /* \"contracts/BalanceHelper.sol\":1186:1200  Stake[] memory */\n      0x60\n        /* \"contracts/BalanceHelper.sol\":1213:1234  Stake[] memory stakes */\n      0x00\n        /* \"contracts/BalanceHelper.sol\":1249:1260  vestingDays */\n      dup4\n        /* \"contracts/BalanceHelper.sol\":1249:1267  vestingDays.length */\n      mload\n        /* \"contracts/BalanceHelper.sol\":1237:1268  new Stake[](vestingDays.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_36\n      jumpi\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n    tag_36:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_39\n      jumpi\n      dup2\n      0x20\n      add\n    tag_40:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_40\n      jumpi\n      swap1\n      pop\n    tag_39:\n      pop\n        /* \"contracts/BalanceHelper.sol\":1213:1268  Stake[] memory stakes = new Stake[](vestingDays.length) */\n      swap1\n      pop\n        /* \"contracts/BalanceHelper.sol\":1284:1290  uint i */\n      0x00\n        /* \"contracts/BalanceHelper.sol\":1279:1441  for (uint i = 0; i < vestingDays.length; i++) \r... */\n    tag_43:\n        /* \"contracts/BalanceHelper.sol\":1300:1311  vestingDays */\n      dup5\n        /* \"contracts/BalanceHelper.sol\":1300:1318  vestingDays.length */\n      mload\n        /* \"contracts/BalanceHelper.sol\":1296:1297  i */\n      dup2\n        /* \"contracts/BalanceHelper.sol\":1296:1318  i < vestingDays.length */\n      lt\n        /* \"contracts/BalanceHelper.sol\":1279:1441  for (uint i = 0; i < vestingDays.length; i++) \r... */\n      iszero\n      tag_44\n      jumpi\n        /* \"contracts/BalanceHelper.sol\":1374:1385  vestingDays */\n      dup5\n        /* \"contracts/BalanceHelper.sol\":1386:1387  i */\n      dup2\n        /* \"contracts/BalanceHelper.sol\":1374:1388  vestingDays[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_46\n      jumpi\n      tag_47\n      tag_24\n      jump\t// in\n    tag_47:\n    tag_46:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/BalanceHelper.sol\":1350:1356  stakes */\n      dup3\n        /* \"contracts/BalanceHelper.sol\":1357:1358  i */\n      dup3\n        /* \"contracts/BalanceHelper.sol\":1350:1359  stakes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_48\n      jumpi\n      tag_49\n      tag_24\n      jump\t// in\n    tag_49:\n    tag_48:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/BalanceHelper.sol\":1350:1371  stakes[i].VestingDays */\n      0x00\n      add\n        /* \"contracts/BalanceHelper.sol\":1350:1388  stakes[i].VestingDays = vestingDays[i] */\n      swap1\n      0xffffffff\n      and\n      swap1\n      dup2\n      0xffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/BalanceHelper.sol\":1428:1429  0 */\n      0x00\n        /* \"contracts/BalanceHelper.sol\":1403:1409  stakes */\n      dup3\n        /* \"contracts/BalanceHelper.sol\":1410:1411  i */\n      dup3\n        /* \"contracts/BalanceHelper.sol\":1403:1412  stakes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_50\n      jumpi\n      tag_51\n      tag_24\n      jump\t// in\n    tag_51:\n    tag_50:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/BalanceHelper.sol\":1403:1425  stakes[i].TokenBalance */\n      0x20\n      add\n        /* \"contracts/BalanceHelper.sol\":1403:1429  stakes[i].TokenBalance = 0 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/BalanceHelper.sol\":1320:1323  i++ */\n      dup1\n      dup1\n      tag_52\n      swap1\n      tag_34\n      jump\t// in\n    tag_52:\n      swap2\n      pop\n      pop\n        /* \"contracts/BalanceHelper.sol\":1279:1441  for (uint i = 0; i < vestingDays.length; i++) \r... */\n      jump(tag_43)\n    tag_44:\n      pop\n        /* \"contracts/BalanceHelper.sol\":1456:1462  uint i */\n      0x00\n        /* \"contracts/BalanceHelper.sol\":1451:1748  for (uint i = 0; i < userAddresses.length; i++) \r... */\n    tag_53:\n        /* \"contracts/BalanceHelper.sol\":1472:1485  userAddresses */\n      dup4\n        /* \"contracts/BalanceHelper.sol\":1472:1492  userAddresses.length */\n      mload\n        /* \"contracts/BalanceHelper.sol\":1468:1469  i */\n      dup2\n        /* \"contracts/BalanceHelper.sol\":1468:1492  i < userAddresses.length */\n      lt\n        /* \"contracts/BalanceHelper.sol\":1451:1748  for (uint i = 0; i < userAddresses.length; i++) \r... */\n      iszero\n      tag_54\n      jumpi\n        /* \"contracts/BalanceHelper.sol\":1529:1535  uint z */\n      0x00\n        /* \"contracts/BalanceHelper.sol\":1524:1737  for (uint z = 0; z < vestingDays.length; z++) \r... */\n    tag_56:\n        /* \"contracts/BalanceHelper.sol\":1545:1556  vestingDays */\n      dup6\n        /* \"contracts/BalanceHelper.sol\":1545:1563  vestingDays.length */\n      mload\n        /* \"contracts/BalanceHelper.sol\":1541:1542  z */\n      dup2\n        /* \"contracts/BalanceHelper.sol\":1541:1563  z < vestingDays.length */\n      lt\n        /* \"contracts/BalanceHelper.sol\":1524:1737  for (uint z = 0; z < vestingDays.length; z++) \r... */\n      iszero\n      tag_57\n      jumpi\n        /* \"contracts/BalanceHelper.sol\":1628:1721  stakes[z].TokenBalance.add(_masterEntertainer.getBalanceOf(userAddresses[i], vestingDays[z])) */\n      tag_59\n        /* \"contracts/BalanceHelper.sol\":1655:1673  _masterEntertainer */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BalanceHelper.sol\":1655:1686  _masterEntertainer.getBalanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x94d45b59\n        /* \"contracts/BalanceHelper.sol\":1687:1700  userAddresses */\n      dup8\n        /* \"contracts/BalanceHelper.sol\":1701:1702  i */\n      dup6\n        /* \"contracts/BalanceHelper.sol\":1687:1703  userAddresses[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_60\n      jumpi\n      tag_61\n      tag_24\n      jump\t// in\n    tag_61:\n    tag_60:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/BalanceHelper.sol\":1705:1716  vestingDays */\n      dup10\n        /* \"contracts/BalanceHelper.sol\":1717:1718  z */\n      dup6\n        /* \"contracts/BalanceHelper.sol\":1705:1719  vestingDays[z] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_62\n      jumpi\n      tag_63\n      tag_24\n      jump\t// in\n    tag_63:\n    tag_62:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/BalanceHelper.sol\":1655:1720  _masterEntertainer.getBalanceOf(userAddresses[i], vestingDays[z]) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap3\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_69:\n        /* \"contracts/BalanceHelper.sol\":1628:1634  stakes */\n      dup5\n        /* \"contracts/BalanceHelper.sol\":1635:1636  z */\n      dup4\n        /* \"contracts/BalanceHelper.sol\":1628:1637  stakes[z] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_70\n      jumpi\n      tag_71\n      tag_24\n      jump\t// in\n    tag_71:\n    tag_70:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/BalanceHelper.sol\":1628:1650  stakes[z].TokenBalance */\n      0x20\n      add\n      mload\n        /* \"contracts/BalanceHelper.sol\":1628:1654  stakes[z].TokenBalance.add */\n      tag_32\n      swap1\n        /* \"contracts/BalanceHelper.sol\":1628:1721  stakes[z].TokenBalance.add(_masterEntertainer.getBalanceOf(userAddresses[i], vestingDays[z])) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_59:\n        /* \"contracts/BalanceHelper.sol\":1603:1609  stakes */\n      dup4\n        /* \"contracts/BalanceHelper.sol\":1610:1611  z */\n      dup3\n        /* \"contracts/BalanceHelper.sol\":1603:1612  stakes[z] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_72\n      jumpi\n      tag_73\n      tag_24\n      jump\t// in\n    tag_73:\n    tag_72:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/BalanceHelper.sol\":1603:1625  stakes[z].TokenBalance */\n      0x20\n      add\n        /* \"contracts/BalanceHelper.sol\":1603:1721  stakes[z].TokenBalance = stakes[z].TokenBalance.add(_masterEntertainer.getBalanceOf(userAddresses[i], vestingDays[z])) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/BalanceHelper.sol\":1565:1568  z++ */\n      dup1\n      dup1\n      tag_74\n      swap1\n      tag_34\n      jump\t// in\n    tag_74:\n      swap2\n      pop\n      pop\n        /* \"contracts/BalanceHelper.sol\":1524:1737  for (uint z = 0; z < vestingDays.length; z++) \r... */\n      jump(tag_56)\n    tag_57:\n      pop\n        /* \"contracts/BalanceHelper.sol\":1494:1497  i++ */\n      dup1\n      dup1\n      tag_75\n      swap1\n      tag_34\n      jump\t// in\n    tag_75:\n      swap2\n      pop\n      pop\n        /* \"contracts/BalanceHelper.sol\":1451:1748  for (uint i = 0; i < userAddresses.length; i++) \r... */\n      jump(tag_53)\n    tag_54:\n      pop\n        /* \"contracts/BalanceHelper.sol\":1765:1771  stakes */\n      dup1\n        /* \"contracts/BalanceHelper.sol\":1758:1771  return stakes */\n      swap2\n      pop\n      pop\n        /* \"contracts/BalanceHelper.sol\":1079:1779  function GetStakedBalance(uint32[] memory vestingDays, address[] memory userAddresses) public view returns(Stake[] memory) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2672:2768  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2730:2737  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2760:2761  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2756:2757  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2756:2761  a + b */\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2749:2761  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2672:2768  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_42:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":24:746   */\n    tag_80:\n        /* \"#utility.yul\":120:125   */\n      0x00\n        /* \"#utility.yul\":145:226   */\n      tag_82\n        /* \"#utility.yul\":161:225   */\n      tag_83\n        /* \"#utility.yul\":218:224   */\n      dup5\n        /* \"#utility.yul\":161:225   */\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":145:226   */\n      tag_85\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":136:226   */\n      swap1\n      pop\n        /* \"#utility.yul\":246:251   */\n      dup1\n        /* \"#utility.yul\":275:281   */\n      dup4\n        /* \"#utility.yul\":268:273   */\n      dup3\n        /* \"#utility.yul\":261:282   */\n      mstore\n        /* \"#utility.yul\":309:313   */\n      0x20\n        /* \"#utility.yul\":302:307   */\n      dup3\n        /* \"#utility.yul\":298:314   */\n      add\n        /* \"#utility.yul\":291:314   */\n      swap1\n      pop\n        /* \"#utility.yul\":335:341   */\n      dup3\n        /* \"#utility.yul\":385:388   */\n      dup6\n        /* \"#utility.yul\":377:381   */\n      0x20\n        /* \"#utility.yul\":369:375   */\n      dup7\n        /* \"#utility.yul\":365:382   */\n      mul\n        /* \"#utility.yul\":360:363   */\n      dup3\n        /* \"#utility.yul\":356:383   */\n      add\n        /* \"#utility.yul\":353:389   */\n      gt\n        /* \"#utility.yul\":350:493   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":404:483   */\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":350:493   */\n    tag_86:\n        /* \"#utility.yul\":517:518   */\n      0x00\n        /* \"#utility.yul\":502:740   */\n    tag_89:\n        /* \"#utility.yul\":527:533   */\n      dup6\n        /* \"#utility.yul\":524:525   */\n      dup2\n        /* \"#utility.yul\":521:534   */\n      lt\n        /* \"#utility.yul\":502:740   */\n      iszero\n      tag_91\n      jumpi\n        /* \"#utility.yul\":595:598   */\n      dup2\n        /* \"#utility.yul\":624:661   */\n      tag_92\n        /* \"#utility.yul\":657:660   */\n      dup9\n        /* \"#utility.yul\":645:655   */\n      dup3\n        /* \"#utility.yul\":624:661   */\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":619:622   */\n      dup5\n        /* \"#utility.yul\":612:662   */\n      mstore\n        /* \"#utility.yul\":691:695   */\n      0x20\n        /* \"#utility.yul\":686:689   */\n      dup5\n        /* \"#utility.yul\":682:696   */\n      add\n        /* \"#utility.yul\":675:696   */\n      swap4\n      pop\n        /* \"#utility.yul\":725:729   */\n      0x20\n        /* \"#utility.yul\":720:723   */\n      dup4\n        /* \"#utility.yul\":716:730   */\n      add\n        /* \"#utility.yul\":709:730   */\n      swap3\n      pop\n        /* \"#utility.yul\":562:740   */\n      pop\n        /* \"#utility.yul\":549:550   */\n      0x01\n        /* \"#utility.yul\":546:547   */\n      dup2\n        /* \"#utility.yul\":542:551   */\n      add\n        /* \"#utility.yul\":537:551   */\n      swap1\n      pop\n        /* \"#utility.yul\":502:740   */\n      jump(tag_89)\n    tag_91:\n        /* \"#utility.yul\":506:520   */\n      pop\n        /* \"#utility.yul\":126:746   */\n      pop\n      pop\n        /* \"#utility.yul\":24:746   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":768:1487   */\n    tag_94:\n        /* \"#utility.yul\":863:868   */\n      0x00\n        /* \"#utility.yul\":888:968   */\n      tag_96\n        /* \"#utility.yul\":904:967   */\n      tag_97\n        /* \"#utility.yul\":960:966   */\n      dup5\n        /* \"#utility.yul\":904:967   */\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":888:968   */\n      tag_85\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":879:968   */\n      swap1\n      pop\n        /* \"#utility.yul\":988:993   */\n      dup1\n        /* \"#utility.yul\":1017:1023   */\n      dup4\n        /* \"#utility.yul\":1010:1015   */\n      dup3\n        /* \"#utility.yul\":1003:1024   */\n      mstore\n        /* \"#utility.yul\":1051:1055   */\n      0x20\n        /* \"#utility.yul\":1044:1049   */\n      dup3\n        /* \"#utility.yul\":1040:1056   */\n      add\n        /* \"#utility.yul\":1033:1056   */\n      swap1\n      pop\n        /* \"#utility.yul\":1077:1083   */\n      dup3\n        /* \"#utility.yul\":1127:1130   */\n      dup6\n        /* \"#utility.yul\":1119:1123   */\n      0x20\n        /* \"#utility.yul\":1111:1117   */\n      dup7\n        /* \"#utility.yul\":1107:1124   */\n      mul\n        /* \"#utility.yul\":1102:1105   */\n      dup3\n        /* \"#utility.yul\":1098:1125   */\n      add\n        /* \"#utility.yul\":1095:1131   */\n      gt\n        /* \"#utility.yul\":1092:1235   */\n      iszero\n      tag_99\n      jumpi\n        /* \"#utility.yul\":1146:1225   */\n      tag_100\n      tag_88\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1092:1235   */\n    tag_99:\n        /* \"#utility.yul\":1259:1260   */\n      0x00\n        /* \"#utility.yul\":1244:1481   */\n    tag_101:\n        /* \"#utility.yul\":1269:1275   */\n      dup6\n        /* \"#utility.yul\":1266:1267   */\n      dup2\n        /* \"#utility.yul\":1263:1276   */\n      lt\n        /* \"#utility.yul\":1244:1481   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":1337:1340   */\n      dup2\n        /* \"#utility.yul\":1366:1402   */\n      tag_104\n        /* \"#utility.yul\":1398:1401   */\n      dup9\n        /* \"#utility.yul\":1386:1396   */\n      dup3\n        /* \"#utility.yul\":1366:1402   */\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":1361:1364   */\n      dup5\n        /* \"#utility.yul\":1354:1403   */\n      mstore\n        /* \"#utility.yul\":1432:1436   */\n      0x20\n        /* \"#utility.yul\":1427:1430   */\n      dup5\n        /* \"#utility.yul\":1423:1437   */\n      add\n        /* \"#utility.yul\":1416:1437   */\n      swap4\n      pop\n        /* \"#utility.yul\":1466:1470   */\n      0x20\n        /* \"#utility.yul\":1461:1464   */\n      dup4\n        /* \"#utility.yul\":1457:1471   */\n      add\n        /* \"#utility.yul\":1450:1471   */\n      swap3\n      pop\n        /* \"#utility.yul\":1304:1481   */\n      pop\n        /* \"#utility.yul\":1291:1292   */\n      0x01\n        /* \"#utility.yul\":1288:1289   */\n      dup2\n        /* \"#utility.yul\":1284:1293   */\n      add\n        /* \"#utility.yul\":1279:1293   */\n      swap1\n      pop\n        /* \"#utility.yul\":1244:1481   */\n      jump(tag_101)\n    tag_103:\n        /* \"#utility.yul\":1248:1262   */\n      pop\n        /* \"#utility.yul\":869:1487   */\n      pop\n      pop\n        /* \"#utility.yul\":768:1487   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1493:1632   */\n    tag_93:\n        /* \"#utility.yul\":1539:1544   */\n      0x00\n        /* \"#utility.yul\":1577:1583   */\n      dup2\n        /* \"#utility.yul\":1564:1584   */\n      calldataload\n        /* \"#utility.yul\":1555:1584   */\n      swap1\n      pop\n        /* \"#utility.yul\":1593:1626   */\n      tag_107\n        /* \"#utility.yul\":1620:1625   */\n      dup2\n        /* \"#utility.yul\":1593:1626   */\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":1493:1632   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1655:2025   */\n    tag_109:\n        /* \"#utility.yul\":1726:1731   */\n      0x00\n        /* \"#utility.yul\":1775:1778   */\n      dup3\n        /* \"#utility.yul\":1768:1772   */\n      0x1f\n        /* \"#utility.yul\":1760:1766   */\n      dup4\n        /* \"#utility.yul\":1756:1773   */\n      add\n        /* \"#utility.yul\":1752:1779   */\n      slt\n        /* \"#utility.yul\":1742:1864   */\n      tag_111\n      jumpi\n        /* \"#utility.yul\":1783:1862   */\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":1742:1864   */\n    tag_111:\n        /* \"#utility.yul\":1900:1906   */\n      dup2\n        /* \"#utility.yul\":1887:1907   */\n      calldataload\n        /* \"#utility.yul\":1925:2019   */\n      tag_114\n        /* \"#utility.yul\":2015:2018   */\n      dup5\n        /* \"#utility.yul\":2007:2013   */\n      dup3\n        /* \"#utility.yul\":2000:2004   */\n      0x20\n        /* \"#utility.yul\":1992:1998   */\n      dup7\n        /* \"#utility.yul\":1988:2005   */\n      add\n        /* \"#utility.yul\":1925:2019   */\n      tag_80\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":1916:2019   */\n      swap2\n      pop\n        /* \"#utility.yul\":1732:2025   */\n      pop\n        /* \"#utility.yul\":1655:2025   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2047:2415   */\n    tag_115:\n        /* \"#utility.yul\":2117:2122   */\n      0x00\n        /* \"#utility.yul\":2166:2169   */\n      dup3\n        /* \"#utility.yul\":2159:2163   */\n      0x1f\n        /* \"#utility.yul\":2151:2157   */\n      dup4\n        /* \"#utility.yul\":2147:2164   */\n      add\n        /* \"#utility.yul\":2143:2170   */\n      slt\n        /* \"#utility.yul\":2133:2255   */\n      tag_117\n      jumpi\n        /* \"#utility.yul\":2174:2253   */\n      tag_118\n      tag_113\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":2133:2255   */\n    tag_117:\n        /* \"#utility.yul\":2291:2297   */\n      dup2\n        /* \"#utility.yul\":2278:2298   */\n      calldataload\n        /* \"#utility.yul\":2316:2409   */\n      tag_119\n        /* \"#utility.yul\":2405:2408   */\n      dup5\n        /* \"#utility.yul\":2397:2403   */\n      dup3\n        /* \"#utility.yul\":2390:2394   */\n      0x20\n        /* \"#utility.yul\":2382:2388   */\n      dup7\n        /* \"#utility.yul\":2378:2395   */\n      add\n        /* \"#utility.yul\":2316:2409   */\n      tag_94\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2307:2409   */\n      swap2\n      pop\n        /* \"#utility.yul\":2123:2415   */\n      pop\n        /* \"#utility.yul\":2047:2415   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2421:2564   */\n    tag_120:\n        /* \"#utility.yul\":2478:2483   */\n      0x00\n        /* \"#utility.yul\":2509:2515   */\n      dup2\n        /* \"#utility.yul\":2503:2516   */\n      mload\n        /* \"#utility.yul\":2494:2516   */\n      swap1\n      pop\n        /* \"#utility.yul\":2525:2558   */\n      tag_122\n        /* \"#utility.yul\":2552:2557   */\n      dup2\n        /* \"#utility.yul\":2525:2558   */\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":2421:2564   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2570:2707   */\n    tag_105:\n        /* \"#utility.yul\":2615:2620   */\n      0x00\n        /* \"#utility.yul\":2653:2659   */\n      dup2\n        /* \"#utility.yul\":2640:2660   */\n      calldataload\n        /* \"#utility.yul\":2631:2660   */\n      swap1\n      pop\n        /* \"#utility.yul\":2669:2701   */\n      tag_125\n        /* \"#utility.yul\":2695:2700   */\n      dup2\n        /* \"#utility.yul\":2669:2701   */\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":2570:2707   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2713:3252   */\n    tag_7:\n        /* \"#utility.yul\":2797:2803   */\n      0x00\n        /* \"#utility.yul\":2846:2848   */\n      0x20\n        /* \"#utility.yul\":2834:2843   */\n      dup3\n        /* \"#utility.yul\":2825:2832   */\n      dup5\n        /* \"#utility.yul\":2821:2844   */\n      sub\n        /* \"#utility.yul\":2817:2849   */\n      slt\n        /* \"#utility.yul\":2814:2933   */\n      iszero\n      tag_128\n      jumpi\n        /* \"#utility.yul\":2852:2931   */\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":2814:2933   */\n    tag_128:\n        /* \"#utility.yul\":3000:3001   */\n      0x00\n        /* \"#utility.yul\":2989:2998   */\n      dup3\n        /* \"#utility.yul\":2985:3002   */\n      add\n        /* \"#utility.yul\":2972:3003   */\n      calldataload\n        /* \"#utility.yul\":3030:3048   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3022:3028   */\n      dup2\n        /* \"#utility.yul\":3019:3049   */\n      gt\n        /* \"#utility.yul\":3016:3133   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":3052:3131   */\n      tag_132\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":3016:3133   */\n    tag_131:\n        /* \"#utility.yul\":3157:3235   */\n      tag_134\n        /* \"#utility.yul\":3227:3234   */\n      dup5\n        /* \"#utility.yul\":3218:3224   */\n      dup3\n        /* \"#utility.yul\":3207:3216   */\n      dup6\n        /* \"#utility.yul\":3203:3225   */\n      add\n        /* \"#utility.yul\":3157:3235   */\n      tag_109\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3147:3235   */\n      swap2\n      pop\n        /* \"#utility.yul\":2943:3245   */\n      pop\n        /* \"#utility.yul\":2713:3252   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3258:4150   */\n    tag_13:\n        /* \"#utility.yul\":3375:3381   */\n      0x00\n        /* \"#utility.yul\":3383:3389   */\n      dup1\n        /* \"#utility.yul\":3432:3434   */\n      0x40\n        /* \"#utility.yul\":3420:3429   */\n      dup4\n        /* \"#utility.yul\":3411:3418   */\n      dup6\n        /* \"#utility.yul\":3407:3430   */\n      sub\n        /* \"#utility.yul\":3403:3435   */\n      slt\n        /* \"#utility.yul\":3400:3519   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":3438:3517   */\n      tag_137\n      tag_130\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":3400:3519   */\n    tag_136:\n        /* \"#utility.yul\":3586:3587   */\n      0x00\n        /* \"#utility.yul\":3575:3584   */\n      dup4\n        /* \"#utility.yul\":3571:3588   */\n      add\n        /* \"#utility.yul\":3558:3589   */\n      calldataload\n        /* \"#utility.yul\":3616:3634   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3608:3614   */\n      dup2\n        /* \"#utility.yul\":3605:3635   */\n      gt\n        /* \"#utility.yul\":3602:3719   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":3638:3717   */\n      tag_139\n      tag_133\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":3602:3719   */\n    tag_138:\n        /* \"#utility.yul\":3743:3820   */\n      tag_140\n        /* \"#utility.yul\":3812:3819   */\n      dup6\n        /* \"#utility.yul\":3803:3809   */\n      dup3\n        /* \"#utility.yul\":3792:3801   */\n      dup7\n        /* \"#utility.yul\":3788:3810   */\n      add\n        /* \"#utility.yul\":3743:3820   */\n      tag_115\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3733:3820   */\n      swap3\n      pop\n        /* \"#utility.yul\":3529:3830   */\n      pop\n        /* \"#utility.yul\":3897:3899   */\n      0x20\n        /* \"#utility.yul\":3886:3895   */\n      dup4\n        /* \"#utility.yul\":3882:3900   */\n      add\n        /* \"#utility.yul\":3869:3901   */\n      calldataload\n        /* \"#utility.yul\":3928:3946   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3920:3926   */\n      dup2\n        /* \"#utility.yul\":3917:3947   */\n      gt\n        /* \"#utility.yul\":3914:4031   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":3950:4029   */\n      tag_142\n      tag_133\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":3914:4031   */\n    tag_141:\n        /* \"#utility.yul\":4055:4133   */\n      tag_143\n        /* \"#utility.yul\":4125:4132   */\n      dup6\n        /* \"#utility.yul\":4116:4122   */\n      dup3\n        /* \"#utility.yul\":4105:4114   */\n      dup7\n        /* \"#utility.yul\":4101:4123   */\n      add\n        /* \"#utility.yul\":4055:4133   */\n      tag_109\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":4045:4133   */\n      swap2\n      pop\n        /* \"#utility.yul\":3840:4143   */\n      pop\n        /* \"#utility.yul\":3258:4150   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4156:4507   */\n    tag_31:\n        /* \"#utility.yul\":4226:4232   */\n      0x00\n        /* \"#utility.yul\":4275:4277   */\n      0x20\n        /* \"#utility.yul\":4263:4272   */\n      dup3\n        /* \"#utility.yul\":4254:4261   */\n      dup5\n        /* \"#utility.yul\":4250:4273   */\n      sub\n        /* \"#utility.yul\":4246:4278   */\n      slt\n        /* \"#utility.yul\":4243:4362   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":4281:4360   */\n      tag_146\n      tag_130\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":4243:4362   */\n    tag_145:\n        /* \"#utility.yul\":4401:4402   */\n      0x00\n        /* \"#utility.yul\":4426:4490   */\n      tag_147\n        /* \"#utility.yul\":4482:4489   */\n      dup5\n        /* \"#utility.yul\":4473:4479   */\n      dup3\n        /* \"#utility.yul\":4462:4471   */\n      dup6\n        /* \"#utility.yul\":4458:4480   */\n      add\n        /* \"#utility.yul\":4426:4490   */\n      tag_120\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":4416:4490   */\n      swap2\n      pop\n        /* \"#utility.yul\":4372:4500   */\n      pop\n        /* \"#utility.yul\":4156:4507   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4513:4780   */\n    tag_148:\n        /* \"#utility.yul\":4626:4636   */\n      0x00\n        /* \"#utility.yul\":4647:4737   */\n      tag_150\n        /* \"#utility.yul\":4733:4736   */\n      dup4\n        /* \"#utility.yul\":4725:4731   */\n      dup4\n        /* \"#utility.yul\":4647:4737   */\n      tag_151\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":4769:4773   */\n      0x40\n        /* \"#utility.yul\":4764:4767   */\n      dup4\n        /* \"#utility.yul\":4760:4774   */\n      add\n        /* \"#utility.yul\":4746:4774   */\n      swap1\n      pop\n        /* \"#utility.yul\":4513:4780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4786:4904   */\n    tag_152:\n        /* \"#utility.yul\":4873:4897   */\n      tag_154\n        /* \"#utility.yul\":4891:4896   */\n      dup2\n        /* \"#utility.yul\":4873:4897   */\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":4868:4871   */\n      dup3\n        /* \"#utility.yul\":4861:4898   */\n      mstore\n        /* \"#utility.yul\":4786:4904   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4978:5886   */\n    tag_156:\n        /* \"#utility.yul\":5141:5144   */\n      0x00\n        /* \"#utility.yul\":5170:5246   */\n      tag_158\n        /* \"#utility.yul\":5240:5245   */\n      dup3\n        /* \"#utility.yul\":5170:5246   */\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":5262:5370   */\n      tag_160\n        /* \"#utility.yul\":5363:5369   */\n      dup2\n        /* \"#utility.yul\":5358:5361   */\n      dup6\n        /* \"#utility.yul\":5262:5370   */\n      tag_161\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":5255:5370   */\n      swap4\n      pop\n        /* \"#utility.yul\":5394:5472   */\n      tag_162\n        /* \"#utility.yul\":5466:5471   */\n      dup4\n        /* \"#utility.yul\":5394:5472   */\n      tag_163\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":5495:5502   */\n      dup1\n        /* \"#utility.yul\":5526:5527   */\n      0x00\n        /* \"#utility.yul\":5511:5861   */\n    tag_164:\n        /* \"#utility.yul\":5536:5542   */\n      dup4\n        /* \"#utility.yul\":5533:5534   */\n      dup2\n        /* \"#utility.yul\":5530:5543   */\n      lt\n        /* \"#utility.yul\":5511:5861   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":5612:5618   */\n      dup2\n        /* \"#utility.yul\":5606:5619   */\n      mload\n        /* \"#utility.yul\":5639:5746   */\n      tag_167\n        /* \"#utility.yul\":5742:5745   */\n      dup9\n        /* \"#utility.yul\":5727:5740   */\n      dup3\n        /* \"#utility.yul\":5639:5746   */\n      tag_148\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":5632:5746   */\n      swap8\n      pop\n        /* \"#utility.yul\":5769:5851   */\n      tag_168\n        /* \"#utility.yul\":5844:5850   */\n      dup4\n        /* \"#utility.yul\":5769:5851   */\n      tag_169\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":5759:5851   */\n      swap3\n      pop\n        /* \"#utility.yul\":5571:5861   */\n      pop\n        /* \"#utility.yul\":5558:5559   */\n      0x01\n        /* \"#utility.yul\":5555:5556   */\n      dup2\n        /* \"#utility.yul\":5551:5560   */\n      add\n        /* \"#utility.yul\":5546:5560   */\n      swap1\n      pop\n        /* \"#utility.yul\":5511:5861   */\n      jump(tag_164)\n    tag_166:\n        /* \"#utility.yul\":5515:5529   */\n      pop\n        /* \"#utility.yul\":5877:5880   */\n      dup6\n        /* \"#utility.yul\":5870:5880   */\n      swap4\n      pop\n        /* \"#utility.yul\":5146:5886   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4978:5886   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5956:6460   */\n    tag_151:\n        /* \"#utility.yul\":6087:6091   */\n      0x40\n        /* \"#utility.yul\":6082:6085   */\n      dup3\n        /* \"#utility.yul\":6078:6092   */\n      add\n        /* \"#utility.yul\":6181:6185   */\n      0x00\n        /* \"#utility.yul\":6174:6179   */\n      dup3\n        /* \"#utility.yul\":6170:6186   */\n      add\n        /* \"#utility.yul\":6164:6187   */\n      mload\n        /* \"#utility.yul\":6200:6261   */\n      tag_171\n        /* \"#utility.yul\":6255:6259   */\n      0x00\n        /* \"#utility.yul\":6250:6253   */\n      dup6\n        /* \"#utility.yul\":6246:6260   */\n      add\n        /* \"#utility.yul\":6232:6244   */\n      dup3\n        /* \"#utility.yul\":6200:6261   */\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":6102:6271   */\n      pop\n        /* \"#utility.yul\":6361:6365   */\n      0x20\n        /* \"#utility.yul\":6354:6359   */\n      dup3\n        /* \"#utility.yul\":6350:6366   */\n      add\n        /* \"#utility.yul\":6344:6367   */\n      mload\n        /* \"#utility.yul\":6380:6443   */\n      tag_173\n        /* \"#utility.yul\":6437:6441   */\n      0x20\n        /* \"#utility.yul\":6432:6435   */\n      dup6\n        /* \"#utility.yul\":6428:6442   */\n      add\n        /* \"#utility.yul\":6414:6426   */\n      dup3\n        /* \"#utility.yul\":6380:6443   */\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":6281:6453   */\n      pop\n        /* \"#utility.yul\":6056:6460   */\n      pop\n        /* \"#utility.yul\":5956:6460   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6466:6574   */\n    tag_174:\n        /* \"#utility.yul\":6543:6567   */\n      tag_176\n        /* \"#utility.yul\":6561:6566   */\n      dup2\n        /* \"#utility.yul\":6543:6567   */\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":6538:6541   */\n      dup3\n        /* \"#utility.yul\":6531:6568   */\n      mstore\n        /* \"#utility.yul\":6466:6574   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6580:6698   */\n    tag_178:\n        /* \"#utility.yul\":6667:6691   */\n      tag_180\n        /* \"#utility.yul\":6685:6690   */\n      dup2\n        /* \"#utility.yul\":6667:6691   */\n      tag_177\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":6662:6665   */\n      dup3\n        /* \"#utility.yul\":6655:6692   */\n      mstore\n        /* \"#utility.yul\":6580:6698   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6704:6833   */\n    tag_181:\n        /* \"#utility.yul\":6790:6826   */\n      tag_183\n        /* \"#utility.yul\":6820:6825   */\n      dup2\n        /* \"#utility.yul\":6790:6826   */\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":6785:6788   */\n      dup3\n        /* \"#utility.yul\":6778:6827   */\n      mstore\n        /* \"#utility.yul\":6704:6833   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6839:6944   */\n    tag_172:\n        /* \"#utility.yul\":6914:6937   */\n      tag_186\n        /* \"#utility.yul\":6931:6936   */\n      dup2\n        /* \"#utility.yul\":6914:6937   */\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":6909:6912   */\n      dup3\n        /* \"#utility.yul\":6902:6938   */\n      mstore\n        /* \"#utility.yul\":6839:6944   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6950:7172   */\n    tag_26:\n        /* \"#utility.yul\":7043:7047   */\n      0x00\n        /* \"#utility.yul\":7081:7083   */\n      0x20\n        /* \"#utility.yul\":7070:7079   */\n      dup3\n        /* \"#utility.yul\":7066:7084   */\n      add\n        /* \"#utility.yul\":7058:7084   */\n      swap1\n      pop\n        /* \"#utility.yul\":7094:7165   */\n      tag_189\n        /* \"#utility.yul\":7162:7163   */\n      0x00\n        /* \"#utility.yul\":7151:7160   */\n      dup4\n        /* \"#utility.yul\":7147:7164   */\n      add\n        /* \"#utility.yul\":7138:7144   */\n      dup5\n        /* \"#utility.yul\":7094:7165   */\n      tag_152\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":6950:7172   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7178:7508   */\n    tag_65:\n        /* \"#utility.yul\":7298:7302   */\n      0x00\n        /* \"#utility.yul\":7336:7338   */\n      0x40\n        /* \"#utility.yul\":7325:7334   */\n      dup3\n        /* \"#utility.yul\":7321:7339   */\n      add\n        /* \"#utility.yul\":7313:7339   */\n      swap1\n      pop\n        /* \"#utility.yul\":7349:7420   */\n      tag_191\n        /* \"#utility.yul\":7417:7418   */\n      0x00\n        /* \"#utility.yul\":7406:7415   */\n      dup4\n        /* \"#utility.yul\":7402:7419   */\n      add\n        /* \"#utility.yul\":7393:7399   */\n      dup6\n        /* \"#utility.yul\":7349:7420   */\n      tag_152\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":7430:7501   */\n      tag_192\n        /* \"#utility.yul\":7497:7499   */\n      0x20\n        /* \"#utility.yul\":7486:7495   */\n      dup4\n        /* \"#utility.yul\":7482:7500   */\n      add\n        /* \"#utility.yul\":7473:7479   */\n      dup5\n        /* \"#utility.yul\":7430:7501   */\n      tag_181\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":7178:7508   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7514:7975   */\n    tag_16:\n        /* \"#utility.yul\":7701:7705   */\n      0x00\n        /* \"#utility.yul\":7739:7741   */\n      0x20\n        /* \"#utility.yul\":7728:7737   */\n      dup3\n        /* \"#utility.yul\":7724:7742   */\n      add\n        /* \"#utility.yul\":7716:7742   */\n      swap1\n      pop\n        /* \"#utility.yul\":7788:7797   */\n      dup2\n        /* \"#utility.yul\":7782:7786   */\n      dup2\n        /* \"#utility.yul\":7778:7798   */\n      sub\n        /* \"#utility.yul\":7774:7775   */\n      0x00\n        /* \"#utility.yul\":7763:7772   */\n      dup4\n        /* \"#utility.yul\":7759:7776   */\n      add\n        /* \"#utility.yul\":7752:7799   */\n      mstore\n        /* \"#utility.yul\":7816:7968   */\n      tag_194\n        /* \"#utility.yul\":7963:7967   */\n      dup2\n        /* \"#utility.yul\":7954:7960   */\n      dup5\n        /* \"#utility.yul\":7816:7968   */\n      tag_156\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":7808:7968   */\n      swap1\n      pop\n        /* \"#utility.yul\":7514:7975   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7981:8203   */\n    tag_10:\n        /* \"#utility.yul\":8074:8078   */\n      0x00\n        /* \"#utility.yul\":8112:8114   */\n      0x20\n        /* \"#utility.yul\":8101:8110   */\n      dup3\n        /* \"#utility.yul\":8097:8115   */\n      add\n        /* \"#utility.yul\":8089:8115   */\n      swap1\n      pop\n        /* \"#utility.yul\":8125:8196   */\n      tag_196\n        /* \"#utility.yul\":8193:8194   */\n      0x00\n        /* \"#utility.yul\":8182:8191   */\n      dup4\n        /* \"#utility.yul\":8178:8195   */\n      add\n        /* \"#utility.yul\":8169:8175   */\n      dup5\n        /* \"#utility.yul\":8125:8196   */\n      tag_178\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":7981:8203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8209:8338   */\n    tag_85:\n        /* \"#utility.yul\":8243:8249   */\n      0x00\n        /* \"#utility.yul\":8270:8290   */\n      tag_198\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":8260:8290   */\n      swap1\n      pop\n        /* \"#utility.yul\":8299:8332   */\n      tag_200\n        /* \"#utility.yul\":8327:8331   */\n      dup3\n        /* \"#utility.yul\":8319:8325   */\n      dup3\n        /* \"#utility.yul\":8299:8332   */\n      tag_201\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":8209:8338   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8344:8419   */\n    tag_199:\n        /* \"#utility.yul\":8377:8383   */\n      0x00\n        /* \"#utility.yul\":8410:8412   */\n      0x40\n        /* \"#utility.yul\":8404:8413   */\n      mload\n        /* \"#utility.yul\":8394:8413   */\n      swap1\n      pop\n        /* \"#utility.yul\":8344:8419   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":8425:8736   */\n    tag_84:\n        /* \"#utility.yul\":8502:8506   */\n      0x00\n        /* \"#utility.yul\":8592:8610   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8584:8590   */\n      dup3\n        /* \"#utility.yul\":8581:8611   */\n      gt\n        /* \"#utility.yul\":8578:8634   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":8614:8632   */\n      tag_205\n      tag_38\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":8578:8634   */\n    tag_204:\n        /* \"#utility.yul\":8664:8668   */\n      0x20\n        /* \"#utility.yul\":8656:8662   */\n      dup3\n        /* \"#utility.yul\":8652:8669   */\n      mul\n        /* \"#utility.yul\":8644:8669   */\n      swap1\n      pop\n        /* \"#utility.yul\":8724:8728   */\n      0x20\n        /* \"#utility.yul\":8718:8722   */\n      dup2\n        /* \"#utility.yul\":8714:8729   */\n      add\n        /* \"#utility.yul\":8706:8729   */\n      swap1\n      pop\n        /* \"#utility.yul\":8425:8736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8742:9052   */\n    tag_98:\n        /* \"#utility.yul\":8818:8822   */\n      0x00\n        /* \"#utility.yul\":8908:8926   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8900:8906   */\n      dup3\n        /* \"#utility.yul\":8897:8927   */\n      gt\n        /* \"#utility.yul\":8894:8950   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":8930:8948   */\n      tag_208\n      tag_38\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":8894:8950   */\n    tag_207:\n        /* \"#utility.yul\":8980:8984   */\n      0x20\n        /* \"#utility.yul\":8972:8978   */\n      dup3\n        /* \"#utility.yul\":8968:8985   */\n      mul\n        /* \"#utility.yul\":8960:8985   */\n      swap1\n      pop\n        /* \"#utility.yul\":9040:9044   */\n      0x20\n        /* \"#utility.yul\":9034:9038   */\n      dup2\n        /* \"#utility.yul\":9030:9045   */\n      add\n        /* \"#utility.yul\":9022:9045   */\n      swap1\n      pop\n        /* \"#utility.yul\":8742:9052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9058:9212   */\n    tag_163:\n        /* \"#utility.yul\":9147:9151   */\n      0x00\n        /* \"#utility.yul\":9170:9173   */\n      dup2\n        /* \"#utility.yul\":9162:9173   */\n      swap1\n      pop\n        /* \"#utility.yul\":9200:9204   */\n      0x20\n        /* \"#utility.yul\":9195:9198   */\n      dup3\n        /* \"#utility.yul\":9191:9205   */\n      add\n        /* \"#utility.yul\":9183:9205   */\n      swap1\n      pop\n        /* \"#utility.yul\":9058:9212   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9218:9354   */\n    tag_159:\n        /* \"#utility.yul\":9307:9313   */\n      0x00\n        /* \"#utility.yul\":9341:9346   */\n      dup2\n        /* \"#utility.yul\":9335:9347   */\n      mload\n        /* \"#utility.yul\":9325:9347   */\n      swap1\n      pop\n        /* \"#utility.yul\":9218:9354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9360:9495   */\n    tag_169:\n        /* \"#utility.yul\":9452:9456   */\n      0x00\n        /* \"#utility.yul\":9484:9488   */\n      0x20\n        /* \"#utility.yul\":9479:9482   */\n      dup3\n        /* \"#utility.yul\":9475:9489   */\n      add\n        /* \"#utility.yul\":9467:9489   */\n      swap1\n      pop\n        /* \"#utility.yul\":9360:9495   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9501:9707   */\n    tag_161:\n        /* \"#utility.yul\":9622:9633   */\n      0x00\n        /* \"#utility.yul\":9656:9662   */\n      dup3\n        /* \"#utility.yul\":9651:9654   */\n      dup3\n        /* \"#utility.yul\":9644:9663   */\n      mstore\n        /* \"#utility.yul\":9696:9700   */\n      0x20\n        /* \"#utility.yul\":9691:9694   */\n      dup3\n        /* \"#utility.yul\":9687:9701   */\n      add\n        /* \"#utility.yul\":9672:9701   */\n      swap1\n      pop\n        /* \"#utility.yul\":9501:9707   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9713:10018   */\n    tag_78:\n        /* \"#utility.yul\":9753:9756   */\n      0x00\n        /* \"#utility.yul\":9772:9792   */\n      tag_214\n        /* \"#utility.yul\":9790:9791   */\n      dup3\n        /* \"#utility.yul\":9772:9792   */\n      tag_177\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":9767:9792   */\n      swap2\n      pop\n        /* \"#utility.yul\":9806:9826   */\n      tag_215\n        /* \"#utility.yul\":9824:9825   */\n      dup4\n        /* \"#utility.yul\":9806:9826   */\n      tag_177\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":9801:9826   */\n      swap3\n      pop\n        /* \"#utility.yul\":9960:9961   */\n      dup3\n        /* \"#utility.yul\":9892:9958   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9888:9962   */\n      sub\n        /* \"#utility.yul\":9885:9886   */\n      dup3\n        /* \"#utility.yul\":9882:9963   */\n      gt\n        /* \"#utility.yul\":9879:9986   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":9966:9984   */\n      tag_217\n      tag_218\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":9879:9986   */\n    tag_216:\n        /* \"#utility.yul\":10010:10011   */\n      dup3\n        /* \"#utility.yul\":10007:10008   */\n      dup3\n        /* \"#utility.yul\":10003:10012   */\n      add\n        /* \"#utility.yul\":9996:10012   */\n      swap1\n      pop\n        /* \"#utility.yul\":9713:10018   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10024:10120   */\n    tag_155:\n        /* \"#utility.yul\":10061:10068   */\n      0x00\n        /* \"#utility.yul\":10090:10114   */\n      tag_220\n        /* \"#utility.yul\":10108:10113   */\n      dup3\n        /* \"#utility.yul\":10090:10114   */\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":10079:10114   */\n      swap1\n      pop\n        /* \"#utility.yul\":10024:10120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10126:10252   */\n    tag_221:\n        /* \"#utility.yul\":10163:10170   */\n      0x00\n        /* \"#utility.yul\":10203:10245   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10196:10201   */\n      dup3\n        /* \"#utility.yul\":10192:10246   */\n      and\n        /* \"#utility.yul\":10181:10246   */\n      swap1\n      pop\n        /* \"#utility.yul\":10126:10252   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10258:10335   */\n    tag_177:\n        /* \"#utility.yul\":10295:10302   */\n      0x00\n        /* \"#utility.yul\":10324:10329   */\n      dup2\n        /* \"#utility.yul\":10313:10329   */\n      swap1\n      pop\n        /* \"#utility.yul\":10258:10335   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10341:10434   */\n    tag_187:\n        /* \"#utility.yul\":10377:10384   */\n      0x00\n        /* \"#utility.yul\":10417:10427   */\n      0xffffffff\n        /* \"#utility.yul\":10410:10415   */\n      dup3\n        /* \"#utility.yul\":10406:10428   */\n      and\n        /* \"#utility.yul\":10395:10428   */\n      swap1\n      pop\n        /* \"#utility.yul\":10341:10434   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10440:10551   */\n    tag_184:\n        /* \"#utility.yul\":10489:10498   */\n      0x00\n        /* \"#utility.yul\":10522:10545   */\n      tag_226\n        /* \"#utility.yul\":10539:10544   */\n      dup3\n        /* \"#utility.yul\":10522:10545   */\n      tag_187\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":10509:10545   */\n      swap1\n      pop\n        /* \"#utility.yul\":10440:10551   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10557:10838   */\n    tag_201:\n        /* \"#utility.yul\":10640:10667   */\n      tag_228\n        /* \"#utility.yul\":10662:10666   */\n      dup3\n        /* \"#utility.yul\":10640:10667   */\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":10632:10638   */\n      dup2\n        /* \"#utility.yul\":10628:10668   */\n      add\n        /* \"#utility.yul\":10770:10776   */\n      dup2\n        /* \"#utility.yul\":10758:10768   */\n      dup2\n        /* \"#utility.yul\":10755:10777   */\n      lt\n        /* \"#utility.yul\":10734:10752   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10722:10732   */\n      dup3\n        /* \"#utility.yul\":10719:10753   */\n      gt\n        /* \"#utility.yul\":10716:10778   */\n      or\n        /* \"#utility.yul\":10713:10801   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":10781:10799   */\n      tag_231\n      tag_38\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":10713:10801   */\n    tag_230:\n        /* \"#utility.yul\":10821:10831   */\n      dup1\n        /* \"#utility.yul\":10817:10819   */\n      0x40\n        /* \"#utility.yul\":10810:10832   */\n      mstore\n        /* \"#utility.yul\":10600:10838   */\n      pop\n        /* \"#utility.yul\":10557:10838   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10844:11077   */\n    tag_34:\n        /* \"#utility.yul\":10883:10886   */\n      0x00\n        /* \"#utility.yul\":10906:10930   */\n      tag_233\n        /* \"#utility.yul\":10924:10929   */\n      dup3\n        /* \"#utility.yul\":10906:10930   */\n      tag_177\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":10897:10930   */\n      swap2\n      pop\n        /* \"#utility.yul\":10952:11018   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10945:10950   */\n      dup3\n        /* \"#utility.yul\":10942:11019   */\n      eq\n        /* \"#utility.yul\":10939:11042   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":11022:11040   */\n      tag_235\n      tag_218\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":10939:11042   */\n    tag_234:\n        /* \"#utility.yul\":11069:11070   */\n      0x01\n        /* \"#utility.yul\":11062:11067   */\n      dup3\n        /* \"#utility.yul\":11058:11071   */\n      add\n        /* \"#utility.yul\":11051:11071   */\n      swap1\n      pop\n        /* \"#utility.yul\":10844:11077   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11083:11263   */\n    tag_218:\n        /* \"#utility.yul\":11131:11208   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11128:11129   */\n      0x00\n        /* \"#utility.yul\":11121:11209   */\n      mstore\n        /* \"#utility.yul\":11228:11232   */\n      0x11\n        /* \"#utility.yul\":11225:11226   */\n      0x04\n        /* \"#utility.yul\":11218:11233   */\n      mstore\n        /* \"#utility.yul\":11252:11256   */\n      0x24\n        /* \"#utility.yul\":11249:11250   */\n      0x00\n        /* \"#utility.yul\":11242:11257   */\n      revert\n        /* \"#utility.yul\":11269:11449   */\n    tag_24:\n        /* \"#utility.yul\":11317:11394   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11314:11315   */\n      0x00\n        /* \"#utility.yul\":11307:11395   */\n      mstore\n        /* \"#utility.yul\":11414:11418   */\n      0x32\n        /* \"#utility.yul\":11411:11412   */\n      0x04\n        /* \"#utility.yul\":11404:11419   */\n      mstore\n        /* \"#utility.yul\":11438:11442   */\n      0x24\n        /* \"#utility.yul\":11435:11436   */\n      0x00\n        /* \"#utility.yul\":11428:11443   */\n      revert\n        /* \"#utility.yul\":11455:11635   */\n    tag_38:\n        /* \"#utility.yul\":11503:11580   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11500:11501   */\n      0x00\n        /* \"#utility.yul\":11493:11581   */\n      mstore\n        /* \"#utility.yul\":11600:11604   */\n      0x41\n        /* \"#utility.yul\":11597:11598   */\n      0x04\n        /* \"#utility.yul\":11590:11605   */\n      mstore\n        /* \"#utility.yul\":11624:11628   */\n      0x24\n        /* \"#utility.yul\":11621:11622   */\n      0x00\n        /* \"#utility.yul\":11614:11629   */\n      revert\n        /* \"#utility.yul\":11641:11758   */\n    tag_113:\n        /* \"#utility.yul\":11750:11751   */\n      0x00\n        /* \"#utility.yul\":11747:11748   */\n      dup1\n        /* \"#utility.yul\":11740:11752   */\n      revert\n        /* \"#utility.yul\":11764:11881   */\n    tag_88:\n        /* \"#utility.yul\":11873:11874   */\n      0x00\n        /* \"#utility.yul\":11870:11871   */\n      dup1\n        /* \"#utility.yul\":11863:11875   */\n      revert\n        /* \"#utility.yul\":11887:12004   */\n    tag_133:\n        /* \"#utility.yul\":11996:11997   */\n      0x00\n        /* \"#utility.yul\":11993:11994   */\n      dup1\n        /* \"#utility.yul\":11986:11998   */\n      revert\n        /* \"#utility.yul\":12010:12127   */\n    tag_130:\n        /* \"#utility.yul\":12119:12120   */\n      0x00\n        /* \"#utility.yul\":12116:12117   */\n      dup1\n        /* \"#utility.yul\":12109:12121   */\n      revert\n        /* \"#utility.yul\":12133:12235   */\n    tag_229:\n        /* \"#utility.yul\":12174:12180   */\n      0x00\n        /* \"#utility.yul\":12225:12227   */\n      0x1f\n        /* \"#utility.yul\":12221:12228   */\n      not\n        /* \"#utility.yul\":12216:12218   */\n      0x1f\n        /* \"#utility.yul\":12209:12214   */\n      dup4\n        /* \"#utility.yul\":12205:12219   */\n      add\n        /* \"#utility.yul\":12201:12229   */\n      and\n        /* \"#utility.yul\":12191:12229   */\n      swap1\n      pop\n        /* \"#utility.yul\":12133:12235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12241:12363   */\n    tag_108:\n        /* \"#utility.yul\":12314:12338   */\n      tag_245\n        /* \"#utility.yul\":12332:12337   */\n      dup2\n        /* \"#utility.yul\":12314:12338   */\n      tag_155\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":12307:12312   */\n      dup2\n        /* \"#utility.yul\":12304:12339   */\n      eq\n        /* \"#utility.yul\":12294:12357   */\n      tag_246\n      jumpi\n        /* \"#utility.yul\":12353:12354   */\n      0x00\n        /* \"#utility.yul\":12350:12351   */\n      dup1\n        /* \"#utility.yul\":12343:12355   */\n      revert\n        /* \"#utility.yul\":12294:12357   */\n    tag_246:\n        /* \"#utility.yul\":12241:12363   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12369:12491   */\n    tag_123:\n        /* \"#utility.yul\":12442:12466   */\n      tag_248\n        /* \"#utility.yul\":12460:12465   */\n      dup2\n        /* \"#utility.yul\":12442:12466   */\n      tag_177\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":12435:12440   */\n      dup2\n        /* \"#utility.yul\":12432:12467   */\n      eq\n        /* \"#utility.yul\":12422:12485   */\n      tag_249\n      jumpi\n        /* \"#utility.yul\":12481:12482   */\n      0x00\n        /* \"#utility.yul\":12478:12479   */\n      dup1\n        /* \"#utility.yul\":12471:12483   */\n      revert\n        /* \"#utility.yul\":12422:12485   */\n    tag_249:\n        /* \"#utility.yul\":12369:12491   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12497:12617   */\n    tag_126:\n        /* \"#utility.yul\":12569:12592   */\n      tag_251\n        /* \"#utility.yul\":12586:12591   */\n      dup2\n        /* \"#utility.yul\":12569:12592   */\n      tag_187\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":12562:12567   */\n      dup2\n        /* \"#utility.yul\":12559:12593   */\n      eq\n        /* \"#utility.yul\":12549:12611   */\n      tag_252\n      jumpi\n        /* \"#utility.yul\":12607:12608   */\n      0x00\n        /* \"#utility.yul\":12604:12605   */\n      dup1\n        /* \"#utility.yul\":12597:12609   */\n      revert\n        /* \"#utility.yul\":12549:12611   */\n    tag_252:\n        /* \"#utility.yul\":12497:12617   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122065743ab22d33f4c6d916256259ac4b99413c84dc1f3215d050f8fbe9b8bcc33a64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_852": {
									"entryPoint": null,
									"id": 852,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$181_fromMemory": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IMasterEntertainer_$1022_fromMemory": {
									"entryPoint": 215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$181t_contract$_IMasterEntertainer_$1022_fromMemory": {
									"entryPoint": 238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$181": {
									"entryPoint": 329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IMasterEntertainer_$1022": {
									"entryPoint": 349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$181": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IMasterEntertainer_$1022": {
									"entryPoint": 432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2123:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:94:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "94:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "109:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "103:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "103:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "94:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "166:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$181",
																	"nodeType": "YulIdentifier",
																	"src": "125:40:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "125:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "125:47:7"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$181_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "62:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "70:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "78:5:7",
														"type": ""
													}
												],
												"src": "7:171:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "274:107:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "284:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "299:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "293:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "293:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "284:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "369:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IMasterEntertainer_$1022",
																	"nodeType": "YulIdentifier",
																	"src": "315:53:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "315:60:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "315:60:7"
														}
													]
												},
												"name": "abi_decode_t_contract$_IMasterEntertainer_$1022_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "252:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "260:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "268:5:7",
														"type": ""
													}
												],
												"src": "184:197:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "522:454:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "568:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "570:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "570:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "570:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "543:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "552:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "539:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "539:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "564:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "535:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "535:32:7"
															},
															"nodeType": "YulIf",
															"src": "532:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "661:142:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "676:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "690:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "680:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "705:88:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "765:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "776:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "761:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "761:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "785:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$181_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "715:45:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "715:78:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "705:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "813:156:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "828:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "842:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "832:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "858:101:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "931:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "942:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "927:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "927:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "951:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IMasterEntertainer_$1022_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "868:58:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "868:91:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "858:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$181t_contract$_IMasterEntertainer_$1022_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "484:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "495:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "507:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "515:6:7",
														"type": ""
													}
												],
												"src": "387:589:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1032:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1042:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1042:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1032:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1015:6:7",
														"type": ""
													}
												],
												"src": "982:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1108:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1118:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1147:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1129:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1129:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1118:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1090:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1100:7:7",
														"type": ""
													}
												],
												"src": "1063:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1224:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1234:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1263:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1245:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1245:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1234:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$181",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1216:7:7",
														"type": ""
													}
												],
												"src": "1165:110:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1353:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1363:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1392:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1374:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1374:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1363:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IMasterEntertainer_$1022",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1335:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1345:7:7",
														"type": ""
													}
												],
												"src": "1281:123:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1455:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1465:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1480:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1487:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1476:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1476:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1465:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1437:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1447:7:7",
														"type": ""
													}
												],
												"src": "1410:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1631:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1648:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1651:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1641:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1641:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1641:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1542:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1754:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1771:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1774:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1764:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1764:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1764:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1665:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1845:93:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1916:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1928:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1918:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1918:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1868:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1907:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$181",
																					"nodeType": "YulIdentifier",
																					"src": "1875:31:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1875:38:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1865:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1865:49:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1858:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1858:57:7"
															},
															"nodeType": "YulIf",
															"src": "1855:77:7"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$181",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1838:5:7",
														"type": ""
													}
												],
												"src": "1788:150:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2014:106:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2098:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2107:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2110:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2100:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2100:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2100:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2037:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2089:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IMasterEntertainer_$1022",
																					"nodeType": "YulIdentifier",
																					"src": "2044:44:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2044:51:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2034:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2034:62:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2027:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2027:70:7"
															},
															"nodeType": "YulIf",
															"src": "2024:90:7"
														}
													]
												},
												"name": "validator_revert_t_contract$_IMasterEntertainer_$1022",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2007:5:7",
														"type": ""
													}
												],
												"src": "1944:176:7"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_contract$_IERC20_$181_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$181(value)\n    }\n\n    function abi_decode_t_contract$_IMasterEntertainer_$1022_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IMasterEntertainer_$1022(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$181t_contract$_IMasterEntertainer_$1022_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$181_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IMasterEntertainer_$1022_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$181(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IMasterEntertainer_$1022(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_contract$_IERC20_$181(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$181(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IMasterEntertainer_$1022(value) {\n        if iszero(eq(value, cleanup_t_contract$_IMasterEntertainer_$1022(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000d0738038062000d078339818101604052810190620000379190620000ee565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001ca565b600081519050620000d18162000196565b92915050565b600081519050620000e881620001b0565b92915050565b6000806040838503121562000108576200010762000191565b5b60006200011885828601620000c0565b92505060206200012b85828601620000d7565b9150509250929050565b6000620001428262000171565b9050919050565b6000620001568262000135565b9050919050565b60006200016a8262000135565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620001a18162000149565b8114620001ad57600080fd5b50565b620001bb816200015d565b8114620001c757600080fd5b50565b610b2d80620001da6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630a5f75b61461003b578063779690911461006b575b600080fd5b610055600480360381019061005091906105bd565b61009b565b6040516100629190610801565b60405180910390f35b61008560048036038101906100809190610606565b6101a2565b60405161009291906107df565b60405180910390f35b6000806000905060005b83518110156101985761018360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231868481518110610100576100ff610a2f565b5b60200260200101516040518263ffffffff1660e01b8152600401610124919061079b565b60206040518083038186803b15801561013c57600080fd5b505afa158015610150573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610174919061067e565b8361040c90919063ffffffff16565b91508080610190906109b7565b9150506100a5565b5080915050919050565b60606000835167ffffffffffffffff8111156101c1576101c0610a5e565b5b6040519080825280602002602001820160405280156101fa57816020015b6101e7610422565b8152602001906001900390816101df5790505b50905060005b845181101561028d5784818151811061021c5761021b610a2f565b5b602002602001015182828151811061023757610236610a2f565b5b60200260200101516000019063ffffffff16908163ffffffff1681525050600082828151811061026a57610269610a2f565b5b602002602001015160200181815250508080610285906109b7565b915050610200565b5060005b83518110156104015760005b85518110156103ed576103b7600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166394d45b598785815181106102fa576102f9610a2f565b5b602002602001015189858151811061031557610314610a2f565b5b60200260200101516040518363ffffffff1660e01b815260040161033a9291906107b6565b60206040518083038186803b15801561035257600080fd5b505afa158015610366573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038a919061067e565b84838151811061039d5761039c610a2f565b5b60200260200101516020015161040c90919063ffffffff16565b8382815181106103ca576103c9610a2f565b5b6020026020010151602001818152505080806103e5906109b7565b91505061029d565b5080806103f9906109b7565b915050610291565b508091505092915050565b6000818361041a91906108d2565b905092915050565b6040518060400160405280600063ffffffff168152602001600081525090565b600061045561045084610841565b61081c565b9050808382526020820190508285602086028201111561047857610477610a92565b5b60005b858110156104a8578161048e8882610522565b84526020840193506020830192505060018101905061047b565b5050509392505050565b60006104c56104c08461086d565b61081c565b905080838252602082019050828560208602820111156104e8576104e7610a92565b5b60005b8581101561051857816104fe88826105a8565b8452602084019350602083019250506001810190506104eb565b5050509392505050565b60008135905061053181610ab2565b92915050565b600082601f83011261054c5761054b610a8d565b5b813561055c848260208601610442565b91505092915050565b600082601f83011261057a57610579610a8d565b5b813561058a8482602086016104b2565b91505092915050565b6000815190506105a281610ac9565b92915050565b6000813590506105b781610ae0565b92915050565b6000602082840312156105d3576105d2610a9c565b5b600082013567ffffffffffffffff8111156105f1576105f0610a97565b5b6105fd84828501610537565b91505092915050565b6000806040838503121561061d5761061c610a9c565b5b600083013567ffffffffffffffff81111561063b5761063a610a97565b5b61064785828601610565565b925050602083013567ffffffffffffffff81111561066857610667610a97565b5b61067485828601610537565b9150509250929050565b60006020828403121561069457610693610a9c565b5b60006106a284828501610593565b91505092915050565b60006106b78383610730565b60408301905092915050565b6106cc81610928565b82525050565b60006106dd826108a9565b6106e781856108c1565b93506106f283610899565b8060005b8381101561072357815161070a88826106ab565b9750610715836108b4565b9250506001810190506106f6565b5085935050505092915050565b604082016000820151610746600085018261078c565b506020820151610759602085018261075f565b50505050565b6107688161095a565b82525050565b6107778161095a565b82525050565b61078681610974565b82525050565b61079581610964565b82525050565b60006020820190506107b060008301846106c3565b92915050565b60006040820190506107cb60008301856106c3565b6107d8602083018461077d565b9392505050565b600060208201905081810360008301526107f981846106d2565b905092915050565b6000602082019050610816600083018461076e565b92915050565b6000610826610837565b90506108328282610986565b919050565b6000604051905090565b600067ffffffffffffffff82111561085c5761085b610a5e565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561088857610887610a5e565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b60006108dd8261095a565b91506108e88361095a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561091d5761091c610a00565b5b828201905092915050565b60006109338261093a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600061097f82610964565b9050919050565b61098f82610aa1565b810181811067ffffffffffffffff821117156109ae576109ad610a5e565b5b80604052505050565b60006109c28261095a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109f5576109f4610a00565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610abb81610928565b8114610ac657600080fd5b50565b610ad28161095a565b8114610add57600080fd5b50565b610ae981610964565b8114610af457600080fd5b5056fea264697066735822122065743ab22d33f4c6d916256259ac4b99413c84dc1f3215d050f8fbe9b8bcc33a64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xD07 CODESIZE SUB DUP1 PUSH3 0xD07 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0xEE JUMP JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x1CA JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xD1 DUP2 PUSH3 0x196 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xE8 DUP2 PUSH3 0x1B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x108 JUMPI PUSH3 0x107 PUSH3 0x191 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x118 DUP6 DUP3 DUP7 ADD PUSH3 0xC0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x12B DUP6 DUP3 DUP7 ADD PUSH3 0xD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x142 DUP3 PUSH3 0x171 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x156 DUP3 PUSH3 0x135 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x16A DUP3 PUSH3 0x135 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1A1 DUP2 PUSH3 0x149 JUMP JUMPDEST DUP2 EQ PUSH3 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x1BB DUP2 PUSH3 0x15D JUMP JUMPDEST DUP2 EQ PUSH3 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xB2D DUP1 PUSH3 0x1DA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA5F75B6 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x77969091 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x5BD JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x801 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x606 JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x198 JUMPI PUSH2 0x183 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x100 JUMPI PUSH2 0xFF PUSH2 0xA2F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x150 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x67E JUMP JUMPDEST DUP4 PUSH2 0x40C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x190 SWAP1 PUSH2 0x9B7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA5 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C1 JUMPI PUSH2 0x1C0 PUSH2 0xA5E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1FA JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1E7 PUSH2 0x422 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1DF JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x28D JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x21C JUMPI PUSH2 0x21B PUSH2 0xA2F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x237 JUMPI PUSH2 0x236 PUSH2 0xA2F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x26A JUMPI PUSH2 0x269 PUSH2 0xA2F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x285 SWAP1 PUSH2 0x9B7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x200 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x401 JUMPI PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x3ED JUMPI PUSH2 0x3B7 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x94D45B59 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2FA JUMPI PUSH2 0x2F9 PUSH2 0xA2F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x315 JUMPI PUSH2 0x314 PUSH2 0xA2F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33A SWAP3 SWAP2 SWAP1 PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x366 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x67E JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x39D JUMPI PUSH2 0x39C PUSH2 0xA2F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x40C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3CA JUMPI PUSH2 0x3C9 PUSH2 0xA2F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x3E5 SWAP1 PUSH2 0x9B7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x29D JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x3F9 SWAP1 PUSH2 0x9B7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x291 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x41A SWAP2 SWAP1 PUSH2 0x8D2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x455 PUSH2 0x450 DUP5 PUSH2 0x841 JUMP JUMPDEST PUSH2 0x81C JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x478 JUMPI PUSH2 0x477 PUSH2 0xA92 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4A8 JUMPI DUP2 PUSH2 0x48E DUP9 DUP3 PUSH2 0x522 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x47B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C5 PUSH2 0x4C0 DUP5 PUSH2 0x86D JUMP JUMPDEST PUSH2 0x81C JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x4E8 JUMPI PUSH2 0x4E7 PUSH2 0xA92 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x518 JUMPI DUP2 PUSH2 0x4FE DUP9 DUP3 PUSH2 0x5A8 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4EB JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x531 DUP2 PUSH2 0xAB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x54C JUMPI PUSH2 0x54B PUSH2 0xA8D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x55C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x442 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x57A JUMPI PUSH2 0x579 PUSH2 0xA8D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x58A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5A2 DUP2 PUSH2 0xAC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5B7 DUP2 PUSH2 0xAE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D3 JUMPI PUSH2 0x5D2 PUSH2 0xA9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5F1 JUMPI PUSH2 0x5F0 PUSH2 0xA97 JUMP JUMPDEST JUMPDEST PUSH2 0x5FD DUP5 DUP3 DUP6 ADD PUSH2 0x537 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x61D JUMPI PUSH2 0x61C PUSH2 0xA9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x63B JUMPI PUSH2 0x63A PUSH2 0xA97 JUMP JUMPDEST JUMPDEST PUSH2 0x647 DUP6 DUP3 DUP7 ADD PUSH2 0x565 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x668 JUMPI PUSH2 0x667 PUSH2 0xA97 JUMP JUMPDEST JUMPDEST PUSH2 0x674 DUP6 DUP3 DUP7 ADD PUSH2 0x537 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x694 JUMPI PUSH2 0x693 PUSH2 0xA9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6A2 DUP5 DUP3 DUP6 ADD PUSH2 0x593 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B7 DUP4 DUP4 PUSH2 0x730 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6CC DUP2 PUSH2 0x928 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DD DUP3 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x6E7 DUP2 DUP6 PUSH2 0x8C1 JUMP JUMPDEST SWAP4 POP PUSH2 0x6F2 DUP4 PUSH2 0x899 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x723 JUMPI DUP2 MLOAD PUSH2 0x70A DUP9 DUP3 PUSH2 0x6AB JUMP JUMPDEST SWAP8 POP PUSH2 0x715 DUP4 PUSH2 0x8B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6F6 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x746 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x78C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x759 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x75F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x768 DUP2 PUSH2 0x95A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x777 DUP2 PUSH2 0x95A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x786 DUP2 PUSH2 0x974 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x795 DUP2 PUSH2 0x964 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7B0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7CB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6C3 JUMP JUMPDEST PUSH2 0x7D8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x77D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7F9 DUP2 DUP5 PUSH2 0x6D2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x816 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x76E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x826 PUSH2 0x837 JUMP JUMPDEST SWAP1 POP PUSH2 0x832 DUP3 DUP3 PUSH2 0x986 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x85C JUMPI PUSH2 0x85B PUSH2 0xA5E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x888 JUMPI PUSH2 0x887 PUSH2 0xA5E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DD DUP3 PUSH2 0x95A JUMP JUMPDEST SWAP2 POP PUSH2 0x8E8 DUP4 PUSH2 0x95A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x91D JUMPI PUSH2 0x91C PUSH2 0xA00 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x933 DUP3 PUSH2 0x93A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x97F DUP3 PUSH2 0x964 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x98F DUP3 PUSH2 0xAA1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x9AE JUMPI PUSH2 0x9AD PUSH2 0xA5E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C2 DUP3 PUSH2 0x95A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x9F5 JUMPI PUSH2 0x9F4 PUSH2 0xA00 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xABB DUP2 PUSH2 0x928 JUMP JUMPDEST DUP2 EQ PUSH2 0xAC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xAD2 DUP2 PUSH2 0x95A JUMP JUMPDEST DUP2 EQ PUSH2 0xADD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xAE9 DUP2 PUSH2 0x964 JUMP JUMPDEST DUP2 EQ PUSH2 0xAF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x743AB22D33F4 0xC6 0xD9 AND 0x25 PUSH3 0x59AC4B SWAP10 COINBASE EXTCODECOPY DUP5 0xDC 0x1F ORIGIN ISZERO 0xD0 POP 0xF8 0xFB 0xE9 0xB8 0xBC 0xC3 GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "336:1454:5:-:0;;;594:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;678:5;669:6;;:14;;;;;;;;;;;;;;;;;;715:17;694:18;;:38;;;;;;;;;;;;;;;;;;594:146;;336:1454;;7:171:7;78:5;109:6;103:13;94:22;;125:47;166:5;125:47;:::i;:::-;7:171;;;;:::o;184:197::-;268:5;299:6;293:13;284:22;;315:60;369:5;315:60;:::i;:::-;184:197;;;;:::o;387:589::-;507:6;515;564:2;552:9;543:7;539:23;535:32;532:119;;;570:79;;:::i;:::-;532:119;690:1;715:78;785:7;776:6;765:9;761:22;715:78;:::i;:::-;705:88;;661:142;842:2;868:91;951:7;942:6;931:9;927:22;868:91;:::i;:::-;858:101;;813:156;387:589;;;;;:::o;1063:96::-;1100:7;1129:24;1147:5;1129:24;:::i;:::-;1118:35;;1063:96;;;:::o;1165:110::-;1216:7;1245:24;1263:5;1245:24;:::i;:::-;1234:35;;1165:110;;;:::o;1281:123::-;1345:7;1374:24;1392:5;1374:24;:::i;:::-;1363:35;;1281:123;;;:::o;1410:126::-;1447:7;1487:42;1480:5;1476:54;1465:65;;1410:126;;;:::o;1665:117::-;1774:1;1771;1764:12;1788:150;1875:38;1907:5;1875:38;:::i;:::-;1868:5;1865:49;1855:77;;1928:1;1925;1918:12;1855:77;1788:150;:::o;1944:176::-;2044:51;2089:5;2044:51;:::i;:::-;2037:5;2034:62;2024:90;;2110:1;2107;2100:12;2024:90;1944:176;:::o;336:1454:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@GetStakedBalance_997": {
									"entryPoint": 418,
									"id": 997,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@add_674": {
									"entryPoint": 1036,
									"id": 674,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getTokenBalanceOf_892": {
									"entryPoint": 155,
									"id": 892,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1090,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint32_$dyn_memory_ptr": {
									"entryPoint": 1202,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint32_$dyn_memory_ptr": {
									"entryPoint": 1381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32": {
									"entryPoint": 1448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint32_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_struct$_Stake_$834_memory_ptr_to_t_struct$_Stake_$834_memory_ptr": {
									"entryPoint": 1707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Stake_$834_memory_ptr_to_t_struct$_Stake_$834_memory_ptr": {
									"entryPoint": 1840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint32_to_t_uint256_fromStack": {
									"entryPoint": 1917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint32_to_t_uint32": {
									"entryPoint": 1932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint32__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1974,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 2015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2103,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint32_$dyn_memory_ptr": {
									"entryPoint": 2157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 2201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 2217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 2228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 2241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 2404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint32_to_t_uint256": {
									"entryPoint": 2420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 2487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2560,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2607,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2654,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2701,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 2706,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2711,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2716,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 2784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12620:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "126:620:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "136:90:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "218:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "161:56:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "161:64:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "145:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "145:81:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "136:5:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "235:16:7",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "246:5:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "239:3:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "268:5:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "275:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "261:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "261:21:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "291:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "302:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:16:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:17:7",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "335:6:7"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "328:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:103:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "404:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "404:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "404:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "360:3:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "369:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "377:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:17:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "356:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "356:27:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "385:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "353:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:36:7"
															},
															"nodeType": "YulIf",
															"src": "350:143:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "562:178:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "577:21:7",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "595:3:7"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "581:10:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "619:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "645:10:7"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "657:3:7"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "624:20:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "624:37:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "612:50:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "612:50:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "675:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "686:3:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "691:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "682:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "682:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "675:3:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "709:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "725:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "709:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "524:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "527:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "521:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "535:18:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "537:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "546:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "549:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "542:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "542:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "537:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "506:14:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "508:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "517:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "512:1:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "502:238:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "96:6:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "104:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "112:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "120:5:7",
														"type": ""
													}
												],
												"src": "24:722:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "869:618:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "879:89:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "960:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint32_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "904:55:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "904:63:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "888:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "888:80:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "879:5:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "977:16:7",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "988:5:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "981:3:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1010:5:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1017:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1003:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1003:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1003:21:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1033:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1044:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1051:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1040:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1040:16:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1066:17:7",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1077:6:7"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1070:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1132:103:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "1146:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1146:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1146:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1102:3:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1111:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1119:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "1107:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1107:17:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1098:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1098:27:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1127:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1095:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1095:36:7"
															},
															"nodeType": "YulIf",
															"src": "1092:143:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1304:177:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1319:21:7",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "1337:3:7"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "1323:10:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1361:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "1386:10:7"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "1398:3:7"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint32",
																						"nodeType": "YulIdentifier",
																						"src": "1366:19:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1366:36:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1354:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1354:49:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1354:49:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1416:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1427:3:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1432:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1423:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1423:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1416:3:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1450:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1461:3:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1466:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1457:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1457:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1450:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1266:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1269:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1263:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1263:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1277:18:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1279:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1288:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1291:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1284:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1284:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1279:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1248:14:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1250:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1259:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "1254:1:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1244:237:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint32_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "839:6:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "847:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "855:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "863:5:7",
														"type": ""
													}
												],
												"src": "768:719:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1545:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1555:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1577:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1564:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1564:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1555:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1620:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1593:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1593:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1523:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1531:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1539:5:7",
														"type": ""
													}
												],
												"src": "1493:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1732:293:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1781:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1783:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1783:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1783:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1760:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1768:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1756:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1756:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1775:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1752:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1752:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1745:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1745:35:7"
															},
															"nodeType": "YulIf",
															"src": "1742:122:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1873:34:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1900:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1887:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1887:20:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1877:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1916:103:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1992:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2000:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1988:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1988:17:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2007:6:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2015:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1925:62:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1925:94:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1916:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1710:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1718:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1726:5:7",
														"type": ""
													}
												],
												"src": "1655:370:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2123:292:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2172:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2174:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2174:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2174:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2151:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2159:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2147:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2147:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2166:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2143:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2136:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2136:35:7"
															},
															"nodeType": "YulIf",
															"src": "2133:122:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2264:34:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2291:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2278:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2278:20:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2268:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2307:102:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2382:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2378:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2378:17:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2397:6:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2405:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint32_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2316:61:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2316:93:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2307:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint32_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2101:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2109:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2117:5:7",
														"type": ""
													}
												],
												"src": "2047:368:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2484:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2494:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2509:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2503:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2503:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2494:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2552:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2525:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2525:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2525:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2462:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2470:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2478:5:7",
														"type": ""
													}
												],
												"src": "2421:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2621:86:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2631:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2640:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2640:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2631:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2695:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "2669:25:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2669:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2669:32:7"
														}
													]
												},
												"name": "abi_decode_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2599:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2607:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2615:5:7",
														"type": ""
													}
												],
												"src": "2570:137:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2804:448:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2850:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2852:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2852:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2852:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2825:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2834:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2821:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2821:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2846:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2817:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:32:7"
															},
															"nodeType": "YulIf",
															"src": "2814:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "2943:302:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2958:45:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2989:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3000:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2985:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2985:17:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2972:12:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2972:31:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2962:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3050:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3052:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3052:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3052:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3022:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3030:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3019:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3019:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "3016:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3147:88:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3207:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3218:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3203:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3203:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3227:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3157:45:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3157:78:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3147:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2774:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2785:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2797:6:7",
														"type": ""
													}
												],
												"src": "2713:539:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3390:760:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3436:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3438:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3438:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3438:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3411:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3420:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3407:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3407:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3432:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3403:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3403:32:7"
															},
															"nodeType": "YulIf",
															"src": "3400:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "3529:301:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3544:45:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3575:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3586:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3571:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3571:17:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3558:12:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3558:31:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3548:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3636:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3638:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3638:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3638:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3608:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3616:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3605:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3605:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "3602:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3733:87:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3792:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3803:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3788:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3788:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint32_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3743:44:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3743:77:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3733:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3840:303:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3855:46:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3886:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3897:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3882:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3882:18:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3869:12:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3869:32:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3859:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3948:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3950:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3950:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3950:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3920:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3928:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3917:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3917:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "3914:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4045:88:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4105:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4116:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4101:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4101:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4125:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4055:45:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4055:78:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4045:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint32_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3352:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3363:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3375:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3383:6:7",
														"type": ""
													}
												],
												"src": "3258:892:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4233:274:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4279:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4281:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4281:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4281:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4254:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4263:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4250:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4250:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4275:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4246:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4246:32:7"
															},
															"nodeType": "YulIf",
															"src": "4243:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "4372:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4387:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4401:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4391:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4416:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4462:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4473:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4458:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4458:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4482:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4426:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4426:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4416:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4203:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4214:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4226:6:7",
														"type": ""
													}
												],
												"src": "4156:351:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4637:143:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4725:6:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4733:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Stake_$834_memory_ptr_to_t_struct$_Stake_$834_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4647:77:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4647:90:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4647:90:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4746:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4764:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4769:4:7",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4760:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4760:14:7"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "4746:10:7"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_Stake_$834_memory_ptr_to_t_struct$_Stake_$834_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4610:6:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4618:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "4626:10:7",
														"type": ""
													}
												],
												"src": "4513:267:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4851:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4868:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4891:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4873:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4873:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4861:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4861:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4861:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4839:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4846:3:7",
														"type": ""
													}
												],
												"src": "4786:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5146:740:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5156:90:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5240:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5170:69:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5170:76:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5160:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5255:115:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5358:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5363:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5262:95:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5262:108:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5255:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5379:93:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5466:5:7"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5394:71:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5394:78:7"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "5383:7:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5481:21:7",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "5495:7:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "5485:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5571:290:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5585:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5612:6:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "5606:5:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5606:13:7"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "5589:13:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5632:114:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "5727:13:7"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5742:3:7"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_Stake_$834_memory_ptr_to_t_struct$_Stake_$834_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "5639:87:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5639:107:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5632:3:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5759:92:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5844:6:7"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "5769:74:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5769:82:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5759:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5533:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5536:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5530:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5530:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5544:18:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5546:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5555:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5558:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5551:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5551:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5546:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5515:14:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5517:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5526:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "5521:1:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "5511:350:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5870:10:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5877:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5870:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5125:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5132:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5141:3:7",
														"type": ""
													}
												],
												"src": "4978:908:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6056:404:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6066:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6082:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6087:4:7",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6078:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6078:14:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "6070:4:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6102:169:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6144:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6174:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6181:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6170:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6170:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6164:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6164:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6148:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6232:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6250:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6255:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6246:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6246:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint32_to_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "6200:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6200:61:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6200:61:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6281:172:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6324:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6354:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6361:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6350:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6350:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6344:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6344:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6328:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6414:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6432:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6437:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6428:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6428:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6380:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6380:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6380:63:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Stake_$834_memory_ptr_to_t_struct$_Stake_$834_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6043:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6050:3:7",
														"type": ""
													}
												],
												"src": "5956:504:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6521:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6538:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6561:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6543:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6543:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6531:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6531:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6531:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6509:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6516:3:7",
														"type": ""
													}
												],
												"src": "6466:108:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6645:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6662:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6685:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6667:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6667:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6655:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6655:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6655:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6633:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6640:3:7",
														"type": ""
													}
												],
												"src": "6580:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6768:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6785:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6820:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_uint32_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6790:29:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6790:36:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6778:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6778:49:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6778:49:7"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6756:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6763:3:7",
														"type": ""
													}
												],
												"src": "6704:129:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6892:52:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6909:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6931:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "6914:16:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6914:23:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6902:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6902:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6902:36:7"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6880:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6887:3:7",
														"type": ""
													}
												],
												"src": "6839:105:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7048:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7058:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7070:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7081:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7066:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7066:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7058:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7138:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7151:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7162:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7147:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7147:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7094:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7094:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7094:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7020:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7032:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7043:4:7",
														"type": ""
													}
												],
												"src": "6950:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7303:205:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7313:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7325:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7336:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7321:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7321:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7313:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7393:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7406:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7417:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7402:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7402:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7349:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7349:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7349:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7473:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7486:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7497:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7482:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7482:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint32_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7430:42:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7430:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7430:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint32__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7267:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7279:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7287:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7298:4:7",
														"type": ""
													}
												],
												"src": "7178:330:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7706:269:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7716:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7728:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7739:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7724:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7724:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7716:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7763:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7774:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7759:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7759:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7782:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7788:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7778:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7778:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7752:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7752:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7752:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7808:160:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7954:6:7"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7963:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7816:137:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7816:152:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7808:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7678:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7690:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7701:4:7",
														"type": ""
													}
												],
												"src": "7514:461:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8079:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8089:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8101:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8112:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8097:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8097:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8089:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8169:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8182:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8193:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8178:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8178:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8125:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8125:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8125:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8051:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8063:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8074:4:7",
														"type": ""
													}
												],
												"src": "7981:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8250:88:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8260:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "8270:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8270:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "8260:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "8319:6:7"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8327:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "8299:19:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8299:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8299:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8234:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8243:6:7",
														"type": ""
													}
												],
												"src": "8209:129:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8384:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8394:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8410:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8404:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8404:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "8394:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8377:6:7",
														"type": ""
													}
												],
												"src": "8344:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8507:229:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8612:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8614:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8614:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8614:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8584:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8592:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8581:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8581:30:7"
															},
															"nodeType": "YulIf",
															"src": "8578:56:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8644:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8656:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8664:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8652:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8652:17:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8644:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8706:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8718:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8724:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8714:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8714:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8706:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8491:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8502:4:7",
														"type": ""
													}
												],
												"src": "8425:311:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8823:229:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8928:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8930:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8930:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8930:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8900:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8908:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8897:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8897:30:7"
															},
															"nodeType": "YulIf",
															"src": "8894:56:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8960:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8972:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8980:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8968:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8968:17:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8960:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9022:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "9034:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9040:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9030:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9030:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9022:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint32_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8807:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8818:4:7",
														"type": ""
													}
												],
												"src": "8742:310:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9152:60:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9162:11:7",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "9170:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "9162:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9183:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "9195:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9200:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9191:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9191:14:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "9183:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "9139:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9147:4:7",
														"type": ""
													}
												],
												"src": "9058:154:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9314:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9325:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9341:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9335:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9335:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9325:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9297:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9307:6:7",
														"type": ""
													}
												],
												"src": "9218:136:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9457:38:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9467:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "9479:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9484:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9475:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9475:14:7"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "9467:4:7"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "9444:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "9452:4:7",
														"type": ""
													}
												],
												"src": "9360:135:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9634:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9651:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9656:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9644:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9644:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9644:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9672:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9691:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9696:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9687:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9687:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9672:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9606:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9611:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9622:11:7",
														"type": ""
													}
												],
												"src": "9501:206:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9757:261:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9767:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9790:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9772:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9772:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9767:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9801:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9824:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9806:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9806:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9801:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9964:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9966:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9966:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9966:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9885:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9892:66:7",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9960:1:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9888:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9888:74:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9882:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9882:81:7"
															},
															"nodeType": "YulIf",
															"src": "9879:107:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9996:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10007:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10010:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10003:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10003:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9996:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9744:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9747:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9753:3:7",
														"type": ""
													}
												],
												"src": "9713:305:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10069:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10079:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10108:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10090:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10090:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10079:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10051:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10061:7:7",
														"type": ""
													}
												],
												"src": "10024:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10171:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10181:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10196:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10203:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10192:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10192:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10181:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10153:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10163:7:7",
														"type": ""
													}
												],
												"src": "10126:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10303:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10313:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10324:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10313:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10285:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10295:7:7",
														"type": ""
													}
												],
												"src": "10258:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10385:49:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10395:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10410:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10417:10:7",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10406:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10406:22:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10395:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10367:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10377:7:7",
														"type": ""
													}
												],
												"src": "10341:93:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10499:52:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10509:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10539:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "10522:16:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10522:23:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "10509:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint32_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10479:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "10489:9:7",
														"type": ""
													}
												],
												"src": "10440:111:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10600:238:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10610:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "10632:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "10662:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "10640:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10640:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10628:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10628:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "10614:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10779:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10781:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10781:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10781:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "10722:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10734:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10719:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10719:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "10758:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10770:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10755:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10755:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "10716:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10716:62:7"
															},
															"nodeType": "YulIf",
															"src": "10713:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10817:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "10821:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10810:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10810:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10810:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10586:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10594:4:7",
														"type": ""
													}
												],
												"src": "10557:281:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10887:190:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10897:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10924:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10906:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10906:24:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10897:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11020:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11022:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11022:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11022:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10945:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10952:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10942:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10942:77:7"
															},
															"nodeType": "YulIf",
															"src": "10939:103:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11051:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11062:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11069:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11058:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11058:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11051:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10873:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10883:3:7",
														"type": ""
													}
												],
												"src": "10844:233:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11111:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11128:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11131:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11121:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11121:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11121:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11225:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11228:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11218:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11218:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11218:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11249:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11252:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11242:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11242:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11242:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11083:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11297:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11314:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11317:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11307:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11307:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11307:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11411:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11414:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11404:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11404:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11404:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11435:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11438:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11428:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11428:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11428:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "11269:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11483:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11500:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11503:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11493:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11493:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11493:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11597:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11600:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11590:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11590:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11590:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11621:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11624:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11614:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11614:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11614:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "11455:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11730:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11747:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11750:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11740:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11740:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11740:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "11641:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11853:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11870:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11873:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11863:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11863:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11863:12:7"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "11764:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11976:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11993:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11996:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11986:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11986:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11986:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "11887:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12099:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12116:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12119:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12109:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12109:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12109:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "12010:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12181:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12191:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12209:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12216:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12205:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12205:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12225:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12221:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12221:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12201:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12201:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12191:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12164:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "12174:6:7",
														"type": ""
													}
												],
												"src": "12133:102:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12284:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12341:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12350:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12353:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12343:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12343:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12343:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12307:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12332:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "12314:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12314:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12304:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12304:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12297:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12297:43:7"
															},
															"nodeType": "YulIf",
															"src": "12294:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12277:5:7",
														"type": ""
													}
												],
												"src": "12241:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12412:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12469:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12478:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12481:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12471:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12471:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12471:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12435:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12460:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "12442:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12442:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12432:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12432:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12425:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12425:43:7"
															},
															"nodeType": "YulIf",
															"src": "12422:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12405:5:7",
														"type": ""
													}
												],
												"src": "12369:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12539:78:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12595:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12604:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12607:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12597:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12597:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12597:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12562:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12586:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nodeType": "YulIdentifier",
																					"src": "12569:16:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12569:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12559:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12559:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12552:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12552:42:7"
															},
															"nodeType": "YulIf",
															"src": "12549:62:7"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12532:5:7",
														"type": ""
													}
												],
												"src": "12497:120:7"
											}
										]
									},
									"contents": "{\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // uint32[]\n    function abi_decode_available_length_t_array$_t_uint32_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint32_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint32(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // uint32[]\n    function abi_decode_t_array$_t_uint32_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint32_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_uint32_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Stake_$834_memory_ptr_to_t_struct$_Stake_$834_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Stake_$834_memory_ptr_to_t_struct$_Stake_$834_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x40)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct BalanceHelper.Stake[] -> struct BalanceHelper.Stake[]\n    function abi_encode_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Stake_$834_memory_ptr_to_t_struct$_Stake_$834_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // struct BalanceHelper.Stake -> struct BalanceHelper.Stake\n    function abi_encode_t_struct$_Stake_$834_memory_ptr_to_t_struct$_Stake_$834_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // VestingDays\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // TokenBalance\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint32_to_t_uint256(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint32__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint32_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function convert_t_uint32_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint32(value)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80630a5f75b61461003b578063779690911461006b575b600080fd5b610055600480360381019061005091906105bd565b61009b565b6040516100629190610801565b60405180910390f35b61008560048036038101906100809190610606565b6101a2565b60405161009291906107df565b60405180910390f35b6000806000905060005b83518110156101985761018360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231868481518110610100576100ff610a2f565b5b60200260200101516040518263ffffffff1660e01b8152600401610124919061079b565b60206040518083038186803b15801561013c57600080fd5b505afa158015610150573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610174919061067e565b8361040c90919063ffffffff16565b91508080610190906109b7565b9150506100a5565b5080915050919050565b60606000835167ffffffffffffffff8111156101c1576101c0610a5e565b5b6040519080825280602002602001820160405280156101fa57816020015b6101e7610422565b8152602001906001900390816101df5790505b50905060005b845181101561028d5784818151811061021c5761021b610a2f565b5b602002602001015182828151811061023757610236610a2f565b5b60200260200101516000019063ffffffff16908163ffffffff1681525050600082828151811061026a57610269610a2f565b5b602002602001015160200181815250508080610285906109b7565b915050610200565b5060005b83518110156104015760005b85518110156103ed576103b7600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166394d45b598785815181106102fa576102f9610a2f565b5b602002602001015189858151811061031557610314610a2f565b5b60200260200101516040518363ffffffff1660e01b815260040161033a9291906107b6565b60206040518083038186803b15801561035257600080fd5b505afa158015610366573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038a919061067e565b84838151811061039d5761039c610a2f565b5b60200260200101516020015161040c90919063ffffffff16565b8382815181106103ca576103c9610a2f565b5b6020026020010151602001818152505080806103e5906109b7565b91505061029d565b5080806103f9906109b7565b915050610291565b508091505092915050565b6000818361041a91906108d2565b905092915050565b6040518060400160405280600063ffffffff168152602001600081525090565b600061045561045084610841565b61081c565b9050808382526020820190508285602086028201111561047857610477610a92565b5b60005b858110156104a8578161048e8882610522565b84526020840193506020830192505060018101905061047b565b5050509392505050565b60006104c56104c08461086d565b61081c565b905080838252602082019050828560208602820111156104e8576104e7610a92565b5b60005b8581101561051857816104fe88826105a8565b8452602084019350602083019250506001810190506104eb565b5050509392505050565b60008135905061053181610ab2565b92915050565b600082601f83011261054c5761054b610a8d565b5b813561055c848260208601610442565b91505092915050565b600082601f83011261057a57610579610a8d565b5b813561058a8482602086016104b2565b91505092915050565b6000815190506105a281610ac9565b92915050565b6000813590506105b781610ae0565b92915050565b6000602082840312156105d3576105d2610a9c565b5b600082013567ffffffffffffffff8111156105f1576105f0610a97565b5b6105fd84828501610537565b91505092915050565b6000806040838503121561061d5761061c610a9c565b5b600083013567ffffffffffffffff81111561063b5761063a610a97565b5b61064785828601610565565b925050602083013567ffffffffffffffff81111561066857610667610a97565b5b61067485828601610537565b9150509250929050565b60006020828403121561069457610693610a9c565b5b60006106a284828501610593565b91505092915050565b60006106b78383610730565b60408301905092915050565b6106cc81610928565b82525050565b60006106dd826108a9565b6106e781856108c1565b93506106f283610899565b8060005b8381101561072357815161070a88826106ab565b9750610715836108b4565b9250506001810190506106f6565b5085935050505092915050565b604082016000820151610746600085018261078c565b506020820151610759602085018261075f565b50505050565b6107688161095a565b82525050565b6107778161095a565b82525050565b61078681610974565b82525050565b61079581610964565b82525050565b60006020820190506107b060008301846106c3565b92915050565b60006040820190506107cb60008301856106c3565b6107d8602083018461077d565b9392505050565b600060208201905081810360008301526107f981846106d2565b905092915050565b6000602082019050610816600083018461076e565b92915050565b6000610826610837565b90506108328282610986565b919050565b6000604051905090565b600067ffffffffffffffff82111561085c5761085b610a5e565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561088857610887610a5e565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b60006108dd8261095a565b91506108e88361095a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561091d5761091c610a00565b5b828201905092915050565b60006109338261093a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600061097f82610964565b9050919050565b61098f82610aa1565b810181811067ffffffffffffffff821117156109ae576109ad610a5e565b5b80604052505050565b60006109c28261095a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109f5576109f4610a00565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610abb81610928565b8114610ac657600080fd5b50565b610ad28161095a565b8114610add57600080fd5b50565b610ae981610964565b8114610af457600080fd5b5056fea264697066735822122065743ab22d33f4c6d916256259ac4b99413c84dc1f3215d050f8fbe9b8bcc33a64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA5F75B6 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x77969091 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x5BD JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x801 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x606 JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x198 JUMPI PUSH2 0x183 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x100 JUMPI PUSH2 0xFF PUSH2 0xA2F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x150 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x67E JUMP JUMPDEST DUP4 PUSH2 0x40C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x190 SWAP1 PUSH2 0x9B7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA5 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C1 JUMPI PUSH2 0x1C0 PUSH2 0xA5E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1FA JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1E7 PUSH2 0x422 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1DF JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x28D JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x21C JUMPI PUSH2 0x21B PUSH2 0xA2F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x237 JUMPI PUSH2 0x236 PUSH2 0xA2F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x26A JUMPI PUSH2 0x269 PUSH2 0xA2F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x285 SWAP1 PUSH2 0x9B7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x200 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x401 JUMPI PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x3ED JUMPI PUSH2 0x3B7 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x94D45B59 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2FA JUMPI PUSH2 0x2F9 PUSH2 0xA2F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x315 JUMPI PUSH2 0x314 PUSH2 0xA2F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33A SWAP3 SWAP2 SWAP1 PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x366 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x67E JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x39D JUMPI PUSH2 0x39C PUSH2 0xA2F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x40C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3CA JUMPI PUSH2 0x3C9 PUSH2 0xA2F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x3E5 SWAP1 PUSH2 0x9B7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x29D JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x3F9 SWAP1 PUSH2 0x9B7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x291 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x41A SWAP2 SWAP1 PUSH2 0x8D2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x455 PUSH2 0x450 DUP5 PUSH2 0x841 JUMP JUMPDEST PUSH2 0x81C JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x478 JUMPI PUSH2 0x477 PUSH2 0xA92 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4A8 JUMPI DUP2 PUSH2 0x48E DUP9 DUP3 PUSH2 0x522 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x47B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C5 PUSH2 0x4C0 DUP5 PUSH2 0x86D JUMP JUMPDEST PUSH2 0x81C JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x4E8 JUMPI PUSH2 0x4E7 PUSH2 0xA92 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x518 JUMPI DUP2 PUSH2 0x4FE DUP9 DUP3 PUSH2 0x5A8 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4EB JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x531 DUP2 PUSH2 0xAB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x54C JUMPI PUSH2 0x54B PUSH2 0xA8D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x55C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x442 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x57A JUMPI PUSH2 0x579 PUSH2 0xA8D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x58A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5A2 DUP2 PUSH2 0xAC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5B7 DUP2 PUSH2 0xAE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D3 JUMPI PUSH2 0x5D2 PUSH2 0xA9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5F1 JUMPI PUSH2 0x5F0 PUSH2 0xA97 JUMP JUMPDEST JUMPDEST PUSH2 0x5FD DUP5 DUP3 DUP6 ADD PUSH2 0x537 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x61D JUMPI PUSH2 0x61C PUSH2 0xA9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x63B JUMPI PUSH2 0x63A PUSH2 0xA97 JUMP JUMPDEST JUMPDEST PUSH2 0x647 DUP6 DUP3 DUP7 ADD PUSH2 0x565 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x668 JUMPI PUSH2 0x667 PUSH2 0xA97 JUMP JUMPDEST JUMPDEST PUSH2 0x674 DUP6 DUP3 DUP7 ADD PUSH2 0x537 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x694 JUMPI PUSH2 0x693 PUSH2 0xA9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6A2 DUP5 DUP3 DUP6 ADD PUSH2 0x593 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B7 DUP4 DUP4 PUSH2 0x730 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6CC DUP2 PUSH2 0x928 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DD DUP3 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x6E7 DUP2 DUP6 PUSH2 0x8C1 JUMP JUMPDEST SWAP4 POP PUSH2 0x6F2 DUP4 PUSH2 0x899 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x723 JUMPI DUP2 MLOAD PUSH2 0x70A DUP9 DUP3 PUSH2 0x6AB JUMP JUMPDEST SWAP8 POP PUSH2 0x715 DUP4 PUSH2 0x8B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6F6 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x746 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x78C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x759 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x75F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x768 DUP2 PUSH2 0x95A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x777 DUP2 PUSH2 0x95A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x786 DUP2 PUSH2 0x974 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x795 DUP2 PUSH2 0x964 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7B0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7CB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6C3 JUMP JUMPDEST PUSH2 0x7D8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x77D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7F9 DUP2 DUP5 PUSH2 0x6D2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x816 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x76E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x826 PUSH2 0x837 JUMP JUMPDEST SWAP1 POP PUSH2 0x832 DUP3 DUP3 PUSH2 0x986 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x85C JUMPI PUSH2 0x85B PUSH2 0xA5E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x888 JUMPI PUSH2 0x887 PUSH2 0xA5E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DD DUP3 PUSH2 0x95A JUMP JUMPDEST SWAP2 POP PUSH2 0x8E8 DUP4 PUSH2 0x95A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x91D JUMPI PUSH2 0x91C PUSH2 0xA00 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x933 DUP3 PUSH2 0x93A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x97F DUP3 PUSH2 0x964 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x98F DUP3 PUSH2 0xAA1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x9AE JUMPI PUSH2 0x9AD PUSH2 0xA5E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C2 DUP3 PUSH2 0x95A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x9F5 JUMPI PUSH2 0x9F4 PUSH2 0xA00 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xABB DUP2 PUSH2 0x928 JUMP JUMPDEST DUP2 EQ PUSH2 0xAC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xAD2 DUP2 PUSH2 0x95A JUMP JUMPDEST DUP2 EQ PUSH2 0xADD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xAE9 DUP2 PUSH2 0x964 JUMP JUMPDEST DUP2 EQ PUSH2 0xAF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x743AB22D33F4 0xC6 0xD9 AND 0x25 PUSH3 0x59AC4B SWAP10 COINBASE EXTCODECOPY DUP5 0xDC 0x1F ORIGIN ISZERO 0xD0 POP 0xF8 0xFB 0xE9 0xB8 0xBC 0xC3 GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "336:1454:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;748:323;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1079:700;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;748:323;827:7;847:20;870:1;847:24;;887:6;882:152;903:13;:20;899:1;:24;882:152;;;970:52;987:6;;;;;;;;;;:16;;;1004:13;1018:1;1004:16;;;;;;;;:::i;:::-;;;;;;;;987:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;970:12;:16;;:52;;;;:::i;:::-;955:67;;925:3;;;;;:::i;:::-;;;;882:152;;;;1051:12;1044:19;;;748:323;;;:::o;1079:700::-;1186:14;1213:21;1249:11;:18;1237:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1213:55;;1284:6;1279:162;1300:11;:18;1296:1;:22;1279:162;;;1374:11;1386:1;1374:14;;;;;;;;:::i;:::-;;;;;;;;1350:6;1357:1;1350:9;;;;;;;;:::i;:::-;;;;;;;;:21;;:38;;;;;;;;;;;1428:1;1403:6;1410:1;1403:9;;;;;;;;:::i;:::-;;;;;;;;:22;;:26;;;;;1320:3;;;;;:::i;:::-;;;;1279:162;;;;1456:6;1451:297;1472:13;:20;1468:1;:24;1451:297;;;1529:6;1524:213;1545:11;:18;1541:1;:22;1524:213;;;1628:93;1655:18;;;;;;;;;;;:31;;;1687:13;1701:1;1687:16;;;;;;;;:::i;:::-;;;;;;;;1705:11;1717:1;1705:14;;;;;;;;:::i;:::-;;;;;;;;1655:65;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1628:6;1635:1;1628:9;;;;;;;;:::i;:::-;;;;;;;;:22;;;:26;;:93;;;;:::i;:::-;1603:6;1610:1;1603:9;;;;;;;;:::i;:::-;;;;;;;;:22;;:118;;;;;1565:3;;;;;:::i;:::-;;;;1524:213;;;;1494:3;;;;;:::i;:::-;;;;1451:297;;;;1765:6;1758:13;;;1079:700;;;;:::o;2672:96:4:-;2730:7;2760:1;2756;:5;;;;:::i;:::-;2749:12;;2672:96;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::o;24:722:7:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;768:719::-;863:5;888:80;904:63;960:6;904:63;:::i;:::-;888:80;:::i;:::-;879:89;;988:5;1017:6;1010:5;1003:21;1051:4;1044:5;1040:16;1033:23;;1077:6;1127:3;1119:4;1111:6;1107:17;1102:3;1098:27;1095:36;1092:143;;;1146:79;;:::i;:::-;1092:143;1259:1;1244:237;1269:6;1266:1;1263:13;1244:237;;;1337:3;1366:36;1398:3;1386:10;1366:36;:::i;:::-;1361:3;1354:49;1432:4;1427:3;1423:14;1416:21;;1466:4;1461:3;1457:14;1450:21;;1304:177;1291:1;1288;1284:9;1279:14;;1244:237;;;1248:14;869:618;;768:719;;;;;:::o;1493:139::-;1539:5;1577:6;1564:20;1555:29;;1593:33;1620:5;1593:33;:::i;:::-;1493:139;;;;:::o;1655:370::-;1726:5;1775:3;1768:4;1760:6;1756:17;1752:27;1742:122;;1783:79;;:::i;:::-;1742:122;1900:6;1887:20;1925:94;2015:3;2007:6;2000:4;1992:6;1988:17;1925:94;:::i;:::-;1916:103;;1732:293;1655:370;;;;:::o;2047:368::-;2117:5;2166:3;2159:4;2151:6;2147:17;2143:27;2133:122;;2174:79;;:::i;:::-;2133:122;2291:6;2278:20;2316:93;2405:3;2397:6;2390:4;2382:6;2378:17;2316:93;:::i;:::-;2307:102;;2123:292;2047:368;;;;:::o;2421:143::-;2478:5;2509:6;2503:13;2494:22;;2525:33;2552:5;2525:33;:::i;:::-;2421:143;;;;:::o;2570:137::-;2615:5;2653:6;2640:20;2631:29;;2669:32;2695:5;2669:32;:::i;:::-;2570:137;;;;:::o;2713:539::-;2797:6;2846:2;2834:9;2825:7;2821:23;2817:32;2814:119;;;2852:79;;:::i;:::-;2814:119;3000:1;2989:9;2985:17;2972:31;3030:18;3022:6;3019:30;3016:117;;;3052:79;;:::i;:::-;3016:117;3157:78;3227:7;3218:6;3207:9;3203:22;3157:78;:::i;:::-;3147:88;;2943:302;2713:539;;;;:::o;3258:892::-;3375:6;3383;3432:2;3420:9;3411:7;3407:23;3403:32;3400:119;;;3438:79;;:::i;:::-;3400:119;3586:1;3575:9;3571:17;3558:31;3616:18;3608:6;3605:30;3602:117;;;3638:79;;:::i;:::-;3602:117;3743:77;3812:7;3803:6;3792:9;3788:22;3743:77;:::i;:::-;3733:87;;3529:301;3897:2;3886:9;3882:18;3869:32;3928:18;3920:6;3917:30;3914:117;;;3950:79;;:::i;:::-;3914:117;4055:78;4125:7;4116:6;4105:9;4101:22;4055:78;:::i;:::-;4045:88;;3840:303;3258:892;;;;;:::o;4156:351::-;4226:6;4275:2;4263:9;4254:7;4250:23;4246:32;4243:119;;;4281:79;;:::i;:::-;4243:119;4401:1;4426:64;4482:7;4473:6;4462:9;4458:22;4426:64;:::i;:::-;4416:74;;4372:128;4156:351;;;;:::o;4513:267::-;4626:10;4647:90;4733:3;4725:6;4647:90;:::i;:::-;4769:4;4764:3;4760:14;4746:28;;4513:267;;;;:::o;4786:118::-;4873:24;4891:5;4873:24;:::i;:::-;4868:3;4861:37;4786:118;;:::o;4978:908::-;5141:3;5170:76;5240:5;5170:76;:::i;:::-;5262:108;5363:6;5358:3;5262:108;:::i;:::-;5255:115;;5394:78;5466:5;5394:78;:::i;:::-;5495:7;5526:1;5511:350;5536:6;5533:1;5530:13;5511:350;;;5612:6;5606:13;5639:107;5742:3;5727:13;5639:107;:::i;:::-;5632:114;;5769:82;5844:6;5769:82;:::i;:::-;5759:92;;5571:290;5558:1;5555;5551:9;5546:14;;5511:350;;;5515:14;5877:3;5870:10;;5146:740;;;4978:908;;;;:::o;5956:504::-;6087:4;6082:3;6078:14;6181:4;6174:5;6170:16;6164:23;6200:61;6255:4;6250:3;6246:14;6232:12;6200:61;:::i;:::-;6102:169;6361:4;6354:5;6350:16;6344:23;6380:63;6437:4;6432:3;6428:14;6414:12;6380:63;:::i;:::-;6281:172;6056:404;5956:504;;:::o;6466:108::-;6543:24;6561:5;6543:24;:::i;:::-;6538:3;6531:37;6466:108;;:::o;6580:118::-;6667:24;6685:5;6667:24;:::i;:::-;6662:3;6655:37;6580:118;;:::o;6704:129::-;6790:36;6820:5;6790:36;:::i;:::-;6785:3;6778:49;6704:129;;:::o;6839:105::-;6914:23;6931:5;6914:23;:::i;:::-;6909:3;6902:36;6839:105;;:::o;6950:222::-;7043:4;7081:2;7070:9;7066:18;7058:26;;7094:71;7162:1;7151:9;7147:17;7138:6;7094:71;:::i;:::-;6950:222;;;;:::o;7178:330::-;7298:4;7336:2;7325:9;7321:18;7313:26;;7349:71;7417:1;7406:9;7402:17;7393:6;7349:71;:::i;:::-;7430;7497:2;7486:9;7482:18;7473:6;7430:71;:::i;:::-;7178:330;;;;;:::o;7514:461::-;7701:4;7739:2;7728:9;7724:18;7716:26;;7788:9;7782:4;7778:20;7774:1;7763:9;7759:17;7752:47;7816:152;7963:4;7954:6;7816:152;:::i;:::-;7808:160;;7514:461;;;;:::o;7981:222::-;8074:4;8112:2;8101:9;8097:18;8089:26;;8125:71;8193:1;8182:9;8178:17;8169:6;8125:71;:::i;:::-;7981:222;;;;:::o;8209:129::-;8243:6;8270:20;;:::i;:::-;8260:30;;8299:33;8327:4;8319:6;8299:33;:::i;:::-;8209:129;;;:::o;8344:75::-;8377:6;8410:2;8404:9;8394:19;;8344:75;:::o;8425:311::-;8502:4;8592:18;8584:6;8581:30;8578:56;;;8614:18;;:::i;:::-;8578:56;8664:4;8656:6;8652:17;8644:25;;8724:4;8718;8714:15;8706:23;;8425:311;;;:::o;8742:310::-;8818:4;8908:18;8900:6;8897:30;8894:56;;;8930:18;;:::i;:::-;8894:56;8980:4;8972:6;8968:17;8960:25;;9040:4;9034;9030:15;9022:23;;8742:310;;;:::o;9058:154::-;9147:4;9170:3;9162:11;;9200:4;9195:3;9191:14;9183:22;;9058:154;;;:::o;9218:136::-;9307:6;9341:5;9335:12;9325:22;;9218:136;;;:::o;9360:135::-;9452:4;9484;9479:3;9475:14;9467:22;;9360:135;;;:::o;9501:206::-;9622:11;9656:6;9651:3;9644:19;9696:4;9691:3;9687:14;9672:29;;9501:206;;;;:::o;9713:305::-;9753:3;9772:20;9790:1;9772:20;:::i;:::-;9767:25;;9806:20;9824:1;9806:20;:::i;:::-;9801:25;;9960:1;9892:66;9888:74;9885:1;9882:81;9879:107;;;9966:18;;:::i;:::-;9879:107;10010:1;10007;10003:9;9996:16;;9713:305;;;;:::o;10024:96::-;10061:7;10090:24;10108:5;10090:24;:::i;:::-;10079:35;;10024:96;;;:::o;10126:126::-;10163:7;10203:42;10196:5;10192:54;10181:65;;10126:126;;;:::o;10258:77::-;10295:7;10324:5;10313:16;;10258:77;;;:::o;10341:93::-;10377:7;10417:10;10410:5;10406:22;10395:33;;10341:93;;;:::o;10440:111::-;10489:9;10522:23;10539:5;10522:23;:::i;:::-;10509:36;;10440:111;;;:::o;10557:281::-;10640:27;10662:4;10640:27;:::i;:::-;10632:6;10628:40;10770:6;10758:10;10755:22;10734:18;10722:10;10719:34;10716:62;10713:88;;;10781:18;;:::i;:::-;10713:88;10821:10;10817:2;10810:22;10600:238;10557:281;;:::o;10844:233::-;10883:3;10906:24;10924:5;10906:24;:::i;:::-;10897:33;;10952:66;10945:5;10942:77;10939:103;;;11022:18;;:::i;:::-;10939:103;11069:1;11062:5;11058:13;11051:20;;10844:233;;;:::o;11083:180::-;11131:77;11128:1;11121:88;11228:4;11225:1;11218:15;11252:4;11249:1;11242:15;11269:180;11317:77;11314:1;11307:88;11414:4;11411:1;11404:15;11438:4;11435:1;11428:15;11455:180;11503:77;11500:1;11493:88;11600:4;11597:1;11590:15;11624:4;11621:1;11614:15;11641:117;11750:1;11747;11740:12;11764:117;11873:1;11870;11863:12;11887:117;11996:1;11993;11986:12;12010:117;12119:1;12116;12109:12;12133:102;12174:6;12225:2;12221:7;12216:2;12209:5;12205:14;12201:28;12191:38;;12133:102;;;:::o;12241:122::-;12314:24;12332:5;12314:24;:::i;:::-;12307:5;12304:35;12294:63;;12353:1;12350;12343:12;12294:63;12241:122;:::o;12369:::-;12442:24;12460:5;12442:24;:::i;:::-;12435:5;12432:35;12422:63;;12481:1;12478;12471:12;12422:63;12369:122;:::o;12497:120::-;12569:23;12586:5;12569:23;:::i;:::-;12562:5;12559:34;12549:62;;12607:1;12604;12597:12;12549:62;12497:120;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "572200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"GetStakedBalance(uint32[],address[])": "infinite",
								"getTokenBalanceOf(address[])": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 336,
									"end": 1790,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 336,
									"end": 1790,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 336,
									"end": 1790,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 594,
									"end": 740,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 594,
									"end": 740,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 594,
									"end": 740,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 594,
									"end": 740,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 594,
									"end": 740,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 594,
									"end": 740,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 594,
									"end": 740,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 594,
									"end": 740,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 594,
									"end": 740,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 678,
									"end": 683,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 669,
									"end": 675,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 669,
									"end": 675,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 669,
									"end": 683,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 669,
									"end": 683,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 669,
									"end": 683,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 669,
									"end": 683,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 669,
									"end": 683,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 669,
									"end": 683,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 669,
									"end": 683,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 669,
									"end": 683,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 669,
									"end": 683,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 669,
									"end": 683,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 669,
									"end": 683,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 669,
									"end": 683,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 669,
									"end": 683,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 669,
									"end": 683,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 669,
									"end": 683,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 669,
									"end": 683,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 669,
									"end": 683,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 669,
									"end": 683,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 715,
									"end": 732,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 694,
									"end": 712,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 694,
									"end": 712,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 694,
									"end": 732,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 694,
									"end": 732,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 694,
									"end": 732,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 694,
									"end": 732,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 694,
									"end": 732,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 694,
									"end": 732,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 694,
									"end": 732,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 694,
									"end": 732,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 694,
									"end": 732,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 694,
									"end": 732,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 694,
									"end": 732,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 694,
									"end": 732,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 694,
									"end": 732,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 694,
									"end": 732,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 694,
									"end": 732,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 694,
									"end": 732,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 694,
									"end": 732,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 694,
									"end": 732,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 594,
									"end": 740,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 336,
									"end": 1790,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 336,
									"end": 1790,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 178,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 178,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 78,
									"end": 83,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 115,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 103,
									"end": 116,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 94,
									"end": 116,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 94,
									"end": 116,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 125,
									"end": 172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 166,
									"end": 171,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 125,
									"end": 172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 125,
									"end": 172,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 125,
									"end": 172,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 125,
									"end": 172,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7,
									"end": 178,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7,
									"end": 178,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7,
									"end": 178,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 178,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 178,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 184,
									"end": 381,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 184,
									"end": 381,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 268,
									"end": 273,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 299,
									"end": 305,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 293,
									"end": 306,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 284,
									"end": 306,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 284,
									"end": 306,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 315,
									"end": 375,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 369,
									"end": 374,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 315,
									"end": 375,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 315,
									"end": 375,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 315,
									"end": 375,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 315,
									"end": 375,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 184,
									"end": 381,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 184,
									"end": 381,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 184,
									"end": 381,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 184,
									"end": 381,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 184,
									"end": 381,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 387,
									"end": 976,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 387,
									"end": 976,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 507,
									"end": 513,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 515,
									"end": 521,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 564,
									"end": 566,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 552,
									"end": 561,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 543,
									"end": 550,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 539,
									"end": 562,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 535,
									"end": 567,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 532,
									"end": 651,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 532,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 532,
									"end": 651,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 570,
									"end": 649,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 570,
									"end": 649,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 570,
									"end": 649,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 570,
									"end": 649,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 570,
									"end": 649,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 532,
									"end": 651,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 532,
									"end": 651,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 690,
									"end": 691,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 715,
									"end": 793,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 785,
									"end": 792,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 776,
									"end": 782,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 765,
									"end": 774,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 761,
									"end": 783,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 715,
									"end": 793,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 715,
									"end": 793,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 715,
									"end": 793,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 715,
									"end": 793,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 705,
									"end": 793,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 705,
									"end": 793,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 661,
									"end": 803,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 842,
									"end": 844,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 868,
									"end": 959,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 951,
									"end": 958,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 931,
									"end": 940,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 927,
									"end": 949,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 868,
									"end": 959,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 868,
									"end": 959,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 868,
									"end": 959,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 868,
									"end": 959,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 858,
									"end": 959,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 858,
									"end": 959,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 813,
									"end": 969,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 387,
									"end": 976,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 387,
									"end": 976,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 387,
									"end": 976,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 387,
									"end": 976,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 387,
									"end": 976,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 387,
									"end": 976,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1063,
									"end": 1159,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1063,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1100,
									"end": 1107,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1129,
									"end": 1153,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1147,
									"end": 1152,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1129,
									"end": 1153,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1129,
									"end": 1153,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1129,
									"end": 1153,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1129,
									"end": 1153,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1118,
									"end": 1153,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1118,
									"end": 1153,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1063,
									"end": 1159,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1063,
									"end": 1159,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1063,
									"end": 1159,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1063,
									"end": 1159,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1165,
									"end": 1275,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1165,
									"end": 1275,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1223,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 1269,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1263,
									"end": 1268,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1269,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 1269,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1245,
									"end": 1269,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1245,
									"end": 1269,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1234,
									"end": 1269,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1234,
									"end": 1269,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1165,
									"end": 1275,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1165,
									"end": 1275,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1165,
									"end": 1275,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1165,
									"end": 1275,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1281,
									"end": 1404,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1281,
									"end": 1404,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1345,
									"end": 1352,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1374,
									"end": 1398,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1392,
									"end": 1397,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1374,
									"end": 1398,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1374,
									"end": 1398,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1374,
									"end": 1398,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1374,
									"end": 1398,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1363,
									"end": 1398,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1363,
									"end": 1398,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1281,
									"end": 1404,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1281,
									"end": 1404,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1281,
									"end": 1404,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1281,
									"end": 1404,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1410,
									"end": 1536,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1410,
									"end": 1536,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1454,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1487,
									"end": 1529,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1480,
									"end": 1485,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1476,
									"end": 1530,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1530,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1530,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1410,
									"end": 1536,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1410,
									"end": 1536,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1410,
									"end": 1536,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1410,
									"end": 1536,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1665,
									"end": 1782,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1665,
									"end": 1782,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1774,
									"end": 1775,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1771,
									"end": 1772,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1764,
									"end": 1776,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1788,
									"end": 1938,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1788,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1875,
									"end": 1913,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1907,
									"end": 1912,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1875,
									"end": 1913,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1875,
									"end": 1913,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1875,
									"end": 1913,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1875,
									"end": 1913,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1868,
									"end": 1873,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1914,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1855,
									"end": 1932,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1928,
									"end": 1929,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1925,
									"end": 1926,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1918,
									"end": 1930,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 1932,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1855,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1788,
									"end": 1938,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1788,
									"end": 1938,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1944,
									"end": 2120,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 1944,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2044,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 2089,
									"end": 2094,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2044,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 2044,
									"end": 2095,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2044,
									"end": 2095,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 2044,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2037,
									"end": 2042,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2034,
									"end": 2096,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 2024,
									"end": 2114,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 2024,
									"end": 2114,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2110,
									"end": 2111,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2107,
									"end": 2108,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2100,
									"end": 2112,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2024,
									"end": 2114,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 2024,
									"end": 2114,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1944,
									"end": 2120,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1944,
									"end": 2120,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 336,
									"end": 1790,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 336,
									"end": 1790,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 336,
									"end": 1790,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 336,
									"end": 1790,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 336,
									"end": 1790,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 336,
									"end": 1790,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 1790,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 336,
									"end": 1790,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 1790,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122065743ab22d33f4c6d916256259ac4b99413c84dc1f3215d050f8fbe9b8bcc33a64736f6c63430008070033",
									".code": [
										{
											"begin": 336,
											"end": 1790,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "PUSH",
											"source": 5,
											"value": "A5F75B6"
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "PUSH",
											"source": 5,
											"value": "77969091"
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1790,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 827,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 867,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 870,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 847,
											"end": 871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 887,
											"end": 893,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 1034,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 882,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 903,
											"end": 916,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 903,
											"end": 923,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 899,
											"end": 900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 899,
											"end": 923,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 882,
											"end": 1034,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 882,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 882,
											"end": 1034,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 987,
											"end": 993,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 987,
											"end": 993,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 987,
											"end": 993,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 987,
											"end": 993,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 987,
											"end": 993,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 987,
											"end": 993,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 987,
											"end": 993,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 987,
											"end": 993,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 987,
											"end": 993,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 987,
											"end": 993,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1003,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 987,
											"end": 1003,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1003,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1004,
											"end": 1017,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1019,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1020,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1020,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1004,
											"end": 1020,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1004,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1004,
											"end": 1020,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1004,
											"end": 1020,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1004,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1020,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1004,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1020,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 1020,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1020,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 1020,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1020,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1020,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 987,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 970,
											"end": 982,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 970,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 970,
											"end": 986,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1022,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1022,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 970,
											"end": 1022,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 970,
											"end": 1022,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 970,
											"end": 1022,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 970,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1022,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1022,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 925,
											"end": 928,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 925,
											"end": 928,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 925,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 925,
											"end": 928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 925,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 925,
											"end": 928,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 925,
											"end": 928,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 925,
											"end": 928,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 925,
											"end": 928,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 925,
											"end": 928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 925,
											"end": 928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 882,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 882,
											"end": 1034,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 882,
											"end": 1034,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 882,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 882,
											"end": 1034,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1051,
											"end": 1063,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1063,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1063,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1063,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 748,
											"end": 1071,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1186,
											"end": 1200,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1260,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1267,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1213,
											"end": 1268,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1213,
											"end": 1268,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 1441,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1279,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1311,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1318,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1297,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1318,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1279,
											"end": 1441,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1279,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1279,
											"end": 1441,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1385,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1387,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1356,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1358,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1350,
											"end": 1388,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1350,
											"end": 1388,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1388,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1429,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 1409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1410,
											"end": 1411,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1429,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1429,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1429,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1429,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1429,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1323,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1323,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1320,
											"end": 1323,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1320,
											"end": 1323,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1320,
											"end": 1323,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1320,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1323,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1323,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1323,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1279,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1279,
											"end": 1441,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1279,
											"end": 1441,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1279,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1279,
											"end": 1441,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1456,
											"end": 1462,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1451,
											"end": 1748,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1451,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1472,
											"end": 1485,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1472,
											"end": 1492,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 1469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 1492,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1451,
											"end": 1748,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1451,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1451,
											"end": 1748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1535,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1737,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1524,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1545,
											"end": 1556,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1545,
											"end": 1563,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1542,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1563,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1524,
											"end": 1737,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1524,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1524,
											"end": 1737,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1655,
											"end": 1673,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1655,
											"end": 1673,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1655,
											"end": 1673,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1673,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1673,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1673,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1655,
											"end": 1673,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1673,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1673,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1673,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1655,
											"end": 1673,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1686,
											"name": "PUSH",
											"source": 5,
											"value": "94D45B59"
										},
										{
											"begin": 1687,
											"end": 1700,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1705,
											"end": 1716,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1705,
											"end": 1719,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1705,
											"end": 1719,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1705,
											"end": 1719,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1705,
											"end": 1719,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1705,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1705,
											"end": 1719,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1705,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1705,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1705,
											"end": 1719,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1705,
											"end": 1719,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1705,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1705,
											"end": 1719,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1705,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1705,
											"end": 1719,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1705,
											"end": 1719,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1705,
											"end": 1719,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1705,
											"end": 1719,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1705,
											"end": 1719,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1705,
											"end": 1719,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1655,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1634,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1636,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1650,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1650,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1650,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1628,
											"end": 1654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1721,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1721,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1628,
											"end": 1721,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1721,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1628,
											"end": 1721,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1628,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1609,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1611,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1625,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1603,
											"end": 1625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1568,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1568,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1565,
											"end": 1568,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1565,
											"end": 1568,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1565,
											"end": 1568,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1565,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1568,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1568,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1568,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1524,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1524,
											"end": 1737,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1524,
											"end": 1737,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1524,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1524,
											"end": 1737,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1494,
											"end": 1497,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1494,
											"end": 1497,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1494,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1494,
											"end": 1497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1494,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1494,
											"end": 1497,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1494,
											"end": 1497,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1494,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1494,
											"end": 1497,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1494,
											"end": 1497,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1494,
											"end": 1497,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1451,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1451,
											"end": 1748,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1451,
											"end": 1748,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1451,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1451,
											"end": 1748,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1771,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1758,
											"end": 1771,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1758,
											"end": 1771,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1758,
											"end": 1771,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1779,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2761,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2757,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2749,
											"end": 2761,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2749,
											"end": 2761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 120,
											"end": 125,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 218,
											"end": 224,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 136,
											"end": 226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 136,
											"end": 226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 246,
											"end": 251,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 275,
											"end": 281,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 268,
											"end": 273,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 309,
											"end": 313,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 307,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 298,
											"end": 314,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 291,
											"end": 314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 335,
											"end": 341,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 385,
											"end": 388,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 377,
											"end": 381,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 375,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 365,
											"end": 382,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 360,
											"end": 363,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 356,
											"end": 383,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 353,
											"end": 389,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 350,
											"end": 493,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 350,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 350,
											"end": 493,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 517,
											"end": 518,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 527,
											"end": 533,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 524,
											"end": 525,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 521,
											"end": 534,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 502,
											"end": 740,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 595,
											"end": 598,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 657,
											"end": 660,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 645,
											"end": 655,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 619,
											"end": 622,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 612,
											"end": 662,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 691,
											"end": 695,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 689,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 682,
											"end": 696,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 675,
											"end": 696,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 675,
											"end": 696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 723,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 716,
											"end": 730,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 709,
											"end": 730,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 709,
											"end": 730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 562,
											"end": 740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 549,
											"end": 550,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 546,
											"end": 547,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 542,
											"end": 551,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 537,
											"end": 551,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 537,
											"end": 551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 506,
											"end": 520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 768,
											"end": 1487,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 768,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 863,
											"end": 868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 904,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 960,
											"end": 966,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 904,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 904,
											"end": 967,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 904,
											"end": 967,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 904,
											"end": 967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 888,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 888,
											"end": 968,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 888,
											"end": 968,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 888,
											"end": 968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 879,
											"end": 968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 879,
											"end": 968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 988,
											"end": 993,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1017,
											"end": 1023,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1055,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1044,
											"end": 1049,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1040,
											"end": 1056,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1033,
											"end": 1056,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1033,
											"end": 1056,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1127,
											"end": 1130,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1119,
											"end": 1123,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1107,
											"end": 1124,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1102,
											"end": 1105,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1125,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1095,
											"end": 1131,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1092,
											"end": 1235,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1092,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1092,
											"end": 1235,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1146,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1146,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 1146,
											"end": 1225,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1146,
											"end": 1225,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1146,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1092,
											"end": 1235,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1092,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1260,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1481,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1244,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1269,
											"end": 1275,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1266,
											"end": 1267,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1244,
											"end": 1481,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1244,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1244,
											"end": 1481,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1337,
											"end": 1340,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1366,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 1398,
											"end": 1401,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1396,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1366,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 1366,
											"end": 1402,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1366,
											"end": 1402,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 1366,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1361,
											"end": 1364,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1354,
											"end": 1403,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1436,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1427,
											"end": 1430,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1437,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1416,
											"end": 1437,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1416,
											"end": 1437,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1466,
											"end": 1470,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1461,
											"end": 1464,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1471,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1471,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1471,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1304,
											"end": 1481,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1291,
											"end": 1292,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1288,
											"end": 1289,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1284,
											"end": 1293,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1293,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1244,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1244,
											"end": 1481,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1244,
											"end": 1481,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1244,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1262,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 869,
											"end": 1487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 768,
											"end": 1487,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 768,
											"end": 1487,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 768,
											"end": 1487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 768,
											"end": 1487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 768,
											"end": 1487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 768,
											"end": 1487,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1493,
											"end": 1632,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1493,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1544,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1583,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1584,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1584,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1584,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1593,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 1620,
											"end": 1625,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1593,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 1593,
											"end": 1626,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1593,
											"end": 1626,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 1593,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1493,
											"end": 1632,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1493,
											"end": 1632,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1493,
											"end": 1632,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1493,
											"end": 1632,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1493,
											"end": 1632,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1655,
											"end": 2025,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 1655,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1726,
											"end": 1731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1775,
											"end": 1778,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1768,
											"end": 1772,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1760,
											"end": 1766,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1773,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1752,
											"end": 1779,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 1742,
											"end": 1864,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1783,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1783,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1783,
											"end": 1862,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1783,
											"end": 1862,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1783,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1864,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 1742,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1900,
											"end": 1906,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1887,
											"end": 1907,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1925,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 2015,
											"end": 2018,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2013,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2000,
											"end": 2004,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1992,
											"end": 1998,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1988,
											"end": 2005,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1925,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1925,
											"end": 2019,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 2019,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1925,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1916,
											"end": 2019,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1916,
											"end": 2019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 2025,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 2025,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 2025,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 2025,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 2025,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 2025,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2047,
											"end": 2415,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 2047,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2122,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2169,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2163,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2151,
											"end": 2157,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2147,
											"end": 2164,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2143,
											"end": 2170,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 2133,
											"end": 2255,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2174,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 2174,
											"end": 2253,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2174,
											"end": 2253,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2174,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2255,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 2133,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2297,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2316,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 2405,
											"end": 2408,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2403,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2394,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2382,
											"end": 2388,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2316,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 2316,
											"end": 2409,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2316,
											"end": 2409,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 2316,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2409,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2409,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2415,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2047,
											"end": 2415,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2047,
											"end": 2415,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2047,
											"end": 2415,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2047,
											"end": 2415,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2047,
											"end": 2415,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2421,
											"end": 2564,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 2421,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2483,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2515,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2503,
											"end": 2516,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2516,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2516,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2552,
											"end": 2557,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2525,
											"end": 2558,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2525,
											"end": 2558,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2525,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2421,
											"end": 2564,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2421,
											"end": 2564,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2421,
											"end": 2564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2421,
											"end": 2564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2421,
											"end": 2564,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2570,
											"end": 2707,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 2570,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2615,
											"end": 2620,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2653,
											"end": 2659,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2640,
											"end": 2660,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2631,
											"end": 2660,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2631,
											"end": 2660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2695,
											"end": 2700,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2669,
											"end": 2701,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2669,
											"end": 2701,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2669,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2570,
											"end": 2707,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2570,
											"end": 2707,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2570,
											"end": 2707,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2570,
											"end": 2707,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2570,
											"end": 2707,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2713,
											"end": 3252,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2713,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2797,
											"end": 2803,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2846,
											"end": 2848,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2834,
											"end": 2843,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2825,
											"end": 2832,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2821,
											"end": 2844,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2849,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2814,
											"end": 2933,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2814,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2814,
											"end": 2933,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2852,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 2852,
											"end": 2931,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2852,
											"end": 2931,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2852,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2814,
											"end": 2933,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2814,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3000,
											"end": 3001,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2998,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3002,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3048,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3049,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3016,
											"end": 3133,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3016,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3016,
											"end": 3133,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 3052,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3052,
											"end": 3131,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3052,
											"end": 3131,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 3052,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3016,
											"end": 3133,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3016,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3157,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3227,
											"end": 3234,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3218,
											"end": 3224,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3207,
											"end": 3216,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3225,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3157,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 3157,
											"end": 3235,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3157,
											"end": 3235,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3157,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3147,
											"end": 3235,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3147,
											"end": 3235,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2943,
											"end": 3245,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2713,
											"end": 3252,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2713,
											"end": 3252,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2713,
											"end": 3252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2713,
											"end": 3252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2713,
											"end": 3252,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3258,
											"end": 4150,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 3258,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3381,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3389,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3432,
											"end": 3434,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3420,
											"end": 3429,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3418,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3407,
											"end": 3430,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3403,
											"end": 3435,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3519,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 3400,
											"end": 3519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3438,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 3438,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 3438,
											"end": 3517,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3438,
											"end": 3517,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 3438,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3519,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 3400,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3587,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3575,
											"end": 3584,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3588,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3558,
											"end": 3589,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3616,
											"end": 3634,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3608,
											"end": 3614,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3635,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3602,
											"end": 3719,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3602,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 3602,
											"end": 3719,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3638,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 3638,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3638,
											"end": 3717,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3638,
											"end": 3717,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 3638,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3602,
											"end": 3719,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 3602,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3743,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3809,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3792,
											"end": 3801,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3810,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3743,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 3743,
											"end": 3820,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3743,
											"end": 3820,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 3743,
											"end": 3820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3820,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3820,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3529,
											"end": 3830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3899,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3886,
											"end": 3895,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3882,
											"end": 3900,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3869,
											"end": 3901,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3946,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3920,
											"end": 3926,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3917,
											"end": 3947,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3914,
											"end": 4031,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3914,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 3914,
											"end": 4031,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3950,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 3950,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3950,
											"end": 4029,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3950,
											"end": 4029,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 3950,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3914,
											"end": 4031,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 3914,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4055,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 4125,
											"end": 4132,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4122,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4105,
											"end": 4114,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4101,
											"end": 4123,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4055,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 4055,
											"end": 4133,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4055,
											"end": 4133,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 4055,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4133,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4133,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3840,
											"end": 4143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3258,
											"end": 4150,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3258,
											"end": 4150,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3258,
											"end": 4150,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3258,
											"end": 4150,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3258,
											"end": 4150,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3258,
											"end": 4150,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4156,
											"end": 4507,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4156,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4226,
											"end": 4232,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4277,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4263,
											"end": 4272,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4254,
											"end": 4261,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4250,
											"end": 4273,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4246,
											"end": 4278,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4281,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 4281,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 4281,
											"end": 4360,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4281,
											"end": 4360,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 4281,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4402,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4426,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 4482,
											"end": 4489,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4473,
											"end": 4479,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4462,
											"end": 4471,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4458,
											"end": 4480,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4426,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 4426,
											"end": 4490,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4426,
											"end": 4490,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 4426,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4416,
											"end": 4490,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4416,
											"end": 4490,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4372,
											"end": 4500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4507,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4507,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4507,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4513,
											"end": 4780,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 4513,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4626,
											"end": 4636,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4647,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 4733,
											"end": 4736,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4725,
											"end": 4731,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4647,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 4647,
											"end": 4737,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4647,
											"end": 4737,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 4647,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4769,
											"end": 4773,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4764,
											"end": 4767,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4760,
											"end": 4774,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 4774,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 4774,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4513,
											"end": 4780,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4513,
											"end": 4780,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4513,
											"end": 4780,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4513,
											"end": 4780,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4513,
											"end": 4780,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4786,
											"end": 4904,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 4786,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 4891,
											"end": 4896,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 4873,
											"end": 4897,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4873,
											"end": 4897,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 4873,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4868,
											"end": 4871,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 4898,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4786,
											"end": 4904,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4786,
											"end": 4904,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4786,
											"end": 4904,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4978,
											"end": 5886,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 4978,
											"end": 5886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5141,
											"end": 5144,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5170,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 5240,
											"end": 5245,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5170,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 5170,
											"end": 5246,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5170,
											"end": 5246,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 5170,
											"end": 5246,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5262,
											"end": 5370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 5363,
											"end": 5369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 5361,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5262,
											"end": 5370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 5262,
											"end": 5370,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5262,
											"end": 5370,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 5262,
											"end": 5370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5255,
											"end": 5370,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5255,
											"end": 5370,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5394,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 5466,
											"end": 5471,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5394,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 5394,
											"end": 5472,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5394,
											"end": 5472,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 5394,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5502,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5527,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5511,
											"end": 5861,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 5511,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5542,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5533,
											"end": 5534,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5543,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5511,
											"end": 5861,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5511,
											"end": 5861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 5511,
											"end": 5861,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5612,
											"end": 5618,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5619,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5639,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 5742,
											"end": 5745,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5727,
											"end": 5740,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5639,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 5639,
											"end": 5746,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5639,
											"end": 5746,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 5639,
											"end": 5746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5746,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5769,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5769,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 5769,
											"end": 5851,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5769,
											"end": 5851,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 5769,
											"end": 5851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5851,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5558,
											"end": 5559,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5555,
											"end": 5556,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5560,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5560,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5511,
											"end": 5861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 5511,
											"end": 5861,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5511,
											"end": 5861,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 5511,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5529,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5877,
											"end": 5880,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5870,
											"end": 5880,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5870,
											"end": 5880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4978,
											"end": 5886,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4978,
											"end": 5886,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4978,
											"end": 5886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4978,
											"end": 5886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4978,
											"end": 5886,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5956,
											"end": 6460,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 5956,
											"end": 6460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6087,
											"end": 6091,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6082,
											"end": 6085,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6078,
											"end": 6092,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6181,
											"end": 6185,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6174,
											"end": 6179,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6186,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6187,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6200,
											"end": 6261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 6255,
											"end": 6259,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6250,
											"end": 6253,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6246,
											"end": 6260,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6232,
											"end": 6244,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6200,
											"end": 6261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 6200,
											"end": 6261,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6200,
											"end": 6261,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 6200,
											"end": 6261,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6102,
											"end": 6271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6361,
											"end": 6365,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6350,
											"end": 6366,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6344,
											"end": 6367,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6380,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 6437,
											"end": 6441,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6435,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6428,
											"end": 6442,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6414,
											"end": 6426,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6380,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 6380,
											"end": 6443,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6380,
											"end": 6443,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 6380,
											"end": 6443,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6281,
											"end": 6453,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6056,
											"end": 6460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 6460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 6460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 6460,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6466,
											"end": 6574,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 6466,
											"end": 6574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6543,
											"end": 6567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 6561,
											"end": 6566,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6543,
											"end": 6567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 6543,
											"end": 6567,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6543,
											"end": 6567,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 6543,
											"end": 6567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6538,
											"end": 6541,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6568,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6466,
											"end": 6574,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6466,
											"end": 6574,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6466,
											"end": 6574,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6580,
											"end": 6698,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 6580,
											"end": 6698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6667,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 6685,
											"end": 6690,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6667,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 6667,
											"end": 6691,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6667,
											"end": 6691,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 6667,
											"end": 6691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6662,
											"end": 6665,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6580,
											"end": 6698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6580,
											"end": 6698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6580,
											"end": 6698,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6704,
											"end": 6833,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 6704,
											"end": 6833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6790,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 6820,
											"end": 6825,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6790,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 6790,
											"end": 6826,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6790,
											"end": 6826,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 6790,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6788,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6827,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6704,
											"end": 6833,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6704,
											"end": 6833,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6704,
											"end": 6833,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6839,
											"end": 6944,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 6839,
											"end": 6944,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6914,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 6931,
											"end": 6936,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6914,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 6914,
											"end": 6937,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6914,
											"end": 6937,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 6914,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6909,
											"end": 6912,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6902,
											"end": 6938,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6839,
											"end": 6944,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6839,
											"end": 6944,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6839,
											"end": 6944,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6950,
											"end": 7172,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 6950,
											"end": 7172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7047,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7081,
											"end": 7083,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7070,
											"end": 7079,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7066,
											"end": 7084,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7058,
											"end": 7084,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7058,
											"end": 7084,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7094,
											"end": 7165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 7162,
											"end": 7163,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7151,
											"end": 7160,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7147,
											"end": 7164,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7138,
											"end": 7144,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7094,
											"end": 7165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 7094,
											"end": 7165,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7094,
											"end": 7165,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 7094,
											"end": 7165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 7172,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 7172,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 7172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 7172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 7172,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7178,
											"end": 7508,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 7178,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7302,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7336,
											"end": 7338,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7325,
											"end": 7334,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7313,
											"end": 7339,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7313,
											"end": 7339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 7417,
											"end": 7418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7406,
											"end": 7415,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7402,
											"end": 7419,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7393,
											"end": 7399,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 7349,
											"end": 7420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7430,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 7497,
											"end": 7499,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7486,
											"end": 7495,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7500,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7473,
											"end": 7479,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7430,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 7430,
											"end": 7501,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7430,
											"end": 7501,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 7430,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7178,
											"end": 7508,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7178,
											"end": 7508,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7178,
											"end": 7508,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7178,
											"end": 7508,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7178,
											"end": 7508,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7178,
											"end": 7508,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7514,
											"end": 7975,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 7514,
											"end": 7975,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7701,
											"end": 7705,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7739,
											"end": 7741,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7728,
											"end": 7737,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7724,
											"end": 7742,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7716,
											"end": 7742,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7716,
											"end": 7742,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7788,
											"end": 7797,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7782,
											"end": 7786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7778,
											"end": 7798,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7774,
											"end": 7775,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7763,
											"end": 7772,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7776,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7752,
											"end": 7799,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7816,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 7963,
											"end": 7967,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7816,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 7816,
											"end": 7968,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7816,
											"end": 7968,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 7816,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7514,
											"end": 7975,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7514,
											"end": 7975,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7514,
											"end": 7975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7514,
											"end": 7975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7514,
											"end": 7975,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7981,
											"end": 8203,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 7981,
											"end": 8203,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8074,
											"end": 8078,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8114,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8101,
											"end": 8110,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8115,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8089,
											"end": 8115,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8089,
											"end": 8115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8125,
											"end": 8196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 8193,
											"end": 8194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8182,
											"end": 8191,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8178,
											"end": 8195,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8169,
											"end": 8175,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8125,
											"end": 8196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 8125,
											"end": 8196,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8125,
											"end": 8196,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 8125,
											"end": 8196,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7981,
											"end": 8203,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7981,
											"end": 8203,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7981,
											"end": 8203,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7981,
											"end": 8203,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7981,
											"end": 8203,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8209,
											"end": 8338,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 8209,
											"end": 8338,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8243,
											"end": 8249,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8270,
											"end": 8290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 8270,
											"end": 8290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 8270,
											"end": 8290,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8270,
											"end": 8290,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 8270,
											"end": 8290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8299,
											"end": 8332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 8327,
											"end": 8331,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8319,
											"end": 8325,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8299,
											"end": 8332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 8299,
											"end": 8332,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8299,
											"end": 8332,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 8299,
											"end": 8332,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8209,
											"end": 8338,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8209,
											"end": 8338,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8209,
											"end": 8338,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8209,
											"end": 8338,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8344,
											"end": 8419,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 8344,
											"end": 8419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8410,
											"end": 8412,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8404,
											"end": 8413,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8394,
											"end": 8413,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8394,
											"end": 8413,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8419,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8425,
											"end": 8736,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 8425,
											"end": 8736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8502,
											"end": 8506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8592,
											"end": 8610,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8584,
											"end": 8590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8581,
											"end": 8611,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8634,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 8578,
											"end": 8634,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8634,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 8578,
											"end": 8634,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8664,
											"end": 8668,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8656,
											"end": 8662,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8652,
											"end": 8669,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8644,
											"end": 8669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8644,
											"end": 8669,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8728,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8718,
											"end": 8722,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8729,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8706,
											"end": 8729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8706,
											"end": 8729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8425,
											"end": 8736,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8425,
											"end": 8736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8425,
											"end": 8736,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8425,
											"end": 8736,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8742,
											"end": 9052,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 8742,
											"end": 9052,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8818,
											"end": 8822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8908,
											"end": 8926,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8900,
											"end": 8906,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8897,
											"end": 8927,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8894,
											"end": 8950,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8894,
											"end": 8950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 8894,
											"end": 8950,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8930,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 8930,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 8930,
											"end": 8948,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8930,
											"end": 8948,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 8930,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8894,
											"end": 8950,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 8894,
											"end": 8950,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8980,
											"end": 8984,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8972,
											"end": 8978,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8968,
											"end": 8985,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8985,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8985,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9040,
											"end": 9044,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9034,
											"end": 9038,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9030,
											"end": 9045,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9022,
											"end": 9045,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9022,
											"end": 9045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8742,
											"end": 9052,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8742,
											"end": 9052,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8742,
											"end": 9052,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8742,
											"end": 9052,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9058,
											"end": 9212,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 9058,
											"end": 9212,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9147,
											"end": 9151,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9170,
											"end": 9173,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9162,
											"end": 9173,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9162,
											"end": 9173,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9200,
											"end": 9204,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9195,
											"end": 9198,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9191,
											"end": 9205,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9183,
											"end": 9205,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9183,
											"end": 9205,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9058,
											"end": 9212,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9058,
											"end": 9212,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9058,
											"end": 9212,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9058,
											"end": 9212,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9218,
											"end": 9354,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 9218,
											"end": 9354,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9307,
											"end": 9313,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9341,
											"end": 9346,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9347,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9325,
											"end": 9347,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9325,
											"end": 9347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9218,
											"end": 9354,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9218,
											"end": 9354,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9218,
											"end": 9354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9218,
											"end": 9354,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9360,
											"end": 9495,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 9360,
											"end": 9495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9452,
											"end": 9456,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9484,
											"end": 9488,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9479,
											"end": 9482,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9475,
											"end": 9489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9467,
											"end": 9489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9467,
											"end": 9489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9360,
											"end": 9495,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9360,
											"end": 9495,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9360,
											"end": 9495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9360,
											"end": 9495,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9501,
											"end": 9707,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 9501,
											"end": 9707,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9622,
											"end": 9633,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9656,
											"end": 9662,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9651,
											"end": 9654,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9644,
											"end": 9663,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9696,
											"end": 9700,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9691,
											"end": 9694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9687,
											"end": 9701,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9672,
											"end": 9701,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9672,
											"end": 9701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9501,
											"end": 9707,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9501,
											"end": 9707,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9501,
											"end": 9707,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9501,
											"end": 9707,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9501,
											"end": 9707,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9713,
											"end": 10018,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 9713,
											"end": 10018,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9753,
											"end": 9756,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9772,
											"end": 9792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 9790,
											"end": 9791,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9772,
											"end": 9792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 9772,
											"end": 9792,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9772,
											"end": 9792,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 9772,
											"end": 9792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9767,
											"end": 9792,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9767,
											"end": 9792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9806,
											"end": 9826,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 9824,
											"end": 9825,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9806,
											"end": 9826,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 9806,
											"end": 9826,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9806,
											"end": 9826,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 9806,
											"end": 9826,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9801,
											"end": 9826,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9801,
											"end": 9826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9960,
											"end": 9961,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9892,
											"end": 9958,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9888,
											"end": 9962,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9885,
											"end": 9886,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9882,
											"end": 9963,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9879,
											"end": 9986,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9879,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 9879,
											"end": 9986,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9966,
											"end": 9984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 9966,
											"end": 9984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 9966,
											"end": 9984,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9966,
											"end": 9984,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 9966,
											"end": 9984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9879,
											"end": 9986,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 9879,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10010,
											"end": 10011,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10007,
											"end": 10008,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10003,
											"end": 10012,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9713,
											"end": 10018,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9713,
											"end": 10018,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9713,
											"end": 10018,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9713,
											"end": 10018,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9713,
											"end": 10018,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10024,
											"end": 10120,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 10024,
											"end": 10120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10068,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10090,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 10108,
											"end": 10113,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10090,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 10090,
											"end": 10114,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10090,
											"end": 10114,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 10090,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10079,
											"end": 10114,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10079,
											"end": 10114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10024,
											"end": 10120,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10024,
											"end": 10120,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10024,
											"end": 10120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10024,
											"end": 10120,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10126,
											"end": 10252,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 10126,
											"end": 10252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10163,
											"end": 10170,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10245,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10196,
											"end": 10201,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10192,
											"end": 10246,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10181,
											"end": 10246,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10181,
											"end": 10246,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10126,
											"end": 10252,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10126,
											"end": 10252,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10126,
											"end": 10252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10126,
											"end": 10252,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10258,
											"end": 10335,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 10258,
											"end": 10335,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10295,
											"end": 10302,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10324,
											"end": 10329,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10313,
											"end": 10329,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10313,
											"end": 10329,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10258,
											"end": 10335,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10258,
											"end": 10335,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10258,
											"end": 10335,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10258,
											"end": 10335,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10341,
											"end": 10434,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 10341,
											"end": 10434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10377,
											"end": 10384,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10417,
											"end": 10427,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10410,
											"end": 10415,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10406,
											"end": 10428,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10395,
											"end": 10428,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10395,
											"end": 10428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10341,
											"end": 10434,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10341,
											"end": 10434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10341,
											"end": 10434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10341,
											"end": 10434,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10440,
											"end": 10551,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 10440,
											"end": 10551,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10489,
											"end": 10498,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10545,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 10539,
											"end": 10544,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10522,
											"end": 10545,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 10522,
											"end": 10545,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10522,
											"end": 10545,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 10522,
											"end": 10545,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10509,
											"end": 10545,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10509,
											"end": 10545,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10440,
											"end": 10551,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10440,
											"end": 10551,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10440,
											"end": 10551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10440,
											"end": 10551,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10557,
											"end": 10838,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 10557,
											"end": 10838,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10640,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 10662,
											"end": 10666,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10640,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 10640,
											"end": 10667,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10640,
											"end": 10667,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 10640,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10632,
											"end": 10638,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10628,
											"end": 10668,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10770,
											"end": 10776,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10768,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10755,
											"end": 10777,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10734,
											"end": 10752,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10722,
											"end": 10732,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10719,
											"end": 10753,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10716,
											"end": 10778,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 10713,
											"end": 10801,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10713,
											"end": 10801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 10713,
											"end": 10801,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10781,
											"end": 10799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 10781,
											"end": 10799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 10781,
											"end": 10799,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10781,
											"end": 10799,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 10781,
											"end": 10799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10713,
											"end": 10801,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 10713,
											"end": 10801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10821,
											"end": 10831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10817,
											"end": 10819,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10810,
											"end": 10832,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10600,
											"end": 10838,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10557,
											"end": 10838,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10557,
											"end": 10838,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10557,
											"end": 10838,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10844,
											"end": 11077,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 10844,
											"end": 11077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10883,
											"end": 10886,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10906,
											"end": 10930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 10924,
											"end": 10929,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10906,
											"end": 10930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 10906,
											"end": 10930,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10906,
											"end": 10930,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 10906,
											"end": 10930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10897,
											"end": 10930,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10897,
											"end": 10930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10952,
											"end": 11018,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10945,
											"end": 10950,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10942,
											"end": 11019,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 10939,
											"end": 11042,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10939,
											"end": 11042,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 10939,
											"end": 11042,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11022,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 11022,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 11022,
											"end": 11040,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11022,
											"end": 11040,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 11022,
											"end": 11040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10939,
											"end": 11042,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 10939,
											"end": 11042,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11069,
											"end": 11070,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11062,
											"end": 11067,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11071,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11051,
											"end": 11071,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11051,
											"end": 11071,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10844,
											"end": 11077,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10844,
											"end": 11077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10844,
											"end": 11077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10844,
											"end": 11077,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11083,
											"end": 11263,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 11083,
											"end": 11263,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11131,
											"end": 11208,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11128,
											"end": 11129,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11121,
											"end": 11209,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11228,
											"end": 11232,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 11225,
											"end": 11226,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11218,
											"end": 11233,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11252,
											"end": 11256,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11249,
											"end": 11250,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11242,
											"end": 11257,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11269,
											"end": 11449,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11269,
											"end": 11449,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11317,
											"end": 11394,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11314,
											"end": 11315,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11307,
											"end": 11395,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11414,
											"end": 11418,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 11411,
											"end": 11412,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11404,
											"end": 11419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11438,
											"end": 11442,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11435,
											"end": 11436,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11428,
											"end": 11443,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11455,
											"end": 11635,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 11455,
											"end": 11635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11503,
											"end": 11580,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11500,
											"end": 11501,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11493,
											"end": 11581,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11600,
											"end": 11604,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 11597,
											"end": 11598,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11590,
											"end": 11605,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11624,
											"end": 11628,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11621,
											"end": 11622,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11614,
											"end": 11629,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11641,
											"end": 11758,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 11641,
											"end": 11758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11750,
											"end": 11751,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11747,
											"end": 11748,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11740,
											"end": 11752,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11764,
											"end": 11881,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 11764,
											"end": 11881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11873,
											"end": 11874,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11870,
											"end": 11871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11863,
											"end": 11875,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11887,
											"end": 12004,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 11887,
											"end": 12004,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11996,
											"end": 11997,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11993,
											"end": 11994,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11986,
											"end": 11998,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12010,
											"end": 12127,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 12010,
											"end": 12127,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12119,
											"end": 12120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12116,
											"end": 12117,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12109,
											"end": 12121,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12133,
											"end": 12235,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 12133,
											"end": 12235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12174,
											"end": 12180,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12225,
											"end": 12227,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 12221,
											"end": 12228,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 12216,
											"end": 12218,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 12209,
											"end": 12214,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12205,
											"end": 12219,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12201,
											"end": 12229,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 12191,
											"end": 12229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12191,
											"end": 12229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12133,
											"end": 12235,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12133,
											"end": 12235,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12133,
											"end": 12235,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12133,
											"end": 12235,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12241,
											"end": 12363,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 12241,
											"end": 12363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12314,
											"end": 12338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 12332,
											"end": 12337,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12314,
											"end": 12338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 12314,
											"end": 12338,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12314,
											"end": 12338,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 12314,
											"end": 12338,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12307,
											"end": 12312,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12304,
											"end": 12339,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 12294,
											"end": 12357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 12294,
											"end": 12357,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12353,
											"end": 12354,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12350,
											"end": 12351,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12343,
											"end": 12355,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12294,
											"end": 12357,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 12294,
											"end": 12357,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12241,
											"end": 12363,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12241,
											"end": 12363,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12369,
											"end": 12491,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 12369,
											"end": 12491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12442,
											"end": 12466,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 12460,
											"end": 12465,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12442,
											"end": 12466,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 12442,
											"end": 12466,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12442,
											"end": 12466,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 12442,
											"end": 12466,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12435,
											"end": 12440,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12432,
											"end": 12467,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 12422,
											"end": 12485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 12422,
											"end": 12485,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12481,
											"end": 12482,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12478,
											"end": 12479,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12471,
											"end": 12483,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12422,
											"end": 12485,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 12422,
											"end": 12485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12369,
											"end": 12491,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12369,
											"end": 12491,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12497,
											"end": 12617,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 12497,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12569,
											"end": 12592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 12586,
											"end": 12591,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12569,
											"end": 12592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 12569,
											"end": 12592,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12569,
											"end": 12592,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 12569,
											"end": 12592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12562,
											"end": 12567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12559,
											"end": 12593,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12607,
											"end": 12608,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12604,
											"end": 12605,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12597,
											"end": 12609,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12497,
											"end": 12617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12497,
											"end": 12617,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"GetStakedBalance(uint32[],address[])": "77969091",
							"getTokenBalanceOf(address[])": "0a5f75b6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"contract IMasterEntertainer\",\"name\":\"masterEntertainer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"vestingDays\",\"type\":\"uint32[]\"},{\"internalType\":\"address[]\",\"name\":\"userAddresses\",\"type\":\"address[]\"}],\"name\":\"GetStakedBalance\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"VestingDays\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"TokenBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct BalanceHelper.Stake[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"userAddresses\",\"type\":\"address[]\"}],\"name\":\"getTokenBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BalanceHelper.sol\":\"BalanceHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"contracts/BalanceHelper.sol\":{\"keccak256\":\"0x834260dbe3410009c52297e3a189ae93019c47d5e334d15bdcdab8a2289a577d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://70eae4b44d9db4a52059a3ff6f44f9301a032b9230929fbe62cba4f45b435af4\",\"dweb:/ipfs/QmezHsmgmzN8fGkibpA6hP1arh1DmYq31ddrF2s9jcheJU\"]},\"contracts/interfaces/IMasterEntertainer.sol\":{\"keccak256\":\"0x57410ab5f0cd0316d410f9954abd849a54c1c400f2ab4d7fa00db81e2ced12e1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://04dda567ff1ec7a4f77f22d5e63b31f0cad7ce9c61fd161c071f6251a6daba09\",\"dweb:/ipfs/QmaBkBj8APhDTX7dirQRdxY8aNWY2N6sWuAQbjGSYTtaAq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 826,
								"contract": "contracts/BalanceHelper.sol:BalanceHelper",
								"label": "_token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)181"
							},
							{
								"astId": 829,
								"contract": "contracts/BalanceHelper.sol:BalanceHelper",
								"label": "_masterEntertainer",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IMasterEntertainer)1022"
							}
						],
						"types": {
							"t_contract(IERC20)181": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IMasterEntertainer)1022": {
								"encoding": "inplace",
								"label": "contract IMasterEntertainer",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IMasterEntertainer.sol": {
				"IMasterEntertainer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "depositForUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_vesting",
									"type": "uint256"
								}
							],
							"name": "getBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updatePrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"depositForUser(uint256,uint256,address)": "a3f30d27",
							"getBalanceOf(address,uint256)": "94d45b59",
							"updatePrice()": "673a7e28"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"depositForUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_vesting\",\"type\":\"uint256\"}],\"name\":\"getBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updatePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMasterEntertainer.sol\":\"IMasterEntertainer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IMasterEntertainer.sol\":{\"keccak256\":\"0x57410ab5f0cd0316d410f9954abd849a54c1c400f2ab4d7fa00db81e2ced12e1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://04dda567ff1ec7a4f77f22d5e63b31f0cad7ce9c61fd161c071f6251a6daba09\",\"dweb:/ipfs/QmaBkBj8APhDTX7dirQRdxY8aNWY2N6sWuAQbjGSYTtaAq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							498
						],
						"Ownable": [
							103
						]
					},
					"id": 104,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 104,
							"sourceUnit": 499,
							"src": "58:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 498,
										"src": "614:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "614:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "90:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 103,
							"linearizedBaseContracts": [
								103,
								498
							],
							"name": "Ownable",
							"nameLocation": "603:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "644:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 103,
									"src": "628:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "628:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "663:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "700:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "684:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "731:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "715:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "683:57:0"
									},
									"src": "657:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "857:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 488,
																"src": "877:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "867:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "867:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "867:23:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "747:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "857:0:0"
									},
									"scope": 103,
									"src": "843:54:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1028:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1045:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1038:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "903:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "982:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1019:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:9:0"
									},
									"scope": 103,
									"src": "973:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1167:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1185:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1185:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "1196:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1196:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1185:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1210:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1177:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1255:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1064:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1155:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1164:2:0"
									},
									"src": "1146:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1659:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1687:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1679:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1679:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1679:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "1669:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1669:21:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1269:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1649:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1649:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1614:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1631:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1659:0:0"
									},
									"scope": 103,
									"src": "1605:92:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1916:119:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "1934:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1954:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1946:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1946:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1946:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1934:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1958:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1926:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1926:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1926:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2019:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "2009:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2009:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2009:19:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1703:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1906:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1906:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1855:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1881:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1873:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1872:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1916:0:0"
									},
									"scope": 103,
									"src": "1846:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "2086:124:0",
										"statements": [
											{
												"assignments": [
													89
												],
												"declarations": [
													{
														"constant": false,
														"id": 89,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2104:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 101,
														"src": "2096:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 88,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2096:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 91,
												"initialValue": {
													"id": 90,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2115:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2096:25:0"
											},
											{
												"expression": {
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 92,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2131:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 93,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "2140:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2131:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "2131:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 97,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "2184:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 98,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2194:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 96,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2163:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "EmitStatement",
												"src": "2158:45:0"
											}
										]
									},
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setOwner",
									"nameLocation": "2050:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2068:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "2060:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2059:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2086:0:0"
									},
									"scope": 103,
									"src": "2041:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 104,
							"src": "585:1627:0",
							"usedErrors": []
						}
					],
					"src": "33:2180:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							181
						]
					},
					"id": 182,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 105,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 106,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 181,
							"linearizedBaseContracts": [
								181
							],
							"name": "IERC20",
							"nameLocation": "139:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "232:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "269:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:9:1"
									},
									"scope": 181,
									"src": "223:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "370:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "388:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "380:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:17:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "420:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:9:1"
									},
									"scope": 181,
									"src": "361:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "658:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "675:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "667:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "694:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "686:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:35:1"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "720:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:6:1"
									},
									"scope": 181,
									"src": "649:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1010:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1028:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1020:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1043:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1035:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:32:1"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:1"
									},
									"scope": 181,
									"src": "1001:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1746:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1762:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1754:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1779:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1771:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:33:1"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1805:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:6:1"
									},
									"scope": 181,
									"src": "1737:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2127:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2157:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2149:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2181:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2173:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2208:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2200:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2200:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:81:1"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2239:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 159,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2239:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2238:6:1"
									},
									"scope": 181,
									"src": "2118:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "2251:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 171,
									"name": "Transfer",
									"nameLocation": "2420:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2445:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "2429:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2467:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "2451:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2479:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "2471:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:57:1"
									},
									"src": "2414:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "2492:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 180,
									"name": "Approval",
									"nameLocation": "2651:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2676:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2660:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2660:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2699:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2683:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2716:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2708:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:63:1"
									},
									"src": "2645:78:1"
								}
							],
							"scope": 182,
							"src": "129:2596:1",
							"usedErrors": []
						}
					],
					"src": "33:2693:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							477
						]
					},
					"id": 478,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 183,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 184,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 477,
							"linearizedBaseContracts": [
								477
							],
							"name": "Address",
							"nameLocation": "134:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 200,
										"nodeType": "Block",
										"src": "784:311:2",
										"statements": [
											{
												"assignments": [
													193
												],
												"declarations": [
													{
														"constant": false,
														"id": 193,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "989:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 200,
														"src": "981:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 192,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 194,
												"nodeType": "VariableDeclarationStatement",
												"src": "981:12:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1012:52:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1026:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1046:7:2"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1034:11:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1034:20:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1026:4:2"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 187,
														"isOffset": false,
														"isSlot": false,
														"src": "1046:7:2",
														"valueSize": 1
													},
													{
														"declaration": 193,
														"isOffset": false,
														"isSlot": false,
														"src": "1026:4:2",
														"valueSize": 1
													}
												],
												"id": 195,
												"nodeType": "InlineAssembly",
												"src": "1003:61:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 196,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "1080:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1087:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1080:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 191,
												"id": 199,
												"nodeType": "Return",
												"src": "1073:15:2"
											}
										]
									},
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "148:565:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "727:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "746:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "738:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:17:2"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "778:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:2"
									},
									"scope": 477,
									"src": "718:377:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "2083:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 212,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2109:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		],
																		"id": 211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 210,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2101:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2101:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2101:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 215,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "2126:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2101:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2134:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 209,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2093:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2093:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2093:73:2"
											},
											{
												"assignments": [
													221,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 221,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2183:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 234,
														"src": "2178:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 220,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2178:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 228,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2226:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 222,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "2196:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2196:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 224,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "2218:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2196:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2196:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 230,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "2247:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2256:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2239:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2239:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "2239:78:2"
											}
										]
									},
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1101:906:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2021:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2047:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "2031:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2066:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "2058:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2058:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:43:2"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2083:0:2"
									},
									"scope": 477,
									"src": "2012:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "3155:84:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 246,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "3185:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 247,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3193:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3199:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 245,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															252,
															272
														],
														"referencedDeclaration": 272,
														"src": "3172:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3172:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 244,
												"id": 250,
												"nodeType": "Return",
												"src": "3165:67:2"
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "2330:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3075:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3096:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3088:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3117:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3104:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3104:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3087:35:2"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3141:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 242,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3141:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:14:2"
									},
									"scope": 477,
									"src": "3066:173:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "3608:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 265,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "3647:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 266,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "3655:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3661:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 268,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "3664:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 264,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															292,
															342
														],
														"referencedDeclaration": 342,
														"src": "3625:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3625:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 263,
												"id": 270,
												"nodeType": "Return",
												"src": "3618:59:2"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "3245:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3470:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3500:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3492:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3529:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3516:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3516:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3557:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3543:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 258,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3543:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:93:2"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3594:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 261,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3594:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3593:14:2"
									},
									"scope": 477,
									"src": "3461:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "4189:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 285,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "4228:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 286,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "4236:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 287,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "4242:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4249:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 284,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															292,
															342
														],
														"referencedDeclaration": 342,
														"src": "4206:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4206:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 283,
												"id": 290,
												"nodeType": "Return",
												"src": "4199:94:2"
											}
										]
									},
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "3690:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4055:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4094:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4086:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4123:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4110:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 276,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4110:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4145:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4137:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4137:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4076:80:2"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4175:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 281,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4175:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4174:14:2"
									},
									"scope": 477,
									"src": "4046:254:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "4727:321:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 309,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4753:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		],
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4745:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 307,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4745:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4745:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4745:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 312,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "4770:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4745:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4777:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4737:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4737:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "4737:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 319,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "4847:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 318,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "4836:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4836:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4856:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4828:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4828:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "4828:60:2"
											},
											{
												"assignments": [
													325,
													327
												],
												"declarations": [
													{
														"constant": false,
														"id": 325,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4905:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 341,
														"src": "4900:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 324,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4900:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 327,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4927:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 341,
														"src": "4914:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 326,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4914:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 334,
												"initialValue": {
													"arguments": [
														{
															"id": 332,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "4967:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 328,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "4941:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4941:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 330,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "4960:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4941:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4941:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4899:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 336,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "5007:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 337,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "5016:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 338,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "5028:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 335,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "4989:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4989:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 305,
												"id": 340,
												"nodeType": "Return",
												"src": "4982:59:2"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "4306:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4557:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4596:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "4588:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4588:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4625:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "4612:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 296,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4612:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4647:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "4639:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4676:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "4662:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 300,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4662:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:116:2"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "4713:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 303,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4713:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4712:14:2"
									},
									"scope": 477,
									"src": "4548:500:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "5325:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 353,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "5361:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 354,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "5369:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5375:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 352,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															359,
															394
														],
														"referencedDeclaration": 394,
														"src": "5342:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5342:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 351,
												"id": 357,
												"nodeType": "Return",
												"src": "5335:80:2"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "5054:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5234:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5261:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "5253:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5253:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5282:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "5269:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 346,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5269:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5252:35:2"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "5311:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 349,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5311:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5310:14:2"
									},
									"scope": 477,
									"src": "5225:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "5764:229:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 373,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "5793:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 372,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "5782:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5782:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5802:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5774:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5774:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "5774:67:2"
											},
											{
												"assignments": [
													379,
													381
												],
												"declarations": [
													{
														"constant": false,
														"id": 379,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5858:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 393,
														"src": "5853:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 378,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5853:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 381,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5880:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 393,
														"src": "5867:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 380,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5867:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 386,
												"initialValue": {
													"arguments": [
														{
															"id": 384,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "5912:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 382,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "5894:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5894:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5894:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5852:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 388,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "5952:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 389,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "5961:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 390,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "5973:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 387,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "5934:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5934:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 370,
												"id": 392,
												"nodeType": "Return",
												"src": "5927:59:2"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "5428:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5615:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5651:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "5643:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5643:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5680:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "5667:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 363,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5667:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5708:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "5694:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 365,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5694:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5633:93:2"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "5750:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 368,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5750:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5749:14:2"
									},
									"scope": 477,
									"src": "5606:387:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "6269:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 405,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "6307:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 406,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "6315:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6321:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 404,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															411,
															446
														],
														"referencedDeclaration": 446,
														"src": "6286:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6286:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 403,
												"id": 409,
												"nodeType": "Return",
												"src": "6279:84:2"
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "5999:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6181:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6210:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "6202:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6202:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6231:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "6218:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6218:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6201:35:2"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "6255:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 401,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6255:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6254:14:2"
									},
									"scope": 477,
									"src": "6172:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "6711:233:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 425,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "6740:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 424,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "6729:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6729:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6749:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 423,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6721:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6721:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "6721:69:2"
											},
											{
												"assignments": [
													431,
													433
												],
												"declarations": [
													{
														"constant": false,
														"id": 431,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6807:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 445,
														"src": "6802:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 430,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6802:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 433,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6829:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 445,
														"src": "6816:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 432,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [
														{
															"id": 436,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "6863:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 434,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "6843:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6843:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6843:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6801:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "6903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 441,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "6912:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 442,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "6924:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 439,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "6885:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6885:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 422,
												"id": 444,
												"nodeType": "Return",
												"src": "6878:59:2"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "6376:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6565:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6603:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "6595:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6595:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6632:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "6619:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6619:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6660:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "6646:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 417,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6646:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6585:93:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "6697:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 420,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6697:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6696:14:2"
									},
									"scope": 477,
									"src": "6556:388:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "7110:532:2",
										"statements": [
											{
												"condition": {
													"id": 457,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 448,
													"src": "7124:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 473,
													"nodeType": "Block",
													"src": "7181:455:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 461,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "7265:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7265:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7285:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7265:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 471,
																"nodeType": "Block",
																"src": "7573:53:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 468,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 452,
																					"src": "7598:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 467,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7591:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7591:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 470,
																		"nodeType": "ExpressionStatement",
																		"src": "7591:20:2"
																	}
																]
															},
															"id": 472,
															"nodeType": "IfStatement",
															"src": "7261:365:2",
															"trueBody": {
																"id": 466,
																"nodeType": "Block",
																"src": "7288:279:2",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7408:145:2",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7430:40:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7459:10:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7453:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7453:17:2"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7434:15:2",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7502:2:2",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7506:10:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7498:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7498:19:2"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7519:15:2"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7491:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7491:44:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7491:44:2"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 450,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7459:10:2",
																				"valueSize": 1
																			},
																			{
																				"declaration": 450,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7506:10:2",
																				"valueSize": 1
																			}
																		],
																		"id": 465,
																		"nodeType": "InlineAssembly",
																		"src": "7399:154:2"
																	}
																]
															}
														}
													]
												},
												"id": 474,
												"nodeType": "IfStatement",
												"src": "7120:516:2",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "7133:42:2",
													"statements": [
														{
															"expression": {
																"id": 458,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "7154:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 456,
															"id": 459,
															"nodeType": "Return",
															"src": "7147:17:2"
														}
													]
												}
											}
										]
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nameLocation": "6959:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6991:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "6986:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6986:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7021:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7008:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7008:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7055:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7041:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7041:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6976:97:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7096:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7096:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7095:14:2"
									},
									"scope": 477,
									"src": "6950:692:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 478,
							"src": "126:7518:2",
							"usedErrors": []
						}
					],
					"src": "33:7612:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							498
						]
					},
					"id": 499,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 479,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 498,
							"linearizedBaseContracts": [
								498
							],
							"name": "Context",
							"nameLocation": "572:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "648:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 484,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "665:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "665:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 483,
												"id": 486,
												"nodeType": "Return",
												"src": "658:17:3"
											}
										]
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "595:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "639:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:9:3"
									},
									"scope": 498,
									"src": "586:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "755:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 493,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "772:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "772:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 492,
												"id": 495,
												"nodeType": "Return",
												"src": "765:15:3"
											}
										]
									},
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "697:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:2:3"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "739:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 490,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "739:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:16:3"
									},
									"scope": 498,
									"src": "688:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 499,
							"src": "554:235:3",
							"usedErrors": []
						}
					],
					"src": "33:757:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							810
						]
					},
					"id": 811,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 500,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 501,
								"nodeType": "StructuredDocumentation",
								"src": "211:186:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 810,
							"linearizedBaseContracts": [
								810
							],
							"name": "SafeMath",
							"nameLocation": "406:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "633:140:4",
										"statements": [
											{
												"id": 531,
												"nodeType": "UncheckedBlock",
												"src": "643:124:4",
												"statements": [
													{
														"assignments": [
															514
														],
														"declarations": [
															{
																"constant": false,
																"id": 514,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "675:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 531,
																"src": "667:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 513,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "667:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 518,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 515,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 504,
																"src": "679:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 516,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "683:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "679:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "667:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 519,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "702:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 520,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 504,
																"src": "706:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "702:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 526,
														"nodeType": "IfStatement",
														"src": "698:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "717:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "724:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 524,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "716:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 512,
															"id": 525,
															"nodeType": "Return",
															"src": "709:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "748:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 528,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "754:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 529,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "747:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 512,
														"id": 530,
														"nodeType": "Return",
														"src": "740:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "421:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "566:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "581:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "573:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "592:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "584:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:22:4"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "618:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 508,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "618:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "624:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:15:4"
									},
									"scope": 810,
									"src": "557:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "995:113:4",
										"statements": [
											{
												"id": 559,
												"nodeType": "UncheckedBlock",
												"src": "1005:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 545,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "1033:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 546,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 536,
																"src": "1037:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1033:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 552,
														"nodeType": "IfStatement",
														"src": "1029:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1048:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1055:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 550,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1047:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 544,
															"id": 551,
															"nodeType": "Return",
															"src": "1040:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1079:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 554,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 536,
																		"src": "1085:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 555,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 538,
																		"src": "1089:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1085:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 557,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1078:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 544,
														"id": 558,
														"nodeType": "Return",
														"src": "1071:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "779:135:4",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "928:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "943:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "935:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "954:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "946:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "934:22:4"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "980:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 540,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "980:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "986:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:15:4"
									},
									"scope": 810,
									"src": "919:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "1332:417:4",
										"statements": [
											{
												"id": 601,
												"nodeType": "UncheckedBlock",
												"src": "1342:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 573,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "1600:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1605:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1600:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 580,
														"nodeType": "IfStatement",
														"src": "1596:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1616:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1622:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 578,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1615:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 572,
															"id": 579,
															"nodeType": "Return",
															"src": "1608:16:4"
														}
													},
													{
														"assignments": [
															582
														],
														"declarations": [
															{
																"constant": false,
																"id": 582,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1646:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 601,
																"src": "1638:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 581,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1638:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 586,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 583,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "1650:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 584,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "1654:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1650:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1638:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 587,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "1673:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 588,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 564,
																	"src": "1677:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1673:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 590,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "1682:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 596,
														"nodeType": "IfStatement",
														"src": "1669:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1693:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1700:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 594,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1692:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 572,
															"id": 595,
															"nodeType": "Return",
															"src": "1685:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1724:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 598,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "1730:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 599,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1723:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 572,
														"id": 600,
														"nodeType": "Return",
														"src": "1716:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "1114:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1265:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1280:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "1272:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1291:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "1283:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1271:22:4"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "1317:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 568,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1317:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "1323:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:15:4"
									},
									"scope": 810,
									"src": "1256:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 630,
										"nodeType": "Block",
										"src": "1974:114:4",
										"statements": [
											{
												"id": 629,
												"nodeType": "UncheckedBlock",
												"src": "1984:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 615,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 608,
																"src": "2012:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2012:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 622,
														"nodeType": "IfStatement",
														"src": "2008:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2028:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2035:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 620,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2027:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 614,
															"id": 621,
															"nodeType": "Return",
															"src": "2020:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2059:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 624,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 606,
																		"src": "2065:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 625,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "2069:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2065:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 627,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2058:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 614,
														"id": 628,
														"nodeType": "Return",
														"src": "2051:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "1755:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1907:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1922:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1914:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1933:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1925:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:22:4"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1959:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 610,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1959:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1965:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1965:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:4"
									},
									"scope": 810,
									"src": "1898:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 658,
										"nodeType": "Block",
										"src": "2323:114:4",
										"statements": [
											{
												"id": 657,
												"nodeType": "UncheckedBlock",
												"src": "2333:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 643,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 636,
																"src": "2361:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2366:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2361:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 650,
														"nodeType": "IfStatement",
														"src": "2357:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2377:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2384:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 648,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2376:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 642,
															"id": 649,
															"nodeType": "Return",
															"src": "2369:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2408:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 652,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "2414:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 653,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "2418:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2414:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 655,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2407:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 642,
														"id": 656,
														"nodeType": "Return",
														"src": "2400:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "2094:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2256:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2271:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "2263:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2282:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "2274:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:22:4"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "2308:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 638,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2308:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "2314:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2307:15:4"
									},
									"scope": 810,
									"src": "2247:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "2739:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 669,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "2756:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 670,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "2760:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2756:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 668,
												"id": 672,
												"nodeType": "Return",
												"src": "2749:12:4"
											}
										]
									},
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "2443:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2681:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2693:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2685:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2704:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2696:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:22:4"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2730:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:9:4"
									},
									"scope": 810,
									"src": "2672:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "3106:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 684,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "3123:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 685,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "3127:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3123:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 683,
												"id": 687,
												"nodeType": "Return",
												"src": "3116:12:4"
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "2774:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3048:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3060:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "3052:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3071:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "3063:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3051:22:4"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "3097:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3096:9:4"
									},
									"scope": 810,
									"src": "3039:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "3449:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 699,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "3466:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 700,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "3470:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3466:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 698,
												"id": 702,
												"nodeType": "Return",
												"src": "3459:12:4"
											}
										]
									},
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "3141:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3391:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3403:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "3395:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3414:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "3406:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3394:22:4"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "3440:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3440:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3439:9:4"
									},
									"scope": 810,
									"src": "3382:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "3834:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 714,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "3851:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 715,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "3855:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3851:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 713,
												"id": 717,
												"nodeType": "Return",
												"src": "3844:12:4"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "3484:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3776:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3788:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3780:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3799:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3791:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:22:4"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3825:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3825:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3824:9:4"
									},
									"scope": 810,
									"src": "3767:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "4383:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 729,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "4400:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 730,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "4404:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4400:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 728,
												"id": 732,
												"nodeType": "Return",
												"src": "4393:12:4"
											}
										]
									},
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "3869:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4325:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4337:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "4329:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4348:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "4340:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4340:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4328:22:4"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "4374:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:9:4"
									},
									"scope": 810,
									"src": "4316:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "5001:106:4",
										"statements": [
											{
												"id": 757,
												"nodeType": "UncheckedBlock",
												"src": "5011:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 747,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 739,
																		"src": "5043:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 748,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 737,
																		"src": "5048:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5043:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 750,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "5051:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 746,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5035:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5035:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 752,
														"nodeType": "ExpressionStatement",
														"src": "5035:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 753,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "5085:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 754,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "5089:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5085:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 745,
														"id": 756,
														"nodeType": "Return",
														"src": "5078:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "4418:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4885:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4906:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "4898:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4898:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4925:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "4917:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4917:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4950:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "4936:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 740,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4936:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4888:80:4"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "4992:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4992:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4991:9:4"
									},
									"scope": 810,
									"src": "4876:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "5716:105:4",
										"statements": [
											{
												"id": 782,
												"nodeType": "UncheckedBlock",
												"src": "5726:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 772,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 764,
																		"src": "5758:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5762:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5758:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 775,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "5765:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 771,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5750:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5750:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 777,
														"nodeType": "ExpressionStatement",
														"src": "5750:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 778,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "5799:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 779,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "5803:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5799:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 770,
														"id": 781,
														"nodeType": "Return",
														"src": "5792:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "5113:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5600:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5621:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "5613:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5613:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5640:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "5632:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5632:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5665:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "5651:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 765,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5651:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5603:80:4"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "5707:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5707:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5706:9:4"
									},
									"scope": 810,
									"src": "5591:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "6592:105:4",
										"statements": [
											{
												"id": 807,
												"nodeType": "UncheckedBlock",
												"src": "6602:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 797,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 789,
																		"src": "6634:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6638:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6634:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 800,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "6641:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 796,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6626:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6626:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 802,
														"nodeType": "ExpressionStatement",
														"src": "6626:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 803,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "6675:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 804,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "6679:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6675:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 795,
														"id": 806,
														"nodeType": "Return",
														"src": "6668:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "5827:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6476:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6497:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "6489:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6516:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "6508:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6508:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6541:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "6527:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 790,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6527:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6479:80:4"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "6583:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6583:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6582:9:4"
									},
									"scope": 810,
									"src": "6467:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 811,
							"src": "398:6301:4",
							"usedErrors": []
						}
					],
					"src": "33:6667:4"
				},
				"id": 4
			},
			"contracts/BalanceHelper.sol": {
				"ast": {
					"absolutePath": "contracts/BalanceHelper.sol",
					"exportedSymbols": {
						"Address": [
							477
						],
						"BalanceHelper": [
							998
						],
						"Context": [
							498
						],
						"IERC20": [
							181
						],
						"IMasterEntertainer": [
							1022
						],
						"Ownable": [
							103
						],
						"SafeMath": [
							810
						]
					},
					"id": 999,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 812,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "37:22:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 813,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 999,
							"sourceUnit": 182,
							"src": "63:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 814,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 999,
							"sourceUnit": 478,
							"src": "121:51:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 815,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 999,
							"sourceUnit": 104,
							"src": "174:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 816,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 999,
							"sourceUnit": 811,
							"src": "228:57:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IMasterEntertainer.sol",
							"file": "./interfaces/IMasterEntertainer.sol",
							"id": 817,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 999,
							"sourceUnit": 1023,
							"src": "287:45:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 998,
							"linearizedBaseContracts": [
								998
							],
							"name": "BalanceHelper",
							"nameLocation": "345:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 820,
									"libraryName": {
										"id": 818,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 477,
										"src": "372:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "366:26:5",
									"typeName": {
										"id": 819,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "384:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"id": 823,
									"libraryName": {
										"id": 821,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 810,
										"src": "404:8:5"
									},
									"nodeType": "UsingForDirective",
									"src": "398:27:5",
									"typeName": {
										"id": 822,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "417:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 826,
									"mutability": "mutable",
									"name": "_token",
									"nameLocation": "440:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 998,
									"src": "433:13:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$181",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 825,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 824,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 181,
											"src": "433:6:5"
										},
										"referencedDeclaration": 181,
										"src": "433:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$181",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 829,
									"mutability": "mutable",
									"name": "_masterEntertainer",
									"nameLocation": "472:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 998,
									"src": "453:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IMasterEntertainer_$1022",
										"typeString": "contract IMasterEntertainer"
									},
									"typeName": {
										"id": 828,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 827,
											"name": "IMasterEntertainer",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1022,
											"src": "453:18:5"
										},
										"referencedDeclaration": 1022,
										"src": "453:18:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMasterEntertainer_$1022",
											"typeString": "contract IMasterEntertainer"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "BalanceHelper.Stake",
									"id": 834,
									"members": [
										{
											"constant": false,
											"id": 831,
											"mutability": "mutable",
											"name": "VestingDays",
											"nameLocation": "530:11:5",
											"nodeType": "VariableDeclaration",
											"scope": 834,
											"src": "523:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 830,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "523:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 833,
											"mutability": "mutable",
											"name": "TokenBalance",
											"nameLocation": "560:12:5",
											"nodeType": "VariableDeclaration",
											"scope": 834,
											"src": "552:20:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 832,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "552:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "506:5:5",
									"nodeType": "StructDefinition",
									"scope": 998,
									"src": "499:81:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "658:82:5",
										"statements": [
											{
												"expression": {
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 843,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "669:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$181",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 844,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "678:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$181",
															"typeString": "contract IERC20"
														}
													},
													"src": "669:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "669:14:5"
											},
											{
												"expression": {
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 847,
														"name": "_masterEntertainer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "694:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMasterEntertainer_$1022",
															"typeString": "contract IMasterEntertainer"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 848,
														"name": "masterEntertainer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "715:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMasterEntertainer_$1022",
															"typeString": "contract IMasterEntertainer"
														}
													},
													"src": "694:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMasterEntertainer_$1022",
														"typeString": "contract IMasterEntertainer"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "694:38:5"
											}
										]
									},
									"id": 852,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "613:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "606:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$181",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 836,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 835,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "606:6:5"
													},
													"referencedDeclaration": 181,
													"src": "606:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "masterEntertainer",
												"nameLocation": "639:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "620:36:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IMasterEntertainer_$1022",
													"typeString": "contract IMasterEntertainer"
												},
												"typeName": {
													"id": 839,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 838,
														"name": "IMasterEntertainer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1022,
														"src": "620:18:5"
													},
													"referencedDeclaration": 1022,
													"src": "620:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMasterEntertainer_$1022",
														"typeString": "contract IMasterEntertainer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:52:5"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "658:0:5"
									},
									"scope": 998,
									"src": "594:146:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "836:235:5",
										"statements": [
											{
												"assignments": [
													861
												],
												"declarations": [
													{
														"constant": false,
														"id": 861,
														"mutability": "mutable",
														"name": "tokenBalance",
														"nameLocation": "855:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 891,
														"src": "847:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 860,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "847:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 863,
												"initialValue": {
													"hexValue": "30",
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "870:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "847:24:5"
											},
											{
												"body": {
													"id": 887,
													"nodeType": "Block",
													"src": "940:94:5",
													"statements": [
														{
															"expression": {
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 875,
																	"name": "tokenBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 861,
																	"src": "955:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 880,
																						"name": "userAddresses",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 855,
																						"src": "1004:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																							"typeString": "address[] memory"
																						}
																					},
																					"id": 882,
																					"indexExpression": {
																						"id": 881,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 865,
																						"src": "1018:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1004:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 878,
																					"name": "_token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "987:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$181",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 879,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "balanceOf",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 120,
																				"src": "987:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address) view external returns (uint256)"
																				}
																			},
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "987:34:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 876,
																			"name": "tokenBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 861,
																			"src": "970:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 674,
																		"src": "970:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "970:52:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "955:67:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 886,
															"nodeType": "ExpressionStatement",
															"src": "955:67:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 868,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "899:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 869,
															"name": "userAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "903:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "903:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "899:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 888,
												"initializationExpression": {
													"assignments": [
														865
													],
													"declarations": [
														{
															"constant": false,
															"id": 865,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "892:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 888,
															"src": "887:6:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 864,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "887:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 867,
													"initialValue": {
														"hexValue": "30",
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "896:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "887:10:5"
												},
												"loopExpression": {
													"expression": {
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "925:3:5",
														"subExpression": {
															"id": 872,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "925:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 874,
													"nodeType": "ExpressionStatement",
													"src": "925:3:5"
												},
												"nodeType": "ForStatement",
												"src": "882:152:5"
											},
											{
												"expression": {
													"id": 889,
													"name": "tokenBalance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 861,
													"src": "1051:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 859,
												"id": 890,
												"nodeType": "Return",
												"src": "1044:19:5"
											}
										]
									},
									"functionSelector": "0a5f75b6",
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenBalanceOf",
									"nameLocation": "757:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "userAddresses",
												"nameLocation": "792:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "775:30:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 853,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "775:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 854,
													"nodeType": "ArrayTypeName",
													"src": "775:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "774:32:5"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "827:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "827:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "826:9:5"
									},
									"scope": 998,
									"src": "748:323:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "1202:577:5",
										"statements": [
											{
												"assignments": [
													909
												],
												"declarations": [
													{
														"constant": false,
														"id": 909,
														"mutability": "mutable",
														"name": "stakes",
														"nameLocation": "1228:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 996,
														"src": "1213:21:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct BalanceHelper.Stake[]"
														},
														"typeName": {
															"baseType": {
																"id": 907,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 906,
																	"name": "Stake",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 834,
																	"src": "1213:5:5"
																},
																"referencedDeclaration": 834,
																"src": "1213:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$834_storage_ptr",
																	"typeString": "struct BalanceHelper.Stake"
																}
															},
															"id": 908,
															"nodeType": "ArrayTypeName",
															"src": "1213:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$834_storage_$dyn_storage_ptr",
																"typeString": "struct BalanceHelper.Stake[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 917,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 914,
																"name": "vestingDays",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 895,
																"src": "1249:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																	"typeString": "uint32[] memory"
																}
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1249:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 913,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1237:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct BalanceHelper.Stake memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 911,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 910,
																	"name": "Stake",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 834,
																	"src": "1241:5:5"
																},
																"referencedDeclaration": 834,
																"src": "1241:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$834_storage_ptr",
																	"typeString": "struct BalanceHelper.Stake"
																}
															},
															"id": 912,
															"nodeType": "ArrayTypeName",
															"src": "1241:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$834_storage_$dyn_storage_ptr",
																"typeString": "struct BalanceHelper.Stake[]"
															}
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1237:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct BalanceHelper.Stake memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1213:55:5"
											},
											{
												"body": {
													"id": 945,
													"nodeType": "Block",
													"src": "1335:106:5",
													"statements": [
														{
															"expression": {
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 929,
																			"name": "stakes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 909,
																			"src": "1350:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct BalanceHelper.Stake memory[] memory"
																			}
																		},
																		"id": 931,
																		"indexExpression": {
																			"id": 930,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 919,
																			"src": "1357:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1350:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$834_memory_ptr",
																			"typeString": "struct BalanceHelper.Stake memory"
																		}
																	},
																	"id": 932,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "VestingDays",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 831,
																	"src": "1350:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 933,
																		"name": "vestingDays",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 895,
																		"src": "1374:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																			"typeString": "uint32[] memory"
																		}
																	},
																	"id": 935,
																	"indexExpression": {
																		"id": 934,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 919,
																		"src": "1386:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1374:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "1350:38:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 937,
															"nodeType": "ExpressionStatement",
															"src": "1350:38:5"
														},
														{
															"expression": {
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 938,
																			"name": "stakes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 909,
																			"src": "1403:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct BalanceHelper.Stake memory[] memory"
																			}
																		},
																		"id": 940,
																		"indexExpression": {
																			"id": 939,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 919,
																			"src": "1410:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1403:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$834_memory_ptr",
																			"typeString": "struct BalanceHelper.Stake memory"
																		}
																	},
																	"id": 941,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "TokenBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 833,
																	"src": "1403:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1428:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1403:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 944,
															"nodeType": "ExpressionStatement",
															"src": "1403:26:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 922,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "1296:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 923,
															"name": "vestingDays",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "1300:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																"typeString": "uint32[] memory"
															}
														},
														"id": 924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1300:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1296:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 946,
												"initializationExpression": {
													"assignments": [
														919
													],
													"declarations": [
														{
															"constant": false,
															"id": 919,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1289:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 946,
															"src": "1284:6:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 918,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1284:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 921,
													"initialValue": {
														"hexValue": "30",
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1293:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1284:10:5"
												},
												"loopExpression": {
													"expression": {
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1320:3:5",
														"subExpression": {
															"id": 926,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "1320:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 928,
													"nodeType": "ExpressionStatement",
													"src": "1320:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1279:162:5"
											},
											{
												"body": {
													"id": 992,
													"nodeType": "Block",
													"src": "1509:239:5",
													"statements": [
														{
															"body": {
																"id": 990,
																"nodeType": "Block",
																"src": "1584:153:5",
																"statements": [
																	{
																		"expression": {
																			"id": 988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 969,
																						"name": "stakes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 909,
																						"src": "1603:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr",
																							"typeString": "struct BalanceHelper.Stake memory[] memory"
																						}
																					},
																					"id": 971,
																					"indexExpression": {
																						"id": 970,
																						"name": "z",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 959,
																						"src": "1610:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1603:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$834_memory_ptr",
																						"typeString": "struct BalanceHelper.Stake memory"
																					}
																				},
																				"id": 972,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "TokenBalance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 833,
																				"src": "1603:22:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"baseExpression": {
																									"id": 980,
																									"name": "userAddresses",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 898,
																									"src": "1687:13:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																										"typeString": "address[] memory"
																									}
																								},
																								"id": 982,
																								"indexExpression": {
																									"id": 981,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 948,
																									"src": "1701:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1687:16:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"baseExpression": {
																									"id": 983,
																									"name": "vestingDays",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 895,
																									"src": "1705:11:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																										"typeString": "uint32[] memory"
																									}
																								},
																								"id": 985,
																								"indexExpression": {
																									"id": 984,
																									"name": "z",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 959,
																									"src": "1717:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1705:14:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								}
																							],
																							"expression": {
																								"id": 978,
																								"name": "_masterEntertainer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 829,
																								"src": "1655:18:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IMasterEntertainer_$1022",
																									"typeString": "contract IMasterEntertainer"
																								}
																							},
																							"id": 979,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "getBalanceOf",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1012,
																							"src": "1655:31:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (address,uint256) view external returns (uint256)"
																							}
																						},
																						"id": 986,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1655:65:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"baseExpression": {
																								"id": 973,
																								"name": "stakes",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 909,
																								"src": "1628:6:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct BalanceHelper.Stake memory[] memory"
																								}
																							},
																							"id": 975,
																							"indexExpression": {
																								"id": 974,
																								"name": "z",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 959,
																								"src": "1635:1:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "1628:9:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Stake_$834_memory_ptr",
																								"typeString": "struct BalanceHelper.Stake memory"
																							}
																						},
																						"id": 976,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "TokenBalance",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 833,
																						"src": "1628:22:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 977,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 674,
																					"src": "1628:26:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 987,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1628:93:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1603:118:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 989,
																		"nodeType": "ExpressionStatement",
																		"src": "1603:118:5"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 962,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "1541:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 963,
																		"name": "vestingDays",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 895,
																		"src": "1545:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																			"typeString": "uint32[] memory"
																		}
																	},
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1545:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1541:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 991,
															"initializationExpression": {
																"assignments": [
																	959
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 959,
																		"mutability": "mutable",
																		"name": "z",
																		"nameLocation": "1534:1:5",
																		"nodeType": "VariableDeclaration",
																		"scope": 991,
																		"src": "1529:6:5",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 958,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "1529:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 961,
																"initialValue": {
																	"hexValue": "30",
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1538:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "1529:10:5"
															},
															"loopExpression": {
																"expression": {
																	"id": 967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "1565:3:5",
																	"subExpression": {
																		"id": 966,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "1565:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 968,
																"nodeType": "ExpressionStatement",
																"src": "1565:3:5"
															},
															"nodeType": "ForStatement",
															"src": "1524:213:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 951,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "1468:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 952,
															"name": "userAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "1472:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1472:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1468:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 993,
												"initializationExpression": {
													"assignments": [
														948
													],
													"declarations": [
														{
															"constant": false,
															"id": 948,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1461:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 993,
															"src": "1456:6:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 947,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1456:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 950,
													"initialValue": {
														"hexValue": "30",
														"id": 949,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1465:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1456:10:5"
												},
												"loopExpression": {
													"expression": {
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1494:3:5",
														"subExpression": {
															"id": 955,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "1494:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 957,
													"nodeType": "ExpressionStatement",
													"src": "1494:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1451:297:5"
											},
											{
												"expression": {
													"id": 994,
													"name": "stakes",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 909,
													"src": "1765:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct BalanceHelper.Stake memory[] memory"
													}
												},
												"functionReturnParameters": 904,
												"id": 995,
												"nodeType": "Return",
												"src": "1758:13:5"
											}
										]
									},
									"functionSelector": "77969091",
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetStakedBalance",
									"nameLocation": "1088:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "vestingDays",
												"nameLocation": "1121:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "1105:27:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 893,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1105:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 894,
													"nodeType": "ArrayTypeName",
													"src": "1105:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "userAddresses",
												"nameLocation": "1151:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "1134:30:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 896,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1134:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 897,
													"nodeType": "ArrayTypeName",
													"src": "1134:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1104:61:5"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "1186:14:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct BalanceHelper.Stake[]"
												},
												"typeName": {
													"baseType": {
														"id": 901,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 900,
															"name": "Stake",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 834,
															"src": "1186:5:5"
														},
														"referencedDeclaration": 834,
														"src": "1186:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$834_storage_ptr",
															"typeString": "struct BalanceHelper.Stake"
														}
													},
													"id": 902,
													"nodeType": "ArrayTypeName",
													"src": "1186:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$834_storage_$dyn_storage_ptr",
														"typeString": "struct BalanceHelper.Stake[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1185:16:5"
									},
									"scope": 998,
									"src": "1079:700:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 999,
							"src": "336:1454:5",
							"usedErrors": []
						}
					],
					"src": "37:1753:5"
				},
				"id": 5
			},
			"contracts/interfaces/IMasterEntertainer.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IMasterEntertainer.sol",
					"exportedSymbols": {
						"IMasterEntertainer": [
							1022
						]
					},
					"id": 1023,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1000,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "36:22:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1022,
							"linearizedBaseContracts": [
								1022
							],
							"name": "IMasterEntertainer",
							"nameLocation": "70:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "673a7e28",
									"id": 1003,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updatePrice",
									"nameLocation": "104:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "115:2:6"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "126:0:6"
									},
									"scope": 1022,
									"src": "95:32:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "94d45b59",
									"id": 1012,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getBalanceOf",
									"nameLocation": "142:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "163:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "155:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "155:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "_vesting",
												"nameLocation": "178:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "170:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "170:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "154:33:6"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "211:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "210:9:6"
									},
									"scope": 1022,
									"src": "133:87:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a3f30d27",
									"id": 1021,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositForUser",
									"nameLocation": "234:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "257:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "249:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "249:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "271:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "263:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "288:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "280:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "280:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "248:46:6"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:0:6"
									},
									"scope": 1022,
									"src": "225:79:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1023,
							"src": "60:246:6",
							"usedErrors": []
						}
					],
					"src": "36:270:6"
				},
				"id": 6
			}
		}
	}
}