{
	"id": "201c100ff3cdb8d0d67e4bfef3a0b857",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BalanceHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity 0.8.7;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"./interfaces/IMasterEntertainer.sol\";\r\n\r\ncontract BalanceHelper {\r\n    using Address for address;\r\n    using SafeMath for uint256;\r\n\r\n    IERC20 _token;\r\n    IMasterEntertainer _masterEntertainer;\r\n\r\n    \r\n    constructor(IERC20 token, IMasterEntertainer masterEntertainer) {\r\n        _token = token;\r\n        _masterEntertainer = masterEntertainer;\r\n    }\r\n\r\n    function getTokenBalanceOf(address[] memory userAddresses) public view returns(uint256) {\r\n        uint256 tokenBalance = 0;\r\n        for (uint i = 0; i < userAddresses.length; i++) \r\n        {\r\n            tokenBalance += _token.balanceOf(userAddresses[i]);\r\n        }\r\n        return tokenBalance;\r\n    }\r\n    \r\n\r\n}"
			},
			"contracts/interfaces/IMasterEntertainer.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.7;\n\ninterface IMasterEntertainer {\n    function updatePrice() external; \n    function getBalanceOf(address _user, uint256 _vesting) external view returns (uint256);\n    function depositForUser(uint256 _pid, uint256 _amount, address _user) external;\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _setOwner(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _setOwner(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _setOwner(newOwner);\n    }\n\n    function _setOwner(address newOwner) private {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) private pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":126:7644  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":126:7644  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201ff9cb264245318e9b05ff061165b15ecdf2494194cca0974b49b09fcd82b25464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ff9cb264245318e9b05ff061165b15ecdf2494194cca0974b49b09fcd82b25464736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xF9 0xCB 0x26 TIMESTAMP GASLIMIT BALANCE DUP15 SWAP12 SDIV SELFDESTRUCT MOD GT PUSH6 0xB15ECDF24941 SWAP5 0xCC LOG0 SWAP8 0x4B 0x49 0xB0 SWAP16 0xCD DUP3 0xB2 SLOAD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "126:7518:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ff9cb264245318e9b05ff061165b15ecdf2494194cca0974b49b09fcd82b25464736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xF9 0xCB 0x26 TIMESTAMP GASLIMIT BALANCE DUP15 SWAP12 SDIV SELFDESTRUCT MOD GT PUSH6 0xB15ECDF24941 SWAP5 0xCC LOG0 SWAP8 0x4B 0x49 0xB0 SWAP16 0xCD DUP3 0xB2 SLOAD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "126:7518:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201ff9cb264245318e9b05ff061165b15ecdf2494194cca0974b49b09fcd82b25464736f6c63430008070033",
									".code": [
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":398:6699  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":398:6699  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fb39f214e649fa34e1f9a153a77a055e38ab95b2663b7bd2c96a001666763c0164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb39f214e649fa34e1f9a153a77a055e38ab95b2663b7bd2c96a001666763c0164736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB CODECOPY CALLCODE EQ 0xE6 0x49 STATICCALL CALLVALUE 0xE1 0xF9 LOG1 MSTORE8 0xA7 PUSH27 0x55E38AB95B2663B7BD2C96A001666763C0164736F6C6343000807 STOP CALLER ",
							"sourceMap": "398:6301:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb39f214e649fa34e1f9a153a77a055e38ab95b2663b7bd2c96a001666763c0164736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB CODECOPY CALLCODE EQ 0xE6 0x49 STATICCALL CALLVALUE 0xE1 0xF9 LOG1 MSTORE8 0xA7 PUSH27 0x55E38AB95B2663B7BD2C96A001666763C0164736F6C6343000807 STOP CALLER ",
							"sourceMap": "398:6301:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fb39f214e649fa34e1f9a153a77a055e38ab95b2663b7bd2c96a001666763c0164736f6c63430008070033",
									".code": [
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BalanceHelper.sol": {
				"BalanceHelper": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "contract IMasterEntertainer",
									"name": "masterEntertainer",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "userAddresses",
									"type": "address[]"
								}
							],
							"name": "getTokenBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BalanceHelper.sol\":336:976  contract BalanceHelper {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BalanceHelper.sol\":505:651  constructor(IERC20 token, IMasterEntertainer masterEntertainer) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/BalanceHelper.sol\":589:594  token */\n  dup2\n    /* \"contracts/BalanceHelper.sol\":580:586  _token */\n  0x00\n  dup1\n    /* \"contracts/BalanceHelper.sol\":580:594  _token = token */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BalanceHelper.sol\":626:643  masterEntertainer */\n  dup1\n    /* \"contracts/BalanceHelper.sol\":605:623  _masterEntertainer */\n  0x01\n  0x00\n    /* \"contracts/BalanceHelper.sol\":605:643  _masterEntertainer = masterEntertainer */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BalanceHelper.sol\":505:651  constructor(IERC20 token, IMasterEntertainer masterEntertainer) {\r... */\n  pop\n  pop\n    /* \"contracts/BalanceHelper.sol\":336:976  contract BalanceHelper {\r... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:178   */\ntag_8:\n    /* \"#utility.yul\":78:83   */\n  0x00\n    /* \"#utility.yul\":109:115   */\n  dup2\n    /* \"#utility.yul\":103:116   */\n  mload\n    /* \"#utility.yul\":94:116   */\n  swap1\n  pop\n    /* \"#utility.yul\":125:172   */\n  tag_10\n    /* \"#utility.yul\":166:171   */\n  dup2\n    /* \"#utility.yul\":125:172   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:178   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":184:379   */\ntag_12:\n    /* \"#utility.yul\":267:272   */\n  0x00\n    /* \"#utility.yul\":298:304   */\n  dup2\n    /* \"#utility.yul\":292:305   */\n  mload\n    /* \"#utility.yul\":283:305   */\n  swap1\n  pop\n    /* \"#utility.yul\":314:373   */\n  tag_14\n    /* \"#utility.yul\":367:372   */\n  dup2\n    /* \"#utility.yul\":314:373   */\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":184:379   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":385:972   */\ntag_3:\n    /* \"#utility.yul\":504:510   */\n  0x00\n    /* \"#utility.yul\":512:518   */\n  dup1\n    /* \"#utility.yul\":561:563   */\n  0x40\n    /* \"#utility.yul\":549:558   */\n  dup4\n    /* \"#utility.yul\":540:547   */\n  dup6\n    /* \"#utility.yul\":536:559   */\n  sub\n    /* \"#utility.yul\":532:564   */\n  slt\n    /* \"#utility.yul\":529:648   */\n  iszero\n  tag_17\n  jumpi\n    /* \"#utility.yul\":567:646   */\n  tag_18\n  tag_19\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":529:648   */\ntag_17:\n    /* \"#utility.yul\":687:688   */\n  0x00\n    /* \"#utility.yul\":712:790   */\n  tag_20\n    /* \"#utility.yul\":782:789   */\n  dup6\n    /* \"#utility.yul\":773:779   */\n  dup3\n    /* \"#utility.yul\":762:771   */\n  dup7\n    /* \"#utility.yul\":758:780   */\n  add\n    /* \"#utility.yul\":712:790   */\n  tag_8\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":702:790   */\n  swap3\n  pop\n    /* \"#utility.yul\":658:800   */\n  pop\n    /* \"#utility.yul\":839:841   */\n  0x20\n    /* \"#utility.yul\":865:955   */\n  tag_21\n    /* \"#utility.yul\":947:954   */\n  dup6\n    /* \"#utility.yul\":938:944   */\n  dup3\n    /* \"#utility.yul\":927:936   */\n  dup7\n    /* \"#utility.yul\":923:945   */\n  add\n    /* \"#utility.yul\":865:955   */\n  tag_12\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":855:955   */\n  swap2\n  pop\n    /* \"#utility.yul\":810:965   */\n  pop\n    /* \"#utility.yul\":385:972   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1059:1155   */\ntag_24:\n    /* \"#utility.yul\":1096:1103   */\n  0x00\n    /* \"#utility.yul\":1125:1149   */\n  tag_26\n    /* \"#utility.yul\":1143:1148   */\n  dup3\n    /* \"#utility.yul\":1125:1149   */\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":1114:1149   */\n  swap1\n  pop\n    /* \"#utility.yul\":1059:1155   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1271   */\ntag_28:\n    /* \"#utility.yul\":1212:1219   */\n  0x00\n    /* \"#utility.yul\":1241:1265   */\n  tag_30\n    /* \"#utility.yul\":1259:1264   */\n  dup3\n    /* \"#utility.yul\":1241:1265   */\n  tag_24\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1230:1265   */\n  swap1\n  pop\n    /* \"#utility.yul\":1161:1271   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1277:1399   */\ntag_31:\n    /* \"#utility.yul\":1340:1347   */\n  0x00\n    /* \"#utility.yul\":1369:1393   */\n  tag_33\n    /* \"#utility.yul\":1387:1392   */\n  dup3\n    /* \"#utility.yul\":1369:1393   */\n  tag_24\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1358:1393   */\n  swap1\n  pop\n    /* \"#utility.yul\":1277:1399   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1405:1531   */\ntag_27:\n    /* \"#utility.yul\":1442:1449   */\n  0x00\n    /* \"#utility.yul\":1482:1524   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1475:1480   */\n  dup3\n    /* \"#utility.yul\":1471:1525   */\n  and\n    /* \"#utility.yul\":1460:1525   */\n  swap1\n  pop\n    /* \"#utility.yul\":1405:1531   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1660:1777   */\ntag_19:\n    /* \"#utility.yul\":1769:1770   */\n  0x00\n    /* \"#utility.yul\":1766:1767   */\n  dup1\n    /* \"#utility.yul\":1759:1771   */\n  revert\n    /* \"#utility.yul\":1783:1933   */\ntag_11:\n    /* \"#utility.yul\":1870:1908   */\n  tag_39\n    /* \"#utility.yul\":1902:1907   */\n  dup2\n    /* \"#utility.yul\":1870:1908   */\n  tag_28\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1863:1868   */\n  dup2\n    /* \"#utility.yul\":1860:1909   */\n  eq\n    /* \"#utility.yul\":1850:1927   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1923:1924   */\n  0x00\n    /* \"#utility.yul\":1920:1921   */\n  dup1\n    /* \"#utility.yul\":1913:1925   */\n  revert\n    /* \"#utility.yul\":1850:1927   */\ntag_40:\n    /* \"#utility.yul\":1783:1933   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1939:2113   */\ntag_15:\n    /* \"#utility.yul\":2038:2088   */\n  tag_42\n    /* \"#utility.yul\":2082:2087   */\n  dup2\n    /* \"#utility.yul\":2038:2088   */\n  tag_31\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":2031:2036   */\n  dup2\n    /* \"#utility.yul\":2028:2089   */\n  eq\n    /* \"#utility.yul\":2018:2107   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2103:2104   */\n  0x00\n    /* \"#utility.yul\":2100:2101   */\n  dup1\n    /* \"#utility.yul\":2093:2105   */\n  revert\n    /* \"#utility.yul\":2018:2107   */\ntag_43:\n    /* \"#utility.yul\":1939:2113   */\n  pop\n  jump\t// out\n    /* \"contracts/BalanceHelper.sol\":336:976  contract BalanceHelper {\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BalanceHelper.sol\":336:976  contract BalanceHelper {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0a5f75b6\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BalanceHelper.sol\":659:965  function getTokenBalanceOf(address[] memory userAddresses) public view returns(uint256) {\r... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/BalanceHelper.sol\":738:745  uint256 */\n      0x00\n        /* \"contracts/BalanceHelper.sol\":758:778  uint256 tokenBalance */\n      dup1\n        /* \"contracts/BalanceHelper.sol\":781:782  0 */\n      0x00\n        /* \"contracts/BalanceHelper.sol\":758:782  uint256 tokenBalance = 0 */\n      swap1\n      pop\n        /* \"contracts/BalanceHelper.sol\":798:804  uint i */\n      0x00\n        /* \"contracts/BalanceHelper.sol\":793:928  for (uint i = 0; i < userAddresses.length; i++) \r... */\n    tag_11:\n        /* \"contracts/BalanceHelper.sol\":814:827  userAddresses */\n      dup4\n        /* \"contracts/BalanceHelper.sol\":814:834  userAddresses.length */\n      mload\n        /* \"contracts/BalanceHelper.sol\":810:811  i */\n      dup2\n        /* \"contracts/BalanceHelper.sol\":810:834  i < userAddresses.length */\n      lt\n        /* \"contracts/BalanceHelper.sol\":793:928  for (uint i = 0; i < userAddresses.length; i++) \r... */\n      iszero\n      tag_12\n      jumpi\n        /* \"contracts/BalanceHelper.sol\":882:888  _token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BalanceHelper.sol\":882:898  _token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/BalanceHelper.sol\":899:912  userAddresses */\n      dup6\n        /* \"contracts/BalanceHelper.sol\":913:914  i */\n      dup4\n        /* \"contracts/BalanceHelper.sol\":899:915  userAddresses[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_14\n      jumpi\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n    tag_14:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/BalanceHelper.sol\":882:916  _token.balanceOf(userAddresses[i]) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_21:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"contracts/BalanceHelper.sol\":866:916  tokenBalance += _token.balanceOf(userAddresses[i]) */\n      dup3\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      swap2\n      pop\n        /* \"contracts/BalanceHelper.sol\":836:839  i++ */\n      dup1\n      dup1\n      tag_26\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      swap2\n      pop\n      pop\n        /* \"contracts/BalanceHelper.sol\":793:928  for (uint i = 0; i < userAddresses.length; i++) \r... */\n      jump(tag_11)\n    tag_12:\n      pop\n        /* \"contracts/BalanceHelper.sol\":945:957  tokenBalance */\n      dup1\n        /* \"contracts/BalanceHelper.sol\":938:957  return tokenBalance */\n      swap2\n      pop\n      pop\n        /* \"contracts/BalanceHelper.sol\":659:965  function getTokenBalanceOf(address[] memory userAddresses) public view returns(uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:746   */\n    tag_29:\n        /* \"#utility.yul\":120:125   */\n      0x00\n        /* \"#utility.yul\":145:226   */\n      tag_31\n        /* \"#utility.yul\":161:225   */\n      tag_32\n        /* \"#utility.yul\":218:224   */\n      dup5\n        /* \"#utility.yul\":161:225   */\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":145:226   */\n      tag_34\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":136:226   */\n      swap1\n      pop\n        /* \"#utility.yul\":246:251   */\n      dup1\n        /* \"#utility.yul\":275:281   */\n      dup4\n        /* \"#utility.yul\":268:273   */\n      dup3\n        /* \"#utility.yul\":261:282   */\n      mstore\n        /* \"#utility.yul\":309:313   */\n      0x20\n        /* \"#utility.yul\":302:307   */\n      dup3\n        /* \"#utility.yul\":298:314   */\n      add\n        /* \"#utility.yul\":291:314   */\n      swap1\n      pop\n        /* \"#utility.yul\":335:341   */\n      dup3\n        /* \"#utility.yul\":385:388   */\n      dup6\n        /* \"#utility.yul\":377:381   */\n      0x20\n        /* \"#utility.yul\":369:375   */\n      dup7\n        /* \"#utility.yul\":365:382   */\n      mul\n        /* \"#utility.yul\":360:363   */\n      dup3\n        /* \"#utility.yul\":356:383   */\n      add\n        /* \"#utility.yul\":353:389   */\n      gt\n        /* \"#utility.yul\":350:493   */\n      iszero\n      tag_35\n      jumpi\n        /* \"#utility.yul\":404:483   */\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":350:493   */\n    tag_35:\n        /* \"#utility.yul\":517:518   */\n      0x00\n        /* \"#utility.yul\":502:740   */\n    tag_38:\n        /* \"#utility.yul\":527:533   */\n      dup6\n        /* \"#utility.yul\":524:525   */\n      dup2\n        /* \"#utility.yul\":521:534   */\n      lt\n        /* \"#utility.yul\":502:740   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":595:598   */\n      dup2\n        /* \"#utility.yul\":624:661   */\n      tag_41\n        /* \"#utility.yul\":657:660   */\n      dup9\n        /* \"#utility.yul\":645:655   */\n      dup3\n        /* \"#utility.yul\":624:661   */\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":619:622   */\n      dup5\n        /* \"#utility.yul\":612:662   */\n      mstore\n        /* \"#utility.yul\":691:695   */\n      0x20\n        /* \"#utility.yul\":686:689   */\n      dup5\n        /* \"#utility.yul\":682:696   */\n      add\n        /* \"#utility.yul\":675:696   */\n      swap4\n      pop\n        /* \"#utility.yul\":725:729   */\n      0x20\n        /* \"#utility.yul\":720:723   */\n      dup4\n        /* \"#utility.yul\":716:730   */\n      add\n        /* \"#utility.yul\":709:730   */\n      swap3\n      pop\n        /* \"#utility.yul\":562:740   */\n      pop\n        /* \"#utility.yul\":549:550   */\n      0x01\n        /* \"#utility.yul\":546:547   */\n      dup2\n        /* \"#utility.yul\":542:551   */\n      add\n        /* \"#utility.yul\":537:551   */\n      swap1\n      pop\n        /* \"#utility.yul\":502:740   */\n      jump(tag_38)\n    tag_40:\n        /* \"#utility.yul\":506:520   */\n      pop\n        /* \"#utility.yul\":126:746   */\n      pop\n      pop\n        /* \"#utility.yul\":24:746   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":752:891   */\n    tag_42:\n        /* \"#utility.yul\":798:803   */\n      0x00\n        /* \"#utility.yul\":836:842   */\n      dup2\n        /* \"#utility.yul\":823:843   */\n      calldataload\n        /* \"#utility.yul\":814:843   */\n      swap1\n      pop\n        /* \"#utility.yul\":852:885   */\n      tag_44\n        /* \"#utility.yul\":879:884   */\n      dup2\n        /* \"#utility.yul\":852:885   */\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":752:891   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":914:1284   */\n    tag_46:\n        /* \"#utility.yul\":985:990   */\n      0x00\n        /* \"#utility.yul\":1034:1037   */\n      dup3\n        /* \"#utility.yul\":1027:1031   */\n      0x1f\n        /* \"#utility.yul\":1019:1025   */\n      dup4\n        /* \"#utility.yul\":1015:1032   */\n      add\n        /* \"#utility.yul\":1011:1038   */\n      slt\n        /* \"#utility.yul\":1001:1123   */\n      tag_48\n      jumpi\n        /* \"#utility.yul\":1042:1121   */\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1001:1123   */\n    tag_48:\n        /* \"#utility.yul\":1159:1165   */\n      dup2\n        /* \"#utility.yul\":1146:1166   */\n      calldataload\n        /* \"#utility.yul\":1184:1278   */\n      tag_51\n        /* \"#utility.yul\":1274:1277   */\n      dup5\n        /* \"#utility.yul\":1266:1272   */\n      dup3\n        /* \"#utility.yul\":1259:1263   */\n      0x20\n        /* \"#utility.yul\":1251:1257   */\n      dup7\n        /* \"#utility.yul\":1247:1264   */\n      add\n        /* \"#utility.yul\":1184:1278   */\n      tag_29\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1175:1278   */\n      swap2\n      pop\n        /* \"#utility.yul\":991:1284   */\n      pop\n        /* \"#utility.yul\":914:1284   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1290:1433   */\n    tag_52:\n        /* \"#utility.yul\":1347:1352   */\n      0x00\n        /* \"#utility.yul\":1378:1384   */\n      dup2\n        /* \"#utility.yul\":1372:1385   */\n      mload\n        /* \"#utility.yul\":1363:1385   */\n      swap1\n      pop\n        /* \"#utility.yul\":1394:1427   */\n      tag_54\n        /* \"#utility.yul\":1421:1426   */\n      dup2\n        /* \"#utility.yul\":1394:1427   */\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1290:1433   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1439:1978   */\n    tag_6:\n        /* \"#utility.yul\":1523:1529   */\n      0x00\n        /* \"#utility.yul\":1572:1574   */\n      0x20\n        /* \"#utility.yul\":1560:1569   */\n      dup3\n        /* \"#utility.yul\":1551:1558   */\n      dup5\n        /* \"#utility.yul\":1547:1570   */\n      sub\n        /* \"#utility.yul\":1543:1575   */\n      slt\n        /* \"#utility.yul\":1540:1659   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":1578:1657   */\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1540:1659   */\n    tag_57:\n        /* \"#utility.yul\":1726:1727   */\n      0x00\n        /* \"#utility.yul\":1715:1724   */\n      dup3\n        /* \"#utility.yul\":1711:1728   */\n      add\n        /* \"#utility.yul\":1698:1729   */\n      calldataload\n        /* \"#utility.yul\":1756:1774   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1748:1754   */\n      dup2\n        /* \"#utility.yul\":1745:1775   */\n      gt\n        /* \"#utility.yul\":1742:1859   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":1778:1857   */\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1742:1859   */\n    tag_60:\n        /* \"#utility.yul\":1883:1961   */\n      tag_63\n        /* \"#utility.yul\":1953:1960   */\n      dup5\n        /* \"#utility.yul\":1944:1950   */\n      dup3\n        /* \"#utility.yul\":1933:1942   */\n      dup6\n        /* \"#utility.yul\":1929:1951   */\n      add\n        /* \"#utility.yul\":1883:1961   */\n      tag_46\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1873:1961   */\n      swap2\n      pop\n        /* \"#utility.yul\":1669:1971   */\n      pop\n        /* \"#utility.yul\":1439:1978   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1984:2335   */\n    tag_23:\n        /* \"#utility.yul\":2054:2060   */\n      0x00\n        /* \"#utility.yul\":2103:2105   */\n      0x20\n        /* \"#utility.yul\":2091:2100   */\n      dup3\n        /* \"#utility.yul\":2082:2089   */\n      dup5\n        /* \"#utility.yul\":2078:2101   */\n      sub\n        /* \"#utility.yul\":2074:2106   */\n      slt\n        /* \"#utility.yul\":2071:2190   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":2109:2188   */\n      tag_66\n      tag_59\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2071:2190   */\n    tag_65:\n        /* \"#utility.yul\":2229:2230   */\n      0x00\n        /* \"#utility.yul\":2254:2318   */\n      tag_67\n        /* \"#utility.yul\":2310:2317   */\n      dup5\n        /* \"#utility.yul\":2301:2307   */\n      dup3\n        /* \"#utility.yul\":2290:2299   */\n      dup6\n        /* \"#utility.yul\":2286:2308   */\n      add\n        /* \"#utility.yul\":2254:2318   */\n      tag_52\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":2244:2318   */\n      swap2\n      pop\n        /* \"#utility.yul\":2200:2328   */\n      pop\n        /* \"#utility.yul\":1984:2335   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2341:2459   */\n    tag_68:\n        /* \"#utility.yul\":2428:2452   */\n      tag_70\n        /* \"#utility.yul\":2446:2451   */\n      dup2\n        /* \"#utility.yul\":2428:2452   */\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2423:2426   */\n      dup3\n        /* \"#utility.yul\":2416:2453   */\n      mstore\n        /* \"#utility.yul\":2341:2459   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2465:2583   */\n    tag_72:\n        /* \"#utility.yul\":2552:2576   */\n      tag_74\n        /* \"#utility.yul\":2570:2575   */\n      dup2\n        /* \"#utility.yul\":2552:2576   */\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2547:2550   */\n      dup3\n        /* \"#utility.yul\":2540:2577   */\n      mstore\n        /* \"#utility.yul\":2465:2583   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2589:2811   */\n    tag_18:\n        /* \"#utility.yul\":2682:2686   */\n      0x00\n        /* \"#utility.yul\":2720:2722   */\n      0x20\n        /* \"#utility.yul\":2709:2718   */\n      dup3\n        /* \"#utility.yul\":2705:2723   */\n      add\n        /* \"#utility.yul\":2697:2723   */\n      swap1\n      pop\n        /* \"#utility.yul\":2733:2804   */\n      tag_77\n        /* \"#utility.yul\":2801:2802   */\n      0x00\n        /* \"#utility.yul\":2790:2799   */\n      dup4\n        /* \"#utility.yul\":2786:2803   */\n      add\n        /* \"#utility.yul\":2777:2783   */\n      dup5\n        /* \"#utility.yul\":2733:2804   */\n      tag_68\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2589:2811   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2817:3039   */\n    tag_9:\n        /* \"#utility.yul\":2910:2914   */\n      0x00\n        /* \"#utility.yul\":2948:2950   */\n      0x20\n        /* \"#utility.yul\":2937:2946   */\n      dup3\n        /* \"#utility.yul\":2933:2951   */\n      add\n        /* \"#utility.yul\":2925:2951   */\n      swap1\n      pop\n        /* \"#utility.yul\":2961:3032   */\n      tag_79\n        /* \"#utility.yul\":3029:3030   */\n      0x00\n        /* \"#utility.yul\":3018:3027   */\n      dup4\n        /* \"#utility.yul\":3014:3031   */\n      add\n        /* \"#utility.yul\":3005:3011   */\n      dup5\n        /* \"#utility.yul\":2961:3032   */\n      tag_72\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2817:3039   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3045:3174   */\n    tag_34:\n        /* \"#utility.yul\":3079:3085   */\n      0x00\n        /* \"#utility.yul\":3106:3126   */\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":3096:3126   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3168   */\n      tag_83\n        /* \"#utility.yul\":3163:3167   */\n      dup3\n        /* \"#utility.yul\":3155:3161   */\n      dup3\n        /* \"#utility.yul\":3135:3168   */\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":3045:3174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3180:3255   */\n    tag_82:\n        /* \"#utility.yul\":3213:3219   */\n      0x00\n        /* \"#utility.yul\":3246:3248   */\n      0x40\n        /* \"#utility.yul\":3240:3249   */\n      mload\n        /* \"#utility.yul\":3230:3249   */\n      swap1\n      pop\n        /* \"#utility.yul\":3180:3255   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":3261:3572   */\n    tag_33:\n        /* \"#utility.yul\":3338:3342   */\n      0x00\n        /* \"#utility.yul\":3428:3446   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3420:3426   */\n      dup3\n        /* \"#utility.yul\":3417:3447   */\n      gt\n        /* \"#utility.yul\":3414:3470   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":3450:3468   */\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":3414:3470   */\n    tag_87:\n        /* \"#utility.yul\":3500:3504   */\n      0x20\n        /* \"#utility.yul\":3492:3498   */\n      dup3\n        /* \"#utility.yul\":3488:3505   */\n      mul\n        /* \"#utility.yul\":3480:3505   */\n      swap1\n      pop\n        /* \"#utility.yul\":3560:3564   */\n      0x20\n        /* \"#utility.yul\":3554:3558   */\n      dup2\n        /* \"#utility.yul\":3550:3565   */\n      add\n        /* \"#utility.yul\":3542:3565   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3572   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3578:3883   */\n    tag_25:\n        /* \"#utility.yul\":3618:3621   */\n      0x00\n        /* \"#utility.yul\":3637:3657   */\n      tag_91\n        /* \"#utility.yul\":3655:3656   */\n      dup3\n        /* \"#utility.yul\":3637:3657   */\n      tag_75\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":3632:3657   */\n      swap2\n      pop\n        /* \"#utility.yul\":3671:3691   */\n      tag_92\n        /* \"#utility.yul\":3689:3690   */\n      dup4\n        /* \"#utility.yul\":3671:3691   */\n      tag_75\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":3666:3691   */\n      swap3\n      pop\n        /* \"#utility.yul\":3825:3826   */\n      dup3\n        /* \"#utility.yul\":3757:3823   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3753:3827   */\n      sub\n        /* \"#utility.yul\":3750:3751   */\n      dup3\n        /* \"#utility.yul\":3747:3828   */\n      gt\n        /* \"#utility.yul\":3744:3851   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":3831:3849   */\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":3744:3851   */\n    tag_93:\n        /* \"#utility.yul\":3875:3876   */\n      dup3\n        /* \"#utility.yul\":3872:3873   */\n      dup3\n        /* \"#utility.yul\":3868:3877   */\n      add\n        /* \"#utility.yul\":3861:3877   */\n      swap1\n      pop\n        /* \"#utility.yul\":3578:3883   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3889:3985   */\n    tag_71:\n        /* \"#utility.yul\":3926:3933   */\n      0x00\n        /* \"#utility.yul\":3955:3979   */\n      tag_97\n        /* \"#utility.yul\":3973:3978   */\n      dup3\n        /* \"#utility.yul\":3955:3979   */\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":3944:3979   */\n      swap1\n      pop\n        /* \"#utility.yul\":3889:3985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3991:4117   */\n    tag_98:\n        /* \"#utility.yul\":4028:4035   */\n      0x00\n        /* \"#utility.yul\":4068:4110   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4061:4066   */\n      dup3\n        /* \"#utility.yul\":4057:4111   */\n      and\n        /* \"#utility.yul\":4046:4111   */\n      swap1\n      pop\n        /* \"#utility.yul\":3991:4117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4123:4200   */\n    tag_75:\n        /* \"#utility.yul\":4160:4167   */\n      0x00\n        /* \"#utility.yul\":4189:4194   */\n      dup2\n        /* \"#utility.yul\":4178:4194   */\n      swap1\n      pop\n        /* \"#utility.yul\":4123:4200   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4206:4487   */\n    tag_84:\n        /* \"#utility.yul\":4289:4316   */\n      tag_102\n        /* \"#utility.yul\":4311:4315   */\n      dup3\n        /* \"#utility.yul\":4289:4316   */\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":4281:4287   */\n      dup2\n        /* \"#utility.yul\":4277:4317   */\n      add\n        /* \"#utility.yul\":4419:4425   */\n      dup2\n        /* \"#utility.yul\":4407:4417   */\n      dup2\n        /* \"#utility.yul\":4404:4426   */\n      lt\n        /* \"#utility.yul\":4383:4401   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4371:4381   */\n      dup3\n        /* \"#utility.yul\":4368:4402   */\n      gt\n        /* \"#utility.yul\":4365:4427   */\n      or\n        /* \"#utility.yul\":4362:4450   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":4430:4448   */\n      tag_105\n      tag_89\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":4362:4450   */\n    tag_104:\n        /* \"#utility.yul\":4470:4480   */\n      dup1\n        /* \"#utility.yul\":4466:4468   */\n      0x40\n        /* \"#utility.yul\":4459:4481   */\n      mstore\n        /* \"#utility.yul\":4249:4487   */\n      pop\n        /* \"#utility.yul\":4206:4487   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4493:4726   */\n    tag_27:\n        /* \"#utility.yul\":4532:4535   */\n      0x00\n        /* \"#utility.yul\":4555:4579   */\n      tag_107\n        /* \"#utility.yul\":4573:4578   */\n      dup3\n        /* \"#utility.yul\":4555:4579   */\n      tag_75\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":4546:4579   */\n      swap2\n      pop\n        /* \"#utility.yul\":4601:4667   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4594:4599   */\n      dup3\n        /* \"#utility.yul\":4591:4668   */\n      eq\n        /* \"#utility.yul\":4588:4691   */\n      iszero\n      tag_108\n      jumpi\n        /* \"#utility.yul\":4671:4689   */\n      tag_109\n      tag_95\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":4588:4691   */\n    tag_108:\n        /* \"#utility.yul\":4718:4719   */\n      0x01\n        /* \"#utility.yul\":4711:4716   */\n      dup3\n        /* \"#utility.yul\":4707:4720   */\n      add\n        /* \"#utility.yul\":4700:4720   */\n      swap1\n      pop\n        /* \"#utility.yul\":4493:4726   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4732:4912   */\n    tag_95:\n        /* \"#utility.yul\":4780:4857   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4777:4778   */\n      0x00\n        /* \"#utility.yul\":4770:4858   */\n      mstore\n        /* \"#utility.yul\":4877:4881   */\n      0x11\n        /* \"#utility.yul\":4874:4875   */\n      0x04\n        /* \"#utility.yul\":4867:4882   */\n      mstore\n        /* \"#utility.yul\":4901:4905   */\n      0x24\n        /* \"#utility.yul\":4898:4899   */\n      0x00\n        /* \"#utility.yul\":4891:4906   */\n      revert\n        /* \"#utility.yul\":4918:5098   */\n    tag_16:\n        /* \"#utility.yul\":4966:5043   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4963:4964   */\n      0x00\n        /* \"#utility.yul\":4956:5044   */\n      mstore\n        /* \"#utility.yul\":5063:5067   */\n      0x32\n        /* \"#utility.yul\":5060:5061   */\n      0x04\n        /* \"#utility.yul\":5053:5068   */\n      mstore\n        /* \"#utility.yul\":5087:5091   */\n      0x24\n        /* \"#utility.yul\":5084:5085   */\n      0x00\n        /* \"#utility.yul\":5077:5092   */\n      revert\n        /* \"#utility.yul\":5104:5284   */\n    tag_89:\n        /* \"#utility.yul\":5152:5229   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5149:5150   */\n      0x00\n        /* \"#utility.yul\":5142:5230   */\n      mstore\n        /* \"#utility.yul\":5249:5253   */\n      0x41\n        /* \"#utility.yul\":5246:5247   */\n      0x04\n        /* \"#utility.yul\":5239:5254   */\n      mstore\n        /* \"#utility.yul\":5273:5277   */\n      0x24\n        /* \"#utility.yul\":5270:5271   */\n      0x00\n        /* \"#utility.yul\":5263:5278   */\n      revert\n        /* \"#utility.yul\":5290:5407   */\n    tag_50:\n        /* \"#utility.yul\":5399:5400   */\n      0x00\n        /* \"#utility.yul\":5396:5397   */\n      dup1\n        /* \"#utility.yul\":5389:5401   */\n      revert\n        /* \"#utility.yul\":5413:5530   */\n    tag_37:\n        /* \"#utility.yul\":5522:5523   */\n      0x00\n        /* \"#utility.yul\":5519:5520   */\n      dup1\n        /* \"#utility.yul\":5512:5524   */\n      revert\n        /* \"#utility.yul\":5536:5653   */\n    tag_62:\n        /* \"#utility.yul\":5645:5646   */\n      0x00\n        /* \"#utility.yul\":5642:5643   */\n      dup1\n        /* \"#utility.yul\":5635:5647   */\n      revert\n        /* \"#utility.yul\":5659:5776   */\n    tag_59:\n        /* \"#utility.yul\":5768:5769   */\n      0x00\n        /* \"#utility.yul\":5765:5766   */\n      dup1\n        /* \"#utility.yul\":5758:5770   */\n      revert\n        /* \"#utility.yul\":5782:5884   */\n    tag_103:\n        /* \"#utility.yul\":5823:5829   */\n      0x00\n        /* \"#utility.yul\":5874:5876   */\n      0x1f\n        /* \"#utility.yul\":5870:5877   */\n      not\n        /* \"#utility.yul\":5865:5867   */\n      0x1f\n        /* \"#utility.yul\":5858:5863   */\n      dup4\n        /* \"#utility.yul\":5854:5868   */\n      add\n        /* \"#utility.yul\":5850:5878   */\n      and\n        /* \"#utility.yul\":5840:5878   */\n      swap1\n      pop\n        /* \"#utility.yul\":5782:5884   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5890:6012   */\n    tag_45:\n        /* \"#utility.yul\":5963:5987   */\n      tag_119\n        /* \"#utility.yul\":5981:5986   */\n      dup2\n        /* \"#utility.yul\":5963:5987   */\n      tag_71\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":5956:5961   */\n      dup2\n        /* \"#utility.yul\":5953:5988   */\n      eq\n        /* \"#utility.yul\":5943:6006   */\n      tag_120\n      jumpi\n        /* \"#utility.yul\":6002:6003   */\n      0x00\n        /* \"#utility.yul\":5999:6000   */\n      dup1\n        /* \"#utility.yul\":5992:6004   */\n      revert\n        /* \"#utility.yul\":5943:6006   */\n    tag_120:\n        /* \"#utility.yul\":5890:6012   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6018:6140   */\n    tag_55:\n        /* \"#utility.yul\":6091:6115   */\n      tag_122\n        /* \"#utility.yul\":6109:6114   */\n      dup2\n        /* \"#utility.yul\":6091:6115   */\n      tag_75\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":6084:6089   */\n      dup2\n        /* \"#utility.yul\":6081:6116   */\n      eq\n        /* \"#utility.yul\":6071:6134   */\n      tag_123\n      jumpi\n        /* \"#utility.yul\":6130:6131   */\n      0x00\n        /* \"#utility.yul\":6127:6128   */\n      dup1\n        /* \"#utility.yul\":6120:6132   */\n      revert\n        /* \"#utility.yul\":6071:6134   */\n    tag_123:\n        /* \"#utility.yul\":6018:6140   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a6bfed27a3009d1c992cb8e64f2f1c37ed328df3674cfa64bbf1b27270ffb02664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_847": {
									"entryPoint": null,
									"id": 847,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$181_fromMemory": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IMasterEntertainer_$909_fromMemory": {
									"entryPoint": 207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$181t_contract$_IMasterEntertainer_$909_fromMemory": {
									"entryPoint": 228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$181": {
									"entryPoint": 310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IMasterEntertainer_$909": {
									"entryPoint": 328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 378,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$181": {
									"entryPoint": 383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IMasterEntertainer_$909": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2116:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:94:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "94:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "109:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "103:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "103:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "94:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "166:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$181",
																	"nodeType": "YulIdentifier",
																	"src": "125:40:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "125:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "125:47:7"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$181_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "62:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "70:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "78:5:7",
														"type": ""
													}
												],
												"src": "7:171:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "273:106:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "283:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "298:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "292:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "283:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "367:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IMasterEntertainer_$909",
																	"nodeType": "YulIdentifier",
																	"src": "314:52:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "314:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "314:59:7"
														}
													]
												},
												"name": "abi_decode_t_contract$_IMasterEntertainer_$909_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "251:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "259:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "267:5:7",
														"type": ""
													}
												],
												"src": "184:195:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "519:453:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "565:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "567:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "567:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "567:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "540:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "549:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "536:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "536:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "561:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "532:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:32:7"
															},
															"nodeType": "YulIf",
															"src": "529:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "658:142:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "673:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "687:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "677:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "702:88:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "762:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "773:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "758:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "758:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "782:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$181_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "712:45:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "712:78:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "702:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "810:155:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "825:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "839:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "829:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "855:100:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "927:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "938:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "923:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "923:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "947:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IMasterEntertainer_$909_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "865:57:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "865:90:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "855:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$181t_contract$_IMasterEntertainer_$909_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "481:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "492:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "504:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "512:6:7",
														"type": ""
													}
												],
												"src": "385:587:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1018:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1028:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1044:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1038:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1038:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1028:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1011:6:7",
														"type": ""
													}
												],
												"src": "978:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1143:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1125:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1125:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1114:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1086:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1096:7:7",
														"type": ""
													}
												],
												"src": "1059:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1220:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1230:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1259:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1241:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1241:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1230:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$181",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1202:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1212:7:7",
														"type": ""
													}
												],
												"src": "1161:110:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1348:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1358:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1387:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1369:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1369:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1358:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IMasterEntertainer_$909",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1330:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1340:7:7",
														"type": ""
													}
												],
												"src": "1277:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1450:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1460:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1475:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1482:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1471:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1471:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1460:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1432:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1442:7:7",
														"type": ""
													}
												],
												"src": "1405:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1626:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1643:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1646:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1636:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1636:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1636:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1537:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1749:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1766:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1769:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1759:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1759:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1759:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1660:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1840:93:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1911:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1920:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1923:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1913:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1913:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1913:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1863:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1902:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$181",
																					"nodeType": "YulIdentifier",
																					"src": "1870:31:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1870:38:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1860:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1860:49:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:57:7"
															},
															"nodeType": "YulIf",
															"src": "1850:77:7"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$181",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1833:5:7",
														"type": ""
													}
												],
												"src": "1783:150:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2008:105:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2091:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2100:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2103:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2093:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2093:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2093:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2031:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2082:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IMasterEntertainer_$909",
																					"nodeType": "YulIdentifier",
																					"src": "2038:43:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2038:50:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2028:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2028:61:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2021:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2021:69:7"
															},
															"nodeType": "YulIf",
															"src": "2018:89:7"
														}
													]
												},
												"name": "validator_revert_t_contract$_IMasterEntertainer_$909",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2001:5:7",
														"type": ""
													}
												],
												"src": "1939:174:7"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_contract$_IERC20_$181_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$181(value)\n    }\n\n    function abi_decode_t_contract$_IMasterEntertainer_$909_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IMasterEntertainer_$909(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$181t_contract$_IMasterEntertainer_$909_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$181_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IMasterEntertainer_$909_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$181(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IMasterEntertainer_$909(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_contract$_IERC20_$181(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$181(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IMasterEntertainer_$909(value) {\n        if iszero(eq(value, cleanup_t_contract$_IMasterEntertainer_$909(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610721380380610721833981810160405281019061003291906100e4565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506101ad565b6000815190506100c98161017f565b92915050565b6000815190506100de81610196565b92915050565b600080604083850312156100fb576100fa61017a565b5b6000610109858286016100ba565b925050602061011a858286016100cf565b9150509250929050565b600061012f8261015a565b9050919050565b600061014182610124565b9050919050565b600061015382610124565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b61018881610136565b811461019357600080fd5b50565b61019f81610148565b81146101aa57600080fd5b50565b610565806101bc6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80630a5f75b614610030575b600080fd5b61004a60048036038101906100459190610228565b610060565b60405161005791906102d7565b60405180910390f35b6000806000905060005b83518110156101565760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a082318583815181106100c2576100c161047e565b5b60200260200101516040518263ffffffff1660e01b81526004016100e691906102bc565b60206040518083038186803b1580156100fe57600080fd5b505afa158015610112573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101369190610271565b826101419190610343565b9150808061014e90610406565b91505061006a565b5080915050919050565b600061017361016e84610317565b6102f2565b90508083825260208201905082856020860282011115610196576101956104e1565b5b60005b858110156101c657816101ac88826101d0565b845260208401935060208301925050600181019050610199565b5050509392505050565b6000813590506101df81610501565b92915050565b600082601f8301126101fa576101f96104dc565b5b813561020a848260208601610160565b91505092915050565b60008151905061022281610518565b92915050565b60006020828403121561023e5761023d6104eb565b5b600082013567ffffffffffffffff81111561025c5761025b6104e6565b5b610268848285016101e5565b91505092915050565b600060208284031215610287576102866104eb565b5b600061029584828501610213565b91505092915050565b6102a781610399565b82525050565b6102b6816103cb565b82525050565b60006020820190506102d1600083018461029e565b92915050565b60006020820190506102ec60008301846102ad565b92915050565b60006102fc61030d565b905061030882826103d5565b919050565b6000604051905090565b600067ffffffffffffffff821115610332576103316104ad565b5b602082029050602081019050919050565b600061034e826103cb565b9150610359836103cb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561038e5761038d61044f565b5b828201905092915050565b60006103a4826103ab565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6103de826104f0565b810181811067ffffffffffffffff821117156103fd576103fc6104ad565b5b80604052505050565b6000610411826103cb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156104445761044361044f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61050a81610399565b811461051557600080fd5b50565b610521816103cb565b811461052c57600080fd5b5056fea2646970667358221220a6bfed27a3009d1c992cb8e64f2f1c37ed328df3674cfa64bbf1b27270ffb02664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x721 CODESIZE SUB DUP1 PUSH2 0x721 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xE4 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x1AD JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC9 DUP2 PUSH2 0x17F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xDE DUP2 PUSH2 0x196 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFB JUMPI PUSH2 0xFA PUSH2 0x17A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x109 DUP6 DUP3 DUP7 ADD PUSH2 0xBA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11A DUP6 DUP3 DUP7 ADD PUSH2 0xCF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12F DUP3 PUSH2 0x15A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x141 DUP3 PUSH2 0x124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x153 DUP3 PUSH2 0x124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x188 DUP2 PUSH2 0x136 JUMP JUMPDEST DUP2 EQ PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x19F DUP2 PUSH2 0x148 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x565 DUP1 PUSH2 0x1BC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA5F75B6 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x228 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC2 JUMPI PUSH2 0xC1 PUSH2 0x47E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x112 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x271 JUMP JUMPDEST DUP3 PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x343 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x14E SWAP1 PUSH2 0x406 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6A JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x173 PUSH2 0x16E DUP5 PUSH2 0x317 JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x196 JUMPI PUSH2 0x195 PUSH2 0x4E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1C6 JUMPI DUP2 PUSH2 0x1AC DUP9 DUP3 PUSH2 0x1D0 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x199 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DF DUP2 PUSH2 0x501 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FA JUMPI PUSH2 0x1F9 PUSH2 0x4DC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x160 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x222 DUP2 PUSH2 0x518 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23E JUMPI PUSH2 0x23D PUSH2 0x4EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25C JUMPI PUSH2 0x25B PUSH2 0x4E6 JUMP JUMPDEST JUMPDEST PUSH2 0x268 DUP5 DUP3 DUP6 ADD PUSH2 0x1E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x287 JUMPI PUSH2 0x286 PUSH2 0x4EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x295 DUP5 DUP3 DUP6 ADD PUSH2 0x213 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A7 DUP2 PUSH2 0x399 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2B6 DUP2 PUSH2 0x3CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FC PUSH2 0x30D JUMP JUMPDEST SWAP1 POP PUSH2 0x308 DUP3 DUP3 PUSH2 0x3D5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x332 JUMPI PUSH2 0x331 PUSH2 0x4AD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34E DUP3 PUSH2 0x3CB JUMP JUMPDEST SWAP2 POP PUSH2 0x359 DUP4 PUSH2 0x3CB JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x38E JUMPI PUSH2 0x38D PUSH2 0x44F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A4 DUP3 PUSH2 0x3AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DE DUP3 PUSH2 0x4F0 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3FD JUMPI PUSH2 0x3FC PUSH2 0x4AD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x411 DUP3 PUSH2 0x3CB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x444 JUMPI PUSH2 0x443 PUSH2 0x44F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x50A DUP2 PUSH2 0x399 JUMP JUMPDEST DUP2 EQ PUSH2 0x515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x521 DUP2 PUSH2 0x3CB JUMP JUMPDEST DUP2 EQ PUSH2 0x52C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xBF 0xED 0x27 LOG3 STOP SWAP14 SHR SWAP10 0x2C 0xB8 0xE6 0x4F 0x2F SHR CALLDATACOPY 0xED ORIGIN DUP14 RETURN PUSH8 0x4CFA64BBF1B27270 SELFDESTRUCT 0xB0 0x26 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "336:640:5:-:0;;;505:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;589:5;580:6;;:14;;;;;;;;;;;;;;;;;;626:17;605:18;;:38;;;;;;;;;;;;;;;;;;505:146;;336:640;;7:171:7;78:5;109:6;103:13;94:22;;125:47;166:5;125:47;:::i;:::-;7:171;;;;:::o;184:195::-;267:5;298:6;292:13;283:22;;314:59;367:5;314:59;:::i;:::-;184:195;;;;:::o;385:587::-;504:6;512;561:2;549:9;540:7;536:23;532:32;529:119;;;567:79;;:::i;:::-;529:119;687:1;712:78;782:7;773:6;762:9;758:22;712:78;:::i;:::-;702:88;;658:142;839:2;865:90;947:7;938:6;927:9;923:22;865:90;:::i;:::-;855:100;;810:155;385:587;;;;;:::o;1059:96::-;1096:7;1125:24;1143:5;1125:24;:::i;:::-;1114:35;;1059:96;;;:::o;1161:110::-;1212:7;1241:24;1259:5;1241:24;:::i;:::-;1230:35;;1161:110;;;:::o;1277:122::-;1340:7;1369:24;1387:5;1369:24;:::i;:::-;1358:35;;1277:122;;;:::o;1405:126::-;1442:7;1482:42;1475:5;1471:54;1460:65;;1405:126;;;:::o;1660:117::-;1769:1;1766;1759:12;1783:150;1870:38;1902:5;1870:38;:::i;:::-;1863:5;1860:49;1850:77;;1923:1;1920;1913:12;1850:77;1783:150;:::o;1939:174::-;2038:50;2082:5;2038:50;:::i;:::-;2031:5;2028:61;2018:89;;2103:1;2100;2093:12;2018:89;1939:174;:::o;336:640:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getTokenBalanceOf_884": {
									"entryPoint": 96,
									"id": 884,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 352,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 781,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 1030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1103,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1150,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1197,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1244,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1249,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1254,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1259,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6143:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "126:620:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "136:90:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "218:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "161:56:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "161:64:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "145:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "145:81:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "136:5:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "235:16:7",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "246:5:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "239:3:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "268:5:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "275:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "261:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "261:21:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "291:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "302:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:16:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:17:7",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "335:6:7"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "328:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:103:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "404:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "404:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "404:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "360:3:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "369:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "377:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:17:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "356:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "356:27:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "385:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "353:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:36:7"
															},
															"nodeType": "YulIf",
															"src": "350:143:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "562:178:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "577:21:7",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "595:3:7"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "581:10:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "619:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "645:10:7"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "657:3:7"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "624:20:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "624:37:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "612:50:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "612:50:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "675:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "686:3:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "691:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "682:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "682:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "675:3:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "709:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "725:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "709:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "524:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "527:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "521:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "535:18:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "537:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "546:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "549:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "542:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "542:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "537:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "506:14:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "508:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "517:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "512:1:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "502:238:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "96:6:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "104:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "112:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "120:5:7",
														"type": ""
													}
												],
												"src": "24:722:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "804:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "814:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "836:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "823:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "814:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "879:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "852:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "852:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "852:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "782:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "790:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "798:5:7",
														"type": ""
													}
												],
												"src": "752:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "991:293:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1040:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1042:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1042:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1042:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1019:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1027:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1015:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1015:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1034:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1011:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1011:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1004:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1004:35:7"
															},
															"nodeType": "YulIf",
															"src": "1001:122:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:34:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1159:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1146:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1146:20:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1136:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1175:103:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1251:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1259:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1247:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1247:17:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1266:6:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1274:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1184:62:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1184:94:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1175:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "969:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "977:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "985:5:7",
														"type": ""
													}
												],
												"src": "914:370:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1353:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1363:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1378:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1372:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1372:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1363:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1421:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1394:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1394:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1394:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1331:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1339:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1347:5:7",
														"type": ""
													}
												],
												"src": "1290:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1530:448:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1576:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1578:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1578:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1578:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1551:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1560:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1547:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1547:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1572:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1543:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1543:32:7"
															},
															"nodeType": "YulIf",
															"src": "1540:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1669:302:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1684:45:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1715:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1726:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1711:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1711:17:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1698:12:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1698:31:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1688:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1776:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1778:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1778:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1778:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1756:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1745:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1745:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "1742:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1873:88:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1933:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1944:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1929:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1929:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1953:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1883:45:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1883:78:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1873:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1500:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1511:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1523:6:7",
														"type": ""
													}
												],
												"src": "1439:539:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2061:274:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2107:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2109:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2109:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2109:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2082:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2091:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2078:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2078:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2074:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2074:32:7"
															},
															"nodeType": "YulIf",
															"src": "2071:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "2200:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2215:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2229:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2219:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2244:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2290:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2301:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2286:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2286:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2310:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2254:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2254:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2244:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2031:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2042:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2054:6:7",
														"type": ""
													}
												],
												"src": "1984:351:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2406:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2423:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2446:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2428:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2428:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2416:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2416:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2416:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2394:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2401:3:7",
														"type": ""
													}
												],
												"src": "2341:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2530:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2547:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2570:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2552:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2552:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2540:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2540:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2540:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2518:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2525:3:7",
														"type": ""
													}
												],
												"src": "2465:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2687:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2697:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2709:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2720:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2705:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2697:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2777:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2790:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2801:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2786:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2786:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2733:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2733:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2733:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2659:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2671:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2682:4:7",
														"type": ""
													}
												],
												"src": "2589:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2915:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2925:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2937:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2948:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2933:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2933:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2925:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3005:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3018:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3029:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3014:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3014:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2961:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2961:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2961:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2887:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2899:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2910:4:7",
														"type": ""
													}
												],
												"src": "2817:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3086:88:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3096:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "3106:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3106:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3096:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:7"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3163:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3135:19:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3135:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3135:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3070:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3079:6:7",
														"type": ""
													}
												],
												"src": "3045:129:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3220:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3230:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3246:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3240:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3240:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3230:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3213:6:7",
														"type": ""
													}
												],
												"src": "3180:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3343:229:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3448:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3450:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3450:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3450:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3420:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3428:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3417:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3417:30:7"
															},
															"nodeType": "YulIf",
															"src": "3414:56:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3480:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3492:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3500:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3488:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3488:17:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3480:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3542:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3554:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3560:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3550:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3550:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3542:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3327:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3338:4:7",
														"type": ""
													}
												],
												"src": "3261:311:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3622:261:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3632:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3655:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3637:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3637:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3632:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3666:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3689:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3671:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3671:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3666:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3829:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3831:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3831:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3831:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3750:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3757:66:7",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3825:1:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3753:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3753:74:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3747:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3747:81:7"
															},
															"nodeType": "YulIf",
															"src": "3744:107:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3861:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3872:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3875:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3868:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3868:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3861:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3609:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3612:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3618:3:7",
														"type": ""
													}
												],
												"src": "3578:305:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3934:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3944:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3973:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3955:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3955:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3944:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3916:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3926:7:7",
														"type": ""
													}
												],
												"src": "3889:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4036:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4046:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4061:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4068:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4057:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4057:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4046:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4018:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4028:7:7",
														"type": ""
													}
												],
												"src": "3991:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4168:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4178:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4189:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4178:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4150:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4160:7:7",
														"type": ""
													}
												],
												"src": "4123:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4249:238:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4259:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4281:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "4311:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "4289:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4289:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4277:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4277:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4263:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4428:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4430:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4430:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4430:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4371:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4383:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4368:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4368:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4407:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4419:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4404:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4404:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4365:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:62:7"
															},
															"nodeType": "YulIf",
															"src": "4362:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4466:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4470:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4459:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4459:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4459:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4235:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4243:4:7",
														"type": ""
													}
												],
												"src": "4206:281:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4536:190:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4546:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4573:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4555:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4555:24:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4546:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4669:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4671:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4671:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4671:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4594:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4601:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4591:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4591:77:7"
															},
															"nodeType": "YulIf",
															"src": "4588:103:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4700:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4711:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4718:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4707:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4707:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4700:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4522:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4532:3:7",
														"type": ""
													}
												],
												"src": "4493:233:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4760:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4777:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4780:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4770:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4770:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4770:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4874:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4877:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4867:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4867:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4867:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4898:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4901:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4891:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4891:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4891:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4732:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4946:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4963:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4966:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4956:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4956:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4956:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5060:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5063:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5053:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5053:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5053:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5084:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5077:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5077:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5077:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "4918:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5132:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5149:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5152:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5142:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5142:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5142:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5246:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5249:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5239:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5239:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5239:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5270:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5273:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5263:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5263:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5263:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5104:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5379:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5396:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5399:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5389:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5389:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5389:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "5290:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5502:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5519:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5522:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5512:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5512:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5512:12:7"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "5413:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5625:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5642:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5645:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5635:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5635:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5635:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "5536:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5748:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5765:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5768:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5758:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5758:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5758:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "5659:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5830:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5840:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5858:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5865:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5854:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5854:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5874:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5870:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5870:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5850:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5850:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5840:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5813:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "5823:6:7",
														"type": ""
													}
												],
												"src": "5782:102:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5933:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5990:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5999:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6002:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5992:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5992:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5992:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5956:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5981:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5963:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5963:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5953:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5953:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5946:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:43:7"
															},
															"nodeType": "YulIf",
															"src": "5943:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5926:5:7",
														"type": ""
													}
												],
												"src": "5890:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6061:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6118:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6127:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6130:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6120:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6120:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6120:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6084:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6109:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6091:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6091:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6081:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6081:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6074:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6074:43:7"
															},
															"nodeType": "YulIf",
															"src": "6071:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6054:5:7",
														"type": ""
													}
												],
												"src": "6018:122:7"
											}
										]
									},
									"contents": "{\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80630a5f75b614610030575b600080fd5b61004a60048036038101906100459190610228565b610060565b60405161005791906102d7565b60405180910390f35b6000806000905060005b83518110156101565760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a082318583815181106100c2576100c161047e565b5b60200260200101516040518263ffffffff1660e01b81526004016100e691906102bc565b60206040518083038186803b1580156100fe57600080fd5b505afa158015610112573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101369190610271565b826101419190610343565b9150808061014e90610406565b91505061006a565b5080915050919050565b600061017361016e84610317565b6102f2565b90508083825260208201905082856020860282011115610196576101956104e1565b5b60005b858110156101c657816101ac88826101d0565b845260208401935060208301925050600181019050610199565b5050509392505050565b6000813590506101df81610501565b92915050565b600082601f8301126101fa576101f96104dc565b5b813561020a848260208601610160565b91505092915050565b60008151905061022281610518565b92915050565b60006020828403121561023e5761023d6104eb565b5b600082013567ffffffffffffffff81111561025c5761025b6104e6565b5b610268848285016101e5565b91505092915050565b600060208284031215610287576102866104eb565b5b600061029584828501610213565b91505092915050565b6102a781610399565b82525050565b6102b6816103cb565b82525050565b60006020820190506102d1600083018461029e565b92915050565b60006020820190506102ec60008301846102ad565b92915050565b60006102fc61030d565b905061030882826103d5565b919050565b6000604051905090565b600067ffffffffffffffff821115610332576103316104ad565b5b602082029050602081019050919050565b600061034e826103cb565b9150610359836103cb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561038e5761038d61044f565b5b828201905092915050565b60006103a4826103ab565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6103de826104f0565b810181811067ffffffffffffffff821117156103fd576103fc6104ad565b5b80604052505050565b6000610411826103cb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156104445761044361044f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61050a81610399565b811461051557600080fd5b50565b610521816103cb565b811461052c57600080fd5b5056fea2646970667358221220a6bfed27a3009d1c992cb8e64f2f1c37ed328df3674cfa64bbf1b27270ffb02664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA5F75B6 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x228 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC2 JUMPI PUSH2 0xC1 PUSH2 0x47E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x112 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x271 JUMP JUMPDEST DUP3 PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x343 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x14E SWAP1 PUSH2 0x406 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6A JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x173 PUSH2 0x16E DUP5 PUSH2 0x317 JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x196 JUMPI PUSH2 0x195 PUSH2 0x4E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1C6 JUMPI DUP2 PUSH2 0x1AC DUP9 DUP3 PUSH2 0x1D0 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x199 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DF DUP2 PUSH2 0x501 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FA JUMPI PUSH2 0x1F9 PUSH2 0x4DC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x160 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x222 DUP2 PUSH2 0x518 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23E JUMPI PUSH2 0x23D PUSH2 0x4EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25C JUMPI PUSH2 0x25B PUSH2 0x4E6 JUMP JUMPDEST JUMPDEST PUSH2 0x268 DUP5 DUP3 DUP6 ADD PUSH2 0x1E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x287 JUMPI PUSH2 0x286 PUSH2 0x4EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x295 DUP5 DUP3 DUP6 ADD PUSH2 0x213 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A7 DUP2 PUSH2 0x399 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2B6 DUP2 PUSH2 0x3CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FC PUSH2 0x30D JUMP JUMPDEST SWAP1 POP PUSH2 0x308 DUP3 DUP3 PUSH2 0x3D5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x332 JUMPI PUSH2 0x331 PUSH2 0x4AD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34E DUP3 PUSH2 0x3CB JUMP JUMPDEST SWAP2 POP PUSH2 0x359 DUP4 PUSH2 0x3CB JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x38E JUMPI PUSH2 0x38D PUSH2 0x44F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A4 DUP3 PUSH2 0x3AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DE DUP3 PUSH2 0x4F0 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3FD JUMPI PUSH2 0x3FC PUSH2 0x4AD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x411 DUP3 PUSH2 0x3CB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x444 JUMPI PUSH2 0x443 PUSH2 0x44F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x50A DUP2 PUSH2 0x399 JUMP JUMPDEST DUP2 EQ PUSH2 0x515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x521 DUP2 PUSH2 0x3CB JUMP JUMPDEST DUP2 EQ PUSH2 0x52C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xBF 0xED 0x27 LOG3 STOP SWAP14 SHR SWAP10 0x2C 0xB8 0xE6 0x4F 0x2F SHR CALLDATACOPY 0xED ORIGIN DUP14 RETURN PUSH8 0x4CFA64BBF1B27270 SELFDESTRUCT 0xB0 0x26 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "336:640:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;659:306;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;738:7;758:20;781:1;758:24;;798:6;793:135;814:13;:20;810:1;:24;793:135;;;882:6;;;;;;;;;;:16;;;899:13;913:1;899:16;;;;;;;;:::i;:::-;;;;;;;;882:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;866:50;;;;;:::i;:::-;;;836:3;;;;;:::i;:::-;;;;793:135;;;;945:12;938:19;;;659:306;;;:::o;24:722:7:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;752:139::-;798:5;836:6;823:20;814:29;;852:33;879:5;852:33;:::i;:::-;752:139;;;;:::o;914:370::-;985:5;1034:3;1027:4;1019:6;1015:17;1011:27;1001:122;;1042:79;;:::i;:::-;1001:122;1159:6;1146:20;1184:94;1274:3;1266:6;1259:4;1251:6;1247:17;1184:94;:::i;:::-;1175:103;;991:293;914:370;;;;:::o;1290:143::-;1347:5;1378:6;1372:13;1363:22;;1394:33;1421:5;1394:33;:::i;:::-;1290:143;;;;:::o;1439:539::-;1523:6;1572:2;1560:9;1551:7;1547:23;1543:32;1540:119;;;1578:79;;:::i;:::-;1540:119;1726:1;1715:9;1711:17;1698:31;1756:18;1748:6;1745:30;1742:117;;;1778:79;;:::i;:::-;1742:117;1883:78;1953:7;1944:6;1933:9;1929:22;1883:78;:::i;:::-;1873:88;;1669:302;1439:539;;;;:::o;1984:351::-;2054:6;2103:2;2091:9;2082:7;2078:23;2074:32;2071:119;;;2109:79;;:::i;:::-;2071:119;2229:1;2254:64;2310:7;2301:6;2290:9;2286:22;2254:64;:::i;:::-;2244:74;;2200:128;1984:351;;;;:::o;2341:118::-;2428:24;2446:5;2428:24;:::i;:::-;2423:3;2416:37;2341:118;;:::o;2465:::-;2552:24;2570:5;2552:24;:::i;:::-;2547:3;2540:37;2465:118;;:::o;2589:222::-;2682:4;2720:2;2709:9;2705:18;2697:26;;2733:71;2801:1;2790:9;2786:17;2777:6;2733:71;:::i;:::-;2589:222;;;;:::o;2817:::-;2910:4;2948:2;2937:9;2933:18;2925:26;;2961:71;3029:1;3018:9;3014:17;3005:6;2961:71;:::i;:::-;2817:222;;;;:::o;3045:129::-;3079:6;3106:20;;:::i;:::-;3096:30;;3135:33;3163:4;3155:6;3135:33;:::i;:::-;3045:129;;;:::o;3180:75::-;3213:6;3246:2;3240:9;3230:19;;3180:75;:::o;3261:311::-;3338:4;3428:18;3420:6;3417:30;3414:56;;;3450:18;;:::i;:::-;3414:56;3500:4;3492:6;3488:17;3480:25;;3560:4;3554;3550:15;3542:23;;3261:311;;;:::o;3578:305::-;3618:3;3637:20;3655:1;3637:20;:::i;:::-;3632:25;;3671:20;3689:1;3671:20;:::i;:::-;3666:25;;3825:1;3757:66;3753:74;3750:1;3747:81;3744:107;;;3831:18;;:::i;:::-;3744:107;3875:1;3872;3868:9;3861:16;;3578:305;;;;:::o;3889:96::-;3926:7;3955:24;3973:5;3955:24;:::i;:::-;3944:35;;3889:96;;;:::o;3991:126::-;4028:7;4068:42;4061:5;4057:54;4046:65;;3991:126;;;:::o;4123:77::-;4160:7;4189:5;4178:16;;4123:77;;;:::o;4206:281::-;4289:27;4311:4;4289:27;:::i;:::-;4281:6;4277:40;4419:6;4407:10;4404:22;4383:18;4371:10;4368:34;4365:62;4362:88;;;4430:18;;:::i;:::-;4362:88;4470:10;4466:2;4459:22;4249:238;4206:281;;:::o;4493:233::-;4532:3;4555:24;4573:5;4555:24;:::i;:::-;4546:33;;4601:66;4594:5;4591:77;4588:103;;;4671:18;;:::i;:::-;4588:103;4718:1;4711:5;4707:13;4700:20;;4493:233;;;:::o;4732:180::-;4780:77;4777:1;4770:88;4877:4;4874:1;4867:15;4901:4;4898:1;4891:15;4918:180;4966:77;4963:1;4956:88;5063:4;5060:1;5053:15;5087:4;5084:1;5077:15;5104:180;5152:77;5149:1;5142:88;5249:4;5246:1;5239:15;5273:4;5270:1;5263:15;5290:117;5399:1;5396;5389:12;5413:117;5522:1;5519;5512:12;5536:117;5645:1;5642;5635:12;5659:117;5768:1;5765;5758:12;5782:102;5823:6;5874:2;5870:7;5865:2;5858:5;5854:14;5850:28;5840:38;;5782:102;;;:::o;5890:122::-;5963:24;5981:5;5963:24;:::i;:::-;5956:5;5953:35;5943:63;;6002:1;5999;5992:12;5943:63;5890:122;:::o;6018:::-;6091:24;6109:5;6091:24;:::i;:::-;6084:5;6081:35;6071:63;;6130:1;6127;6120:12;6071:63;6018:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "276200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getTokenBalanceOf(address[])": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 336,
									"end": 976,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 336,
									"end": 976,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 336,
									"end": 976,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 505,
									"end": 651,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 505,
									"end": 651,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 505,
									"end": 651,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 505,
									"end": 651,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 505,
									"end": 651,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 505,
									"end": 651,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 505,
									"end": 651,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 505,
									"end": 651,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 505,
									"end": 651,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 589,
									"end": 594,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 580,
									"end": 586,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 580,
									"end": 594,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 580,
									"end": 594,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 580,
									"end": 594,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 580,
									"end": 594,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 580,
									"end": 594,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 580,
									"end": 594,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 580,
									"end": 594,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 580,
									"end": 594,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 580,
									"end": 594,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 580,
									"end": 594,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 580,
									"end": 594,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 580,
									"end": 594,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 580,
									"end": 594,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 580,
									"end": 594,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 580,
									"end": 594,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 580,
									"end": 594,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 580,
									"end": 594,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 580,
									"end": 594,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 626,
									"end": 643,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 605,
									"end": 623,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 605,
									"end": 623,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 605,
									"end": 643,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 605,
									"end": 643,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 605,
									"end": 643,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 605,
									"end": 643,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 605,
									"end": 643,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 605,
									"end": 643,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 605,
									"end": 643,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 605,
									"end": 643,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 605,
									"end": 643,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 605,
									"end": 643,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 605,
									"end": 643,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 605,
									"end": 643,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 605,
									"end": 643,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 605,
									"end": 643,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 605,
									"end": 643,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 605,
									"end": 643,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 605,
									"end": 643,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 605,
									"end": 643,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 505,
									"end": 651,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 336,
									"end": 976,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 336,
									"end": 976,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 178,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 178,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 78,
									"end": 83,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 115,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 103,
									"end": 116,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 94,
									"end": 116,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 94,
									"end": 116,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 125,
									"end": 172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 166,
									"end": 171,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 125,
									"end": 172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 125,
									"end": 172,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 125,
									"end": 172,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 125,
									"end": 172,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7,
									"end": 178,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7,
									"end": 178,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7,
									"end": 178,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 178,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 178,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 184,
									"end": 379,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 184,
									"end": 379,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 267,
									"end": 272,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 304,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 292,
									"end": 305,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 283,
									"end": 305,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 283,
									"end": 305,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 314,
									"end": 373,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 367,
									"end": 372,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 314,
									"end": 373,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 314,
									"end": 373,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 314,
									"end": 373,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 314,
									"end": 373,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 184,
									"end": 379,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 184,
									"end": 379,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 184,
									"end": 379,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 184,
									"end": 379,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 184,
									"end": 379,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 385,
									"end": 972,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 385,
									"end": 972,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 504,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 518,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 561,
									"end": 563,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 549,
									"end": 558,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 540,
									"end": 547,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 536,
									"end": 559,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 532,
									"end": 564,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 529,
									"end": 648,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 529,
									"end": 648,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 529,
									"end": 648,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 567,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 567,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 567,
									"end": 646,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 567,
									"end": 646,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 567,
									"end": 646,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 529,
									"end": 648,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 529,
									"end": 648,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 687,
									"end": 688,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 712,
									"end": 790,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 782,
									"end": 789,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 773,
									"end": 779,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 762,
									"end": 771,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 758,
									"end": 780,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 712,
									"end": 790,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 712,
									"end": 790,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 712,
									"end": 790,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 712,
									"end": 790,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 702,
									"end": 790,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 702,
									"end": 790,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 658,
									"end": 800,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 839,
									"end": 841,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 865,
									"end": 955,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 947,
									"end": 954,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 938,
									"end": 944,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 927,
									"end": 936,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 923,
									"end": 945,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 865,
									"end": 955,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 865,
									"end": 955,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 865,
									"end": 955,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 865,
									"end": 955,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 855,
									"end": 955,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 855,
									"end": 955,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 965,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 385,
									"end": 972,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 385,
									"end": 972,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 385,
									"end": 972,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 385,
									"end": 972,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 385,
									"end": 972,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 385,
									"end": 972,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1059,
									"end": 1155,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1059,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1096,
									"end": 1103,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1125,
									"end": 1149,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1143,
									"end": 1148,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1125,
									"end": 1149,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1125,
									"end": 1149,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1125,
									"end": 1149,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1125,
									"end": 1149,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1114,
									"end": 1149,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1114,
									"end": 1149,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1059,
									"end": 1155,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1059,
									"end": 1155,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1059,
									"end": 1155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1059,
									"end": 1155,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1161,
									"end": 1271,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1161,
									"end": 1271,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1219,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 1265,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1259,
									"end": 1264,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1241,
									"end": 1265,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1241,
									"end": 1265,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1241,
									"end": 1265,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1241,
									"end": 1265,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1230,
									"end": 1265,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1230,
									"end": 1265,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1271,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1271,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1271,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1271,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1277,
									"end": 1399,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1277,
									"end": 1399,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1340,
									"end": 1347,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1369,
									"end": 1393,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1387,
									"end": 1392,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1369,
									"end": 1393,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1369,
									"end": 1393,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1369,
									"end": 1393,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1369,
									"end": 1393,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1393,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1393,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1277,
									"end": 1399,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1277,
									"end": 1399,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1277,
									"end": 1399,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1277,
									"end": 1399,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1405,
									"end": 1531,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1405,
									"end": 1531,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1442,
									"end": 1449,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1482,
									"end": 1524,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1475,
									"end": 1480,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1471,
									"end": 1525,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1460,
									"end": 1525,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1460,
									"end": 1525,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1405,
									"end": 1531,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1405,
									"end": 1531,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1405,
									"end": 1531,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1405,
									"end": 1531,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1660,
									"end": 1777,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1660,
									"end": 1777,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1769,
									"end": 1770,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1766,
									"end": 1767,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1759,
									"end": 1771,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1783,
									"end": 1933,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1783,
									"end": 1933,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1870,
									"end": 1908,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1902,
									"end": 1907,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1870,
									"end": 1908,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1870,
									"end": 1908,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1870,
									"end": 1908,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1870,
									"end": 1908,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1863,
									"end": 1868,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1860,
									"end": 1909,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1850,
									"end": 1927,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1850,
									"end": 1927,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1923,
									"end": 1924,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1920,
									"end": 1921,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1913,
									"end": 1925,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1850,
									"end": 1927,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1850,
									"end": 1927,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1783,
									"end": 1933,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1783,
									"end": 1933,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1939,
									"end": 2113,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 1939,
									"end": 2113,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2038,
									"end": 2088,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 2082,
									"end": 2087,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2038,
									"end": 2088,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 2038,
									"end": 2088,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2038,
									"end": 2088,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 2038,
									"end": 2088,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2031,
									"end": 2036,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2028,
									"end": 2089,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 2018,
									"end": 2107,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 2018,
									"end": 2107,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2103,
									"end": 2104,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2100,
									"end": 2101,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2093,
									"end": 2105,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2018,
									"end": 2107,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 2018,
									"end": 2107,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1939,
									"end": 2113,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1939,
									"end": 2113,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 336,
									"end": 976,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 336,
									"end": 976,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 336,
									"end": 976,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 336,
									"end": 976,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 336,
									"end": 976,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 336,
									"end": 976,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 976,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 336,
									"end": 976,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 976,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a6bfed27a3009d1c992cb8e64f2f1c37ed328df3674cfa64bbf1b27270ffb02664736f6c63430008070033",
									".code": [
										{
											"begin": 336,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 336,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 336,
											"end": 976,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 336,
											"end": 976,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 336,
											"end": 976,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 336,
											"end": 976,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 336,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 336,
											"end": 976,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 336,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 976,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 336,
											"end": 976,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 336,
											"end": 976,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 336,
											"end": 976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 336,
											"end": 976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 336,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 336,
											"end": 976,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 336,
											"end": 976,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 336,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 336,
											"end": 976,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 336,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 976,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 336,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 336,
											"end": 976,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 336,
											"end": 976,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 336,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "A5F75B6"
										},
										{
											"begin": 336,
											"end": 976,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 336,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 336,
											"end": 976,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 336,
											"end": 976,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 336,
											"end": 976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 336,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 976,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 336,
											"end": 976,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 659,
											"end": 965,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 659,
											"end": 965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 659,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 659,
											"end": 965,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 659,
											"end": 965,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 659,
											"end": 965,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 659,
											"end": 965,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 659,
											"end": 965,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 659,
											"end": 965,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 659,
											"end": 965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 659,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 659,
											"end": 965,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 659,
											"end": 965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 659,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 659,
											"end": 965,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 659,
											"end": 965,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 659,
											"end": 965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 659,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 659,
											"end": 965,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 659,
											"end": 965,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 659,
											"end": 965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 659,
											"end": 965,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 659,
											"end": 965,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 659,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 659,
											"end": 965,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 659,
											"end": 965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 659,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 659,
											"end": 965,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 659,
											"end": 965,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 659,
											"end": 965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 659,
											"end": 965,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 659,
											"end": 965,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 659,
											"end": 965,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 659,
											"end": 965,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 659,
											"end": 965,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 659,
											"end": 965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 659,
											"end": 965,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 659,
											"end": 965,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 659,
											"end": 965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 738,
											"end": 745,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 781,
											"end": 782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 782,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 782,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 798,
											"end": 804,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 928,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 793,
											"end": 928,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 814,
											"end": 827,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 814,
											"end": 834,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 810,
											"end": 811,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 810,
											"end": 834,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 793,
											"end": 928,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 793,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 793,
											"end": 928,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 882,
											"end": 888,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 882,
											"end": 888,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 882,
											"end": 888,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 882,
											"end": 888,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 882,
											"end": 888,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 882,
											"end": 888,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 882,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 882,
											"end": 898,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 882,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 899,
											"end": 912,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 913,
											"end": 914,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 899,
											"end": 915,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 899,
											"end": 915,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 899,
											"end": 915,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 899,
											"end": 915,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 899,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 899,
											"end": 915,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 899,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 899,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 899,
											"end": 915,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 899,
											"end": 915,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 899,
											"end": 915,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 899,
											"end": 915,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 899,
											"end": 915,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 899,
											"end": 915,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 899,
											"end": 915,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 899,
											"end": 915,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 899,
											"end": 915,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 899,
											"end": 915,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 899,
											"end": 915,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 882,
											"end": 916,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 882,
											"end": 916,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 882,
											"end": 916,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 882,
											"end": 916,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 882,
											"end": 916,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 882,
											"end": 916,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 882,
											"end": 916,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 882,
											"end": 916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 882,
											"end": 916,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 882,
											"end": 916,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 882,
											"end": 916,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 916,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 882,
											"end": 916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 882,
											"end": 916,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 916,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 916,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 882,
											"end": 916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 882,
											"end": 916,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 882,
											"end": 916,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 882,
											"end": 916,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 882,
											"end": 916,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 882,
											"end": 916,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 882,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 882,
											"end": 916,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 882,
											"end": 916,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 882,
											"end": 916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 866,
											"end": 916,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 866,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 866,
											"end": 916,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 866,
											"end": 916,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 866,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 866,
											"end": 916,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 866,
											"end": 916,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 866,
											"end": 916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 866,
											"end": 916,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 866,
											"end": 916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 836,
											"end": 839,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 836,
											"end": 839,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 836,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 836,
											"end": 839,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 836,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 836,
											"end": 839,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 839,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 836,
											"end": 839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 836,
											"end": 839,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 836,
											"end": 839,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 836,
											"end": 839,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 793,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 793,
											"end": 928,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 793,
											"end": 928,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 793,
											"end": 928,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 793,
											"end": 928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 945,
											"end": 957,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 938,
											"end": 957,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 938,
											"end": 957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 938,
											"end": 957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 659,
											"end": 965,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 659,
											"end": 965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 659,
											"end": 965,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 659,
											"end": 965,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 120,
											"end": 125,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 218,
											"end": 224,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 136,
											"end": 226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 136,
											"end": 226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 246,
											"end": 251,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 275,
											"end": 281,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 268,
											"end": 273,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 309,
											"end": 313,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 307,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 298,
											"end": 314,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 291,
											"end": 314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 335,
											"end": 341,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 385,
											"end": 388,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 377,
											"end": 381,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 375,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 365,
											"end": 382,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 360,
											"end": 363,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 356,
											"end": 383,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 353,
											"end": 389,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 350,
											"end": 493,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 350,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 350,
											"end": 493,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 517,
											"end": 518,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 527,
											"end": 533,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 524,
											"end": 525,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 521,
											"end": 534,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 502,
											"end": 740,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 595,
											"end": 598,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 657,
											"end": 660,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 645,
											"end": 655,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 619,
											"end": 622,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 612,
											"end": 662,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 691,
											"end": 695,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 689,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 682,
											"end": 696,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 675,
											"end": 696,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 675,
											"end": 696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 723,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 716,
											"end": 730,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 709,
											"end": 730,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 709,
											"end": 730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 562,
											"end": 740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 549,
											"end": 550,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 546,
											"end": 547,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 542,
											"end": 551,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 537,
											"end": 551,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 537,
											"end": 551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 506,
											"end": 520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 752,
											"end": 891,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 752,
											"end": 891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 798,
											"end": 803,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 842,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 823,
											"end": 843,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 814,
											"end": 843,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 814,
											"end": 843,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 852,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 879,
											"end": 884,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 852,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 852,
											"end": 885,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 852,
											"end": 885,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 852,
											"end": 885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 752,
											"end": 891,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 752,
											"end": 891,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 752,
											"end": 891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 752,
											"end": 891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 752,
											"end": 891,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 914,
											"end": 1284,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 914,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 985,
											"end": 990,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1037,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1031,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1019,
											"end": 1025,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1015,
											"end": 1032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1011,
											"end": 1038,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1001,
											"end": 1123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1042,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1042,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1042,
											"end": 1121,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1042,
											"end": 1121,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1042,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1123,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1001,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1159,
											"end": 1165,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1146,
											"end": 1166,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1184,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1274,
											"end": 1277,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1266,
											"end": 1272,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1263,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1251,
											"end": 1257,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1264,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1184,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1184,
											"end": 1278,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1184,
											"end": 1278,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1184,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1278,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1278,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 991,
											"end": 1284,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 914,
											"end": 1284,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 914,
											"end": 1284,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 914,
											"end": 1284,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 914,
											"end": 1284,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 914,
											"end": 1284,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1290,
											"end": 1433,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1290,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1347,
											"end": 1352,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1384,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1372,
											"end": 1385,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1385,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1394,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1433,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1433,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1433,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1439,
											"end": 1978,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1439,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1529,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1572,
											"end": 1574,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1551,
											"end": 1558,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1570,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1575,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1659,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 1540,
											"end": 1659,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1578,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 1578,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1578,
											"end": 1657,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1578,
											"end": 1657,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 1578,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1659,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 1540,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1726,
											"end": 1727,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1724,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1711,
											"end": 1728,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1698,
											"end": 1729,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1774,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1754,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1775,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1778,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1778,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1778,
											"end": 1857,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1778,
											"end": 1857,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1778,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1742,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1883,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1953,
											"end": 1960,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1944,
											"end": 1950,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1933,
											"end": 1942,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1883,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1883,
											"end": 1961,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1883,
											"end": 1961,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1883,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1961,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1669,
											"end": 1971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1978,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1978,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1978,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1978,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1978,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1984,
											"end": 2335,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1984,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2054,
											"end": 2060,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2105,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2100,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2082,
											"end": 2089,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2078,
											"end": 2101,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2106,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2071,
											"end": 2190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2071,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2071,
											"end": 2190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 2109,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 2109,
											"end": 2188,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2109,
											"end": 2188,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 2109,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2071,
											"end": 2190,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2071,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2229,
											"end": 2230,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 2310,
											"end": 2317,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2301,
											"end": 2307,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2290,
											"end": 2299,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2308,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2254,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 2254,
											"end": 2318,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2254,
											"end": 2318,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 2254,
											"end": 2318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2244,
											"end": 2318,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2244,
											"end": 2318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2200,
											"end": 2328,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1984,
											"end": 2335,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1984,
											"end": 2335,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1984,
											"end": 2335,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1984,
											"end": 2335,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1984,
											"end": 2335,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2341,
											"end": 2459,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 2341,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 2446,
											"end": 2451,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 2428,
											"end": 2452,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2428,
											"end": 2452,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 2428,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2426,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2453,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2459,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2459,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2459,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2465,
											"end": 2583,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 2465,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2552,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 2570,
											"end": 2575,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2552,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 2552,
											"end": 2576,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2552,
											"end": 2576,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 2552,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2550,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2540,
											"end": 2577,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2583,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2589,
											"end": 2811,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2589,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2682,
											"end": 2686,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2720,
											"end": 2722,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2709,
											"end": 2718,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2697,
											"end": 2723,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2697,
											"end": 2723,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2801,
											"end": 2802,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2790,
											"end": 2799,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2786,
											"end": 2803,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2777,
											"end": 2783,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 2733,
											"end": 2804,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2733,
											"end": 2804,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2733,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2811,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2811,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2811,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2811,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2811,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2817,
											"end": 3039,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2817,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2910,
											"end": 2914,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2950,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2937,
											"end": 2946,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2951,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 2951,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 2951,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 3029,
											"end": 3030,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3027,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3014,
											"end": 3031,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3005,
											"end": 3011,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 2961,
											"end": 3032,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2961,
											"end": 3032,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2961,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 3039,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 3039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 3039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 3039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 3039,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3045,
											"end": 3174,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3045,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3079,
											"end": 3085,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 3106,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3106,
											"end": 3126,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3106,
											"end": 3126,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 3106,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3096,
											"end": 3126,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3096,
											"end": 3126,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3163,
											"end": 3167,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3135,
											"end": 3168,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3135,
											"end": 3168,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3135,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3174,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3174,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3174,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3174,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3180,
											"end": 3255,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3180,
											"end": 3255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3219,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3246,
											"end": 3248,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3240,
											"end": 3249,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3249,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3249,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3255,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3255,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3261,
											"end": 3572,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 3261,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3338,
											"end": 3342,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3428,
											"end": 3446,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3420,
											"end": 3426,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3417,
											"end": 3447,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3470,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 3414,
											"end": 3470,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3450,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 3450,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 3450,
											"end": 3468,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3450,
											"end": 3468,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 3450,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3470,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 3414,
											"end": 3470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3500,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3492,
											"end": 3498,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3480,
											"end": 3505,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3480,
											"end": 3505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3560,
											"end": 3564,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3554,
											"end": 3558,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3550,
											"end": 3565,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3542,
											"end": 3565,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3542,
											"end": 3565,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3572,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3572,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3572,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3578,
											"end": 3883,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3578,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3618,
											"end": 3621,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3637,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3655,
											"end": 3656,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3637,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3637,
											"end": 3657,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3637,
											"end": 3657,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3637,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3632,
											"end": 3657,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3632,
											"end": 3657,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 3689,
											"end": 3690,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3671,
											"end": 3691,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3671,
											"end": 3691,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 3671,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3691,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3691,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3825,
											"end": 3826,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3757,
											"end": 3823,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3753,
											"end": 3827,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 3828,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3851,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 3744,
											"end": 3851,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3831,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 3831,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 3831,
											"end": 3849,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3831,
											"end": 3849,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 3831,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3851,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 3744,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3876,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 3873,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3868,
											"end": 3877,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3861,
											"end": 3877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3861,
											"end": 3877,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3578,
											"end": 3883,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3578,
											"end": 3883,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3578,
											"end": 3883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3578,
											"end": 3883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3578,
											"end": 3883,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3889,
											"end": 3985,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 3889,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3955,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 3973,
											"end": 3978,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3955,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 3955,
											"end": 3979,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3955,
											"end": 3979,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 3955,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 3979,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 3979,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3889,
											"end": 3985,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3889,
											"end": 3985,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3889,
											"end": 3985,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3889,
											"end": 3985,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3991,
											"end": 4117,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 3991,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4028,
											"end": 4035,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4110,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4061,
											"end": 4066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4111,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4046,
											"end": 4111,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4046,
											"end": 4111,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 4117,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 4117,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 4117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 4117,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4123,
											"end": 4200,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 4123,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4167,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4189,
											"end": 4194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4178,
											"end": 4194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4178,
											"end": 4194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4123,
											"end": 4200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4123,
											"end": 4200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4123,
											"end": 4200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4123,
											"end": 4200,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4206,
											"end": 4487,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4206,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4311,
											"end": 4315,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4281,
											"end": 4287,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4277,
											"end": 4317,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4419,
											"end": 4425,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4426,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4383,
											"end": 4401,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4371,
											"end": 4381,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4368,
											"end": 4402,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4365,
											"end": 4427,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4450,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 4362,
											"end": 4450,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4430,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 4430,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 4430,
											"end": 4448,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4430,
											"end": 4448,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 4430,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4450,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 4362,
											"end": 4450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4470,
											"end": 4480,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4466,
											"end": 4468,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4459,
											"end": 4481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4249,
											"end": 4487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4206,
											"end": 4487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4206,
											"end": 4487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4206,
											"end": 4487,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4493,
											"end": 4726,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 4493,
											"end": 4726,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4532,
											"end": 4535,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4555,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 4573,
											"end": 4578,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4555,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 4555,
											"end": 4579,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4555,
											"end": 4579,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 4555,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4546,
											"end": 4579,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4546,
											"end": 4579,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4601,
											"end": 4667,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4594,
											"end": 4599,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4591,
											"end": 4668,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4691,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 4588,
											"end": 4691,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4691,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 4588,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4718,
											"end": 4719,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4711,
											"end": 4716,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4707,
											"end": 4720,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4700,
											"end": 4720,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4700,
											"end": 4720,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4726,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4726,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4726,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4726,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4732,
											"end": 4912,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 4732,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4780,
											"end": 4857,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4777,
											"end": 4778,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4858,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4877,
											"end": 4881,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4874,
											"end": 4875,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4867,
											"end": 4882,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4901,
											"end": 4905,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4898,
											"end": 4899,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4891,
											"end": 4906,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4918,
											"end": 5098,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 4918,
											"end": 5098,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 5043,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4963,
											"end": 4964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4956,
											"end": 5044,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5067,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 5060,
											"end": 5061,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5053,
											"end": 5068,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5091,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5084,
											"end": 5085,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5092,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5284,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 5104,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5152,
											"end": 5229,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5149,
											"end": 5150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5230,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5249,
											"end": 5253,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 5246,
											"end": 5247,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5239,
											"end": 5254,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5273,
											"end": 5277,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5270,
											"end": 5271,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5263,
											"end": 5278,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5290,
											"end": 5407,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 5290,
											"end": 5407,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5399,
											"end": 5400,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5389,
											"end": 5401,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5530,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 5413,
											"end": 5530,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5522,
											"end": 5523,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5519,
											"end": 5520,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5512,
											"end": 5524,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5653,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 5536,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5645,
											"end": 5646,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5635,
											"end": 5647,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 5776,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 5659,
											"end": 5776,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 5769,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5765,
											"end": 5766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5758,
											"end": 5770,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5884,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 5782,
											"end": 5884,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5823,
											"end": 5829,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5876,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5870,
											"end": 5877,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5867,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5858,
											"end": 5863,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5854,
											"end": 5868,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5878,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5840,
											"end": 5878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5840,
											"end": 5878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5884,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5884,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5884,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5884,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5890,
											"end": 6012,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 5890,
											"end": 6012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5963,
											"end": 5987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 5981,
											"end": 5986,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5963,
											"end": 5987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 5963,
											"end": 5987,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5963,
											"end": 5987,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 5963,
											"end": 5987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 5961,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5953,
											"end": 5988,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 5943,
											"end": 6006,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6002,
											"end": 6003,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5999,
											"end": 6000,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5992,
											"end": 6004,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6006,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 5943,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5890,
											"end": 6012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5890,
											"end": 6012,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6018,
											"end": 6140,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 6018,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6091,
											"end": 6115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 6109,
											"end": 6114,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6091,
											"end": 6115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 6091,
											"end": 6115,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6091,
											"end": 6115,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 6091,
											"end": 6115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6084,
											"end": 6089,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6116,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 6071,
											"end": 6134,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6130,
											"end": 6131,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6127,
											"end": 6128,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6120,
											"end": 6132,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6134,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 6071,
											"end": 6134,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6140,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6140,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getTokenBalanceOf(address[])": "0a5f75b6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"contract IMasterEntertainer\",\"name\":\"masterEntertainer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"userAddresses\",\"type\":\"address[]\"}],\"name\":\"getTokenBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BalanceHelper.sol\":\"BalanceHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"contracts/BalanceHelper.sol\":{\"keccak256\":\"0x25e896cb4b7fad240a4f27021f0ad520bdffb73f9c2470603189282aeab01530\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c433b1c8d9d64a8abf21b0000b56929bd3841f934f6113c03aea27035131f6ca\",\"dweb:/ipfs/QmbZZPnfTtHA2X35innxypr99jTWheEU1AA9AMkAmisVRG\"]},\"contracts/interfaces/IMasterEntertainer.sol\":{\"keccak256\":\"0x57410ab5f0cd0316d410f9954abd849a54c1c400f2ab4d7fa00db81e2ced12e1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://04dda567ff1ec7a4f77f22d5e63b31f0cad7ce9c61fd161c071f6251a6daba09\",\"dweb:/ipfs/QmaBkBj8APhDTX7dirQRdxY8aNWY2N6sWuAQbjGSYTtaAq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 826,
								"contract": "contracts/BalanceHelper.sol:BalanceHelper",
								"label": "_token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)181"
							},
							{
								"astId": 829,
								"contract": "contracts/BalanceHelper.sol:BalanceHelper",
								"label": "_masterEntertainer",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IMasterEntertainer)909"
							}
						],
						"types": {
							"t_contract(IERC20)181": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IMasterEntertainer)909": {
								"encoding": "inplace",
								"label": "contract IMasterEntertainer",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IMasterEntertainer.sol": {
				"IMasterEntertainer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "depositForUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_vesting",
									"type": "uint256"
								}
							],
							"name": "getBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updatePrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"depositForUser(uint256,uint256,address)": "a3f30d27",
							"getBalanceOf(address,uint256)": "94d45b59",
							"updatePrice()": "673a7e28"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"depositForUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_vesting\",\"type\":\"uint256\"}],\"name\":\"getBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updatePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMasterEntertainer.sol\":\"IMasterEntertainer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IMasterEntertainer.sol\":{\"keccak256\":\"0x57410ab5f0cd0316d410f9954abd849a54c1c400f2ab4d7fa00db81e2ced12e1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://04dda567ff1ec7a4f77f22d5e63b31f0cad7ce9c61fd161c071f6251a6daba09\",\"dweb:/ipfs/QmaBkBj8APhDTX7dirQRdxY8aNWY2N6sWuAQbjGSYTtaAq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							498
						],
						"Ownable": [
							103
						]
					},
					"id": 104,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 104,
							"sourceUnit": 499,
							"src": "58:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 498,
										"src": "614:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "614:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "90:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 103,
							"linearizedBaseContracts": [
								103,
								498
							],
							"name": "Ownable",
							"nameLocation": "603:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "644:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 103,
									"src": "628:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "628:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "663:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "700:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "684:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "731:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "715:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "683:57:0"
									},
									"src": "657:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "857:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 488,
																"src": "877:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "867:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "867:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "867:23:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "747:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "857:0:0"
									},
									"scope": 103,
									"src": "843:54:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1028:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1045:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1038:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "903:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "982:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1019:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:9:0"
									},
									"scope": 103,
									"src": "973:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1167:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1185:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1185:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "1196:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1196:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1185:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1210:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1177:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1255:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1064:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1155:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1164:2:0"
									},
									"src": "1146:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1659:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1687:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1679:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1679:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1679:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "1669:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1669:21:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1269:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1649:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1649:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1614:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1631:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1659:0:0"
									},
									"scope": 103,
									"src": "1605:92:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1916:119:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "1934:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1954:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1946:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1946:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1946:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1934:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1958:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1926:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1926:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1926:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2019:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "2009:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2009:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2009:19:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1703:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1906:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1906:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1855:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1881:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1873:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1872:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1916:0:0"
									},
									"scope": 103,
									"src": "1846:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "2086:124:0",
										"statements": [
											{
												"assignments": [
													89
												],
												"declarations": [
													{
														"constant": false,
														"id": 89,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2104:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 101,
														"src": "2096:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 88,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2096:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 91,
												"initialValue": {
													"id": 90,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2115:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2096:25:0"
											},
											{
												"expression": {
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 92,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2131:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 93,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "2140:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2131:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "2131:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 97,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "2184:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 98,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2194:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 96,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2163:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "EmitStatement",
												"src": "2158:45:0"
											}
										]
									},
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setOwner",
									"nameLocation": "2050:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2068:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "2060:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2059:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2086:0:0"
									},
									"scope": 103,
									"src": "2041:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 104,
							"src": "585:1627:0",
							"usedErrors": []
						}
					],
					"src": "33:2180:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							181
						]
					},
					"id": 182,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 105,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 106,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 181,
							"linearizedBaseContracts": [
								181
							],
							"name": "IERC20",
							"nameLocation": "139:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "232:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "269:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:9:1"
									},
									"scope": 181,
									"src": "223:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "370:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "388:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "380:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:17:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "420:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:9:1"
									},
									"scope": 181,
									"src": "361:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "658:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "675:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "667:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "694:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "686:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:35:1"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "720:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:6:1"
									},
									"scope": 181,
									"src": "649:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1010:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1028:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1020:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1043:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1035:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:32:1"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:1"
									},
									"scope": 181,
									"src": "1001:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1746:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1762:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1754:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1779:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1771:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:33:1"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1805:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:6:1"
									},
									"scope": 181,
									"src": "1737:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2127:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2157:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2149:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2181:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2173:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2208:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2200:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2200:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:81:1"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2239:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 159,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2239:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2238:6:1"
									},
									"scope": 181,
									"src": "2118:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "2251:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 171,
									"name": "Transfer",
									"nameLocation": "2420:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2445:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "2429:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2467:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "2451:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2479:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "2471:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:57:1"
									},
									"src": "2414:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "2492:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 180,
									"name": "Approval",
									"nameLocation": "2651:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2676:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2660:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2660:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2699:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2683:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2716:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2708:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:63:1"
									},
									"src": "2645:78:1"
								}
							],
							"scope": 182,
							"src": "129:2596:1",
							"usedErrors": []
						}
					],
					"src": "33:2693:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							477
						]
					},
					"id": 478,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 183,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 184,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 477,
							"linearizedBaseContracts": [
								477
							],
							"name": "Address",
							"nameLocation": "134:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 200,
										"nodeType": "Block",
										"src": "784:311:2",
										"statements": [
											{
												"assignments": [
													193
												],
												"declarations": [
													{
														"constant": false,
														"id": 193,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "989:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 200,
														"src": "981:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 192,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 194,
												"nodeType": "VariableDeclarationStatement",
												"src": "981:12:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1012:52:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1026:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1046:7:2"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1034:11:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1034:20:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1026:4:2"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 187,
														"isOffset": false,
														"isSlot": false,
														"src": "1046:7:2",
														"valueSize": 1
													},
													{
														"declaration": 193,
														"isOffset": false,
														"isSlot": false,
														"src": "1026:4:2",
														"valueSize": 1
													}
												],
												"id": 195,
												"nodeType": "InlineAssembly",
												"src": "1003:61:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 196,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "1080:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1087:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1080:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 191,
												"id": 199,
												"nodeType": "Return",
												"src": "1073:15:2"
											}
										]
									},
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "148:565:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "727:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "746:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "738:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:17:2"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "778:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:2"
									},
									"scope": 477,
									"src": "718:377:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "2083:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 212,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2109:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		],
																		"id": 211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 210,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2101:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2101:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2101:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 215,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "2126:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2101:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2134:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 209,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2093:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2093:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2093:73:2"
											},
											{
												"assignments": [
													221,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 221,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2183:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 234,
														"src": "2178:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 220,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2178:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 228,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2226:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 222,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "2196:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2196:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 224,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "2218:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2196:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2196:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 230,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "2247:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2256:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2239:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2239:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "2239:78:2"
											}
										]
									},
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1101:906:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2021:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2047:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "2031:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2066:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "2058:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2058:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:43:2"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2083:0:2"
									},
									"scope": 477,
									"src": "2012:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "3155:84:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 246,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "3185:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 247,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3193:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3199:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 245,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															252,
															272
														],
														"referencedDeclaration": 272,
														"src": "3172:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3172:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 244,
												"id": 250,
												"nodeType": "Return",
												"src": "3165:67:2"
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "2330:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3075:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3096:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3088:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3117:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3104:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3104:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3087:35:2"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3141:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 242,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3141:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:14:2"
									},
									"scope": 477,
									"src": "3066:173:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "3608:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 265,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "3647:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 266,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "3655:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3661:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 268,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "3664:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 264,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															292,
															342
														],
														"referencedDeclaration": 342,
														"src": "3625:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3625:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 263,
												"id": 270,
												"nodeType": "Return",
												"src": "3618:59:2"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "3245:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3470:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3500:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3492:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3529:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3516:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3516:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3557:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3543:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 258,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3543:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:93:2"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3594:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 261,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3594:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3593:14:2"
									},
									"scope": 477,
									"src": "3461:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "4189:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 285,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "4228:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 286,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "4236:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 287,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "4242:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4249:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 284,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															292,
															342
														],
														"referencedDeclaration": 342,
														"src": "4206:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4206:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 283,
												"id": 290,
												"nodeType": "Return",
												"src": "4199:94:2"
											}
										]
									},
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "3690:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4055:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4094:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4086:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4123:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4110:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 276,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4110:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4145:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4137:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4137:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4076:80:2"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4175:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 281,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4175:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4174:14:2"
									},
									"scope": 477,
									"src": "4046:254:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "4727:321:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 309,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4753:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		],
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4745:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 307,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4745:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4745:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4745:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 312,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "4770:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4745:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4777:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4737:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4737:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "4737:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 319,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "4847:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 318,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "4836:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4836:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4856:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4828:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4828:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "4828:60:2"
											},
											{
												"assignments": [
													325,
													327
												],
												"declarations": [
													{
														"constant": false,
														"id": 325,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4905:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 341,
														"src": "4900:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 324,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4900:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 327,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4927:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 341,
														"src": "4914:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 326,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4914:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 334,
												"initialValue": {
													"arguments": [
														{
															"id": 332,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "4967:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 328,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "4941:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4941:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 330,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "4960:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4941:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4941:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4899:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 336,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "5007:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 337,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "5016:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 338,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "5028:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 335,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "4989:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4989:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 305,
												"id": 340,
												"nodeType": "Return",
												"src": "4982:59:2"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "4306:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4557:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4596:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "4588:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4588:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4625:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "4612:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 296,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4612:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4647:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "4639:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4676:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "4662:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 300,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4662:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:116:2"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "4713:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 303,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4713:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4712:14:2"
									},
									"scope": 477,
									"src": "4548:500:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "5325:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 353,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "5361:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 354,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "5369:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5375:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 352,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															359,
															394
														],
														"referencedDeclaration": 394,
														"src": "5342:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5342:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 351,
												"id": 357,
												"nodeType": "Return",
												"src": "5335:80:2"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "5054:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5234:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5261:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "5253:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5253:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5282:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "5269:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 346,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5269:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5252:35:2"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "5311:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 349,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5311:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5310:14:2"
									},
									"scope": 477,
									"src": "5225:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "5764:229:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 373,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "5793:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 372,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "5782:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5782:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5802:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5774:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5774:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "5774:67:2"
											},
											{
												"assignments": [
													379,
													381
												],
												"declarations": [
													{
														"constant": false,
														"id": 379,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5858:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 393,
														"src": "5853:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 378,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5853:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 381,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5880:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 393,
														"src": "5867:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 380,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5867:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 386,
												"initialValue": {
													"arguments": [
														{
															"id": 384,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "5912:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 382,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "5894:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5894:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5894:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5852:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 388,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "5952:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 389,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "5961:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 390,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "5973:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 387,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "5934:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5934:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 370,
												"id": 392,
												"nodeType": "Return",
												"src": "5927:59:2"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "5428:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5615:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5651:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "5643:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5643:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5680:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "5667:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 363,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5667:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5708:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "5694:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 365,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5694:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5633:93:2"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "5750:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 368,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5750:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5749:14:2"
									},
									"scope": 477,
									"src": "5606:387:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "6269:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 405,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "6307:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 406,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "6315:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6321:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 404,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															411,
															446
														],
														"referencedDeclaration": 446,
														"src": "6286:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6286:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 403,
												"id": 409,
												"nodeType": "Return",
												"src": "6279:84:2"
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "5999:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6181:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6210:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "6202:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6202:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6231:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "6218:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6218:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6201:35:2"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "6255:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 401,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6255:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6254:14:2"
									},
									"scope": 477,
									"src": "6172:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "6711:233:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 425,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "6740:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 424,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "6729:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6729:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6749:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 423,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6721:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6721:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "6721:69:2"
											},
											{
												"assignments": [
													431,
													433
												],
												"declarations": [
													{
														"constant": false,
														"id": 431,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6807:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 445,
														"src": "6802:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 430,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6802:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 433,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6829:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 445,
														"src": "6816:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 432,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [
														{
															"id": 436,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "6863:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 434,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "6843:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6843:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6843:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6801:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "6903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 441,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "6912:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 442,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "6924:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 439,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "6885:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6885:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 422,
												"id": 444,
												"nodeType": "Return",
												"src": "6878:59:2"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "6376:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6565:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6603:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "6595:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6595:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6632:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "6619:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6619:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6660:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "6646:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 417,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6646:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6585:93:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "6697:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 420,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6697:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6696:14:2"
									},
									"scope": 477,
									"src": "6556:388:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "7110:532:2",
										"statements": [
											{
												"condition": {
													"id": 457,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 448,
													"src": "7124:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 473,
													"nodeType": "Block",
													"src": "7181:455:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 461,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "7265:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7265:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7285:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7265:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 471,
																"nodeType": "Block",
																"src": "7573:53:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 468,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 452,
																					"src": "7598:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 467,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7591:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7591:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 470,
																		"nodeType": "ExpressionStatement",
																		"src": "7591:20:2"
																	}
																]
															},
															"id": 472,
															"nodeType": "IfStatement",
															"src": "7261:365:2",
															"trueBody": {
																"id": 466,
																"nodeType": "Block",
																"src": "7288:279:2",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7408:145:2",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7430:40:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7459:10:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7453:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7453:17:2"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7434:15:2",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7502:2:2",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7506:10:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7498:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7498:19:2"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7519:15:2"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7491:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7491:44:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7491:44:2"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 450,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7459:10:2",
																				"valueSize": 1
																			},
																			{
																				"declaration": 450,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7506:10:2",
																				"valueSize": 1
																			}
																		],
																		"id": 465,
																		"nodeType": "InlineAssembly",
																		"src": "7399:154:2"
																	}
																]
															}
														}
													]
												},
												"id": 474,
												"nodeType": "IfStatement",
												"src": "7120:516:2",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "7133:42:2",
													"statements": [
														{
															"expression": {
																"id": 458,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "7154:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 456,
															"id": 459,
															"nodeType": "Return",
															"src": "7147:17:2"
														}
													]
												}
											}
										]
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nameLocation": "6959:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6991:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "6986:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6986:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7021:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7008:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7008:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7055:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7041:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7041:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6976:97:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7096:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7096:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7095:14:2"
									},
									"scope": 477,
									"src": "6950:692:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 478,
							"src": "126:7518:2",
							"usedErrors": []
						}
					],
					"src": "33:7612:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							498
						]
					},
					"id": 499,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 479,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 498,
							"linearizedBaseContracts": [
								498
							],
							"name": "Context",
							"nameLocation": "572:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "648:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 484,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "665:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "665:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 483,
												"id": 486,
												"nodeType": "Return",
												"src": "658:17:3"
											}
										]
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "595:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "639:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:9:3"
									},
									"scope": 498,
									"src": "586:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "755:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 493,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "772:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "772:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 492,
												"id": 495,
												"nodeType": "Return",
												"src": "765:15:3"
											}
										]
									},
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "697:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:2:3"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "739:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 490,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "739:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:16:3"
									},
									"scope": 498,
									"src": "688:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 499,
							"src": "554:235:3",
							"usedErrors": []
						}
					],
					"src": "33:757:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							810
						]
					},
					"id": 811,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 500,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 501,
								"nodeType": "StructuredDocumentation",
								"src": "211:186:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 810,
							"linearizedBaseContracts": [
								810
							],
							"name": "SafeMath",
							"nameLocation": "406:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "633:140:4",
										"statements": [
											{
												"id": 531,
												"nodeType": "UncheckedBlock",
												"src": "643:124:4",
												"statements": [
													{
														"assignments": [
															514
														],
														"declarations": [
															{
																"constant": false,
																"id": 514,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "675:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 531,
																"src": "667:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 513,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "667:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 518,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 515,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 504,
																"src": "679:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 516,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "683:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "679:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "667:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 519,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "702:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 520,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 504,
																"src": "706:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "702:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 526,
														"nodeType": "IfStatement",
														"src": "698:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "717:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "724:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 524,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "716:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 512,
															"id": 525,
															"nodeType": "Return",
															"src": "709:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "748:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 528,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "754:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 529,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "747:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 512,
														"id": 530,
														"nodeType": "Return",
														"src": "740:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "421:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "566:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "581:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "573:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "592:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "584:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:22:4"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "618:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 508,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "618:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "624:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:15:4"
									},
									"scope": 810,
									"src": "557:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "995:113:4",
										"statements": [
											{
												"id": 559,
												"nodeType": "UncheckedBlock",
												"src": "1005:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 545,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "1033:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 546,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 536,
																"src": "1037:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1033:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 552,
														"nodeType": "IfStatement",
														"src": "1029:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1048:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1055:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 550,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1047:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 544,
															"id": 551,
															"nodeType": "Return",
															"src": "1040:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1079:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 554,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 536,
																		"src": "1085:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 555,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 538,
																		"src": "1089:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1085:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 557,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1078:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 544,
														"id": 558,
														"nodeType": "Return",
														"src": "1071:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "779:135:4",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "928:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "943:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "935:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "954:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "946:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "934:22:4"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "980:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 540,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "980:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "986:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:15:4"
									},
									"scope": 810,
									"src": "919:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "1332:417:4",
										"statements": [
											{
												"id": 601,
												"nodeType": "UncheckedBlock",
												"src": "1342:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 573,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "1600:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1605:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1600:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 580,
														"nodeType": "IfStatement",
														"src": "1596:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1616:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1622:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 578,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1615:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 572,
															"id": 579,
															"nodeType": "Return",
															"src": "1608:16:4"
														}
													},
													{
														"assignments": [
															582
														],
														"declarations": [
															{
																"constant": false,
																"id": 582,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1646:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 601,
																"src": "1638:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 581,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1638:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 586,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 583,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "1650:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 584,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "1654:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1650:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1638:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 587,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "1673:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 588,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 564,
																	"src": "1677:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1673:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 590,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "1682:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 596,
														"nodeType": "IfStatement",
														"src": "1669:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1693:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1700:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 594,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1692:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 572,
															"id": 595,
															"nodeType": "Return",
															"src": "1685:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1724:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 598,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "1730:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 599,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1723:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 572,
														"id": 600,
														"nodeType": "Return",
														"src": "1716:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "1114:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1265:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1280:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "1272:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1291:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "1283:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1271:22:4"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "1317:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 568,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1317:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "1323:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:15:4"
									},
									"scope": 810,
									"src": "1256:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 630,
										"nodeType": "Block",
										"src": "1974:114:4",
										"statements": [
											{
												"id": 629,
												"nodeType": "UncheckedBlock",
												"src": "1984:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 615,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 608,
																"src": "2012:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2012:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 622,
														"nodeType": "IfStatement",
														"src": "2008:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2028:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2035:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 620,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2027:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 614,
															"id": 621,
															"nodeType": "Return",
															"src": "2020:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2059:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 624,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 606,
																		"src": "2065:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 625,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "2069:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2065:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 627,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2058:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 614,
														"id": 628,
														"nodeType": "Return",
														"src": "2051:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "1755:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1907:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1922:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1914:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1933:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1925:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:22:4"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1959:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 610,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1959:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1965:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1965:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:4"
									},
									"scope": 810,
									"src": "1898:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 658,
										"nodeType": "Block",
										"src": "2323:114:4",
										"statements": [
											{
												"id": 657,
												"nodeType": "UncheckedBlock",
												"src": "2333:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 643,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 636,
																"src": "2361:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2366:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2361:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 650,
														"nodeType": "IfStatement",
														"src": "2357:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2377:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2384:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 648,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2376:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 642,
															"id": 649,
															"nodeType": "Return",
															"src": "2369:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2408:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 652,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "2414:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 653,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "2418:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2414:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 655,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2407:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 642,
														"id": 656,
														"nodeType": "Return",
														"src": "2400:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "2094:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2256:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2271:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "2263:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2282:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "2274:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:22:4"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "2308:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 638,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2308:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "2314:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2307:15:4"
									},
									"scope": 810,
									"src": "2247:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "2739:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 669,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "2756:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 670,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "2760:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2756:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 668,
												"id": 672,
												"nodeType": "Return",
												"src": "2749:12:4"
											}
										]
									},
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "2443:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2681:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2693:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2685:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2704:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2696:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:22:4"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2730:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:9:4"
									},
									"scope": 810,
									"src": "2672:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "3106:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 684,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "3123:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 685,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "3127:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3123:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 683,
												"id": 687,
												"nodeType": "Return",
												"src": "3116:12:4"
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "2774:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3048:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3060:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "3052:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3071:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "3063:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3051:22:4"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "3097:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3096:9:4"
									},
									"scope": 810,
									"src": "3039:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "3449:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 699,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "3466:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 700,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "3470:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3466:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 698,
												"id": 702,
												"nodeType": "Return",
												"src": "3459:12:4"
											}
										]
									},
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "3141:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3391:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3403:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "3395:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3414:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "3406:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3394:22:4"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "3440:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3440:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3439:9:4"
									},
									"scope": 810,
									"src": "3382:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "3834:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 714,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "3851:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 715,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "3855:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3851:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 713,
												"id": 717,
												"nodeType": "Return",
												"src": "3844:12:4"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "3484:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3776:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3788:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3780:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3799:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3791:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:22:4"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3825:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3825:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3824:9:4"
									},
									"scope": 810,
									"src": "3767:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "4383:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 729,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "4400:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 730,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "4404:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4400:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 728,
												"id": 732,
												"nodeType": "Return",
												"src": "4393:12:4"
											}
										]
									},
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "3869:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4325:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4337:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "4329:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4348:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "4340:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4340:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4328:22:4"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "4374:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:9:4"
									},
									"scope": 810,
									"src": "4316:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "5001:106:4",
										"statements": [
											{
												"id": 757,
												"nodeType": "UncheckedBlock",
												"src": "5011:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 747,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 739,
																		"src": "5043:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 748,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 737,
																		"src": "5048:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5043:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 750,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "5051:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 746,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5035:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5035:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 752,
														"nodeType": "ExpressionStatement",
														"src": "5035:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 753,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "5085:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 754,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "5089:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5085:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 745,
														"id": 756,
														"nodeType": "Return",
														"src": "5078:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "4418:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4885:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4906:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "4898:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4898:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4925:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "4917:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4917:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4950:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "4936:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 740,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4936:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4888:80:4"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "4992:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4992:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4991:9:4"
									},
									"scope": 810,
									"src": "4876:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "5716:105:4",
										"statements": [
											{
												"id": 782,
												"nodeType": "UncheckedBlock",
												"src": "5726:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 772,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 764,
																		"src": "5758:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5762:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5758:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 775,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "5765:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 771,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5750:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5750:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 777,
														"nodeType": "ExpressionStatement",
														"src": "5750:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 778,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "5799:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 779,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "5803:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5799:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 770,
														"id": 781,
														"nodeType": "Return",
														"src": "5792:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "5113:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5600:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5621:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "5613:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5613:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5640:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "5632:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5632:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5665:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "5651:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 765,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5651:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5603:80:4"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "5707:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5707:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5706:9:4"
									},
									"scope": 810,
									"src": "5591:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "6592:105:4",
										"statements": [
											{
												"id": 807,
												"nodeType": "UncheckedBlock",
												"src": "6602:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 797,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 789,
																		"src": "6634:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6638:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6634:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 800,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "6641:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 796,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6626:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6626:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 802,
														"nodeType": "ExpressionStatement",
														"src": "6626:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 803,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "6675:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 804,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "6679:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6675:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 795,
														"id": 806,
														"nodeType": "Return",
														"src": "6668:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "5827:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6476:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6497:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "6489:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6516:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "6508:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6508:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6541:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "6527:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 790,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6527:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6479:80:4"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "6583:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6583:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6582:9:4"
									},
									"scope": 810,
									"src": "6467:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 811,
							"src": "398:6301:4",
							"usedErrors": []
						}
					],
					"src": "33:6667:4"
				},
				"id": 4
			},
			"contracts/BalanceHelper.sol": {
				"ast": {
					"absolutePath": "contracts/BalanceHelper.sol",
					"exportedSymbols": {
						"Address": [
							477
						],
						"BalanceHelper": [
							885
						],
						"Context": [
							498
						],
						"IERC20": [
							181
						],
						"IMasterEntertainer": [
							909
						],
						"Ownable": [
							103
						],
						"SafeMath": [
							810
						]
					},
					"id": 886,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 812,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "37:22:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 813,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 886,
							"sourceUnit": 182,
							"src": "63:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 814,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 886,
							"sourceUnit": 478,
							"src": "121:51:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 815,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 886,
							"sourceUnit": 104,
							"src": "174:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 816,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 886,
							"sourceUnit": 811,
							"src": "228:57:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IMasterEntertainer.sol",
							"file": "./interfaces/IMasterEntertainer.sol",
							"id": 817,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 886,
							"sourceUnit": 910,
							"src": "287:45:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 885,
							"linearizedBaseContracts": [
								885
							],
							"name": "BalanceHelper",
							"nameLocation": "345:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 820,
									"libraryName": {
										"id": 818,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 477,
										"src": "372:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "366:26:5",
									"typeName": {
										"id": 819,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "384:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"id": 823,
									"libraryName": {
										"id": 821,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 810,
										"src": "404:8:5"
									},
									"nodeType": "UsingForDirective",
									"src": "398:27:5",
									"typeName": {
										"id": 822,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "417:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 826,
									"mutability": "mutable",
									"name": "_token",
									"nameLocation": "440:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 885,
									"src": "433:13:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$181",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 825,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 824,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 181,
											"src": "433:6:5"
										},
										"referencedDeclaration": 181,
										"src": "433:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$181",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 829,
									"mutability": "mutable",
									"name": "_masterEntertainer",
									"nameLocation": "472:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 885,
									"src": "453:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IMasterEntertainer_$909",
										"typeString": "contract IMasterEntertainer"
									},
									"typeName": {
										"id": 828,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 827,
											"name": "IMasterEntertainer",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 909,
											"src": "453:18:5"
										},
										"referencedDeclaration": 909,
										"src": "453:18:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMasterEntertainer_$909",
											"typeString": "contract IMasterEntertainer"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "569:82:5",
										"statements": [
											{
												"expression": {
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 838,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "580:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$181",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 839,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "589:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$181",
															"typeString": "contract IERC20"
														}
													},
													"src": "580:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"id": 841,
												"nodeType": "ExpressionStatement",
												"src": "580:14:5"
											},
											{
												"expression": {
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 842,
														"name": "_masterEntertainer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "605:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMasterEntertainer_$909",
															"typeString": "contract IMasterEntertainer"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 843,
														"name": "masterEntertainer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "626:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMasterEntertainer_$909",
															"typeString": "contract IMasterEntertainer"
														}
													},
													"src": "605:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMasterEntertainer_$909",
														"typeString": "contract IMasterEntertainer"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "605:38:5"
											}
										]
									},
									"id": 847,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "524:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "517:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$181",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 831,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 830,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "517:6:5"
													},
													"referencedDeclaration": 181,
													"src": "517:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "masterEntertainer",
												"nameLocation": "550:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "531:36:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IMasterEntertainer_$909",
													"typeString": "contract IMasterEntertainer"
												},
												"typeName": {
													"id": 834,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 833,
														"name": "IMasterEntertainer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 909,
														"src": "531:18:5"
													},
													"referencedDeclaration": 909,
													"src": "531:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMasterEntertainer_$909",
														"typeString": "contract IMasterEntertainer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:52:5"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "569:0:5"
									},
									"scope": 885,
									"src": "505:146:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "747:218:5",
										"statements": [
											{
												"assignments": [
													856
												],
												"declarations": [
													{
														"constant": false,
														"id": 856,
														"mutability": "mutable",
														"name": "tokenBalance",
														"nameLocation": "766:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 883,
														"src": "758:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 855,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "758:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 858,
												"initialValue": {
													"hexValue": "30",
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "781:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "758:24:5"
											},
											{
												"body": {
													"id": 879,
													"nodeType": "Block",
													"src": "851:77:5",
													"statements": [
														{
															"expression": {
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 870,
																	"name": "tokenBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "866:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 873,
																				"name": "userAddresses",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 850,
																				"src": "899:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 875,
																			"indexExpression": {
																				"id": 874,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 860,
																				"src": "913:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "899:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 871,
																			"name": "_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "882:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$181",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 120,
																		"src": "882:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "882:34:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "866:50:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 878,
															"nodeType": "ExpressionStatement",
															"src": "866:50:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 863,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "810:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 864,
															"name": "userAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "814:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 865,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "814:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "810:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 880,
												"initializationExpression": {
													"assignments": [
														860
													],
													"declarations": [
														{
															"constant": false,
															"id": 860,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "803:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 880,
															"src": "798:6:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 859,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "798:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 862,
													"initialValue": {
														"hexValue": "30",
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "807:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "798:10:5"
												},
												"loopExpression": {
													"expression": {
														"id": 868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "836:3:5",
														"subExpression": {
															"id": 867,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "836:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 869,
													"nodeType": "ExpressionStatement",
													"src": "836:3:5"
												},
												"nodeType": "ForStatement",
												"src": "793:135:5"
											},
											{
												"expression": {
													"id": 881,
													"name": "tokenBalance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 856,
													"src": "945:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 854,
												"id": 882,
												"nodeType": "Return",
												"src": "938:19:5"
											}
										]
									},
									"functionSelector": "0a5f75b6",
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenBalanceOf",
									"nameLocation": "668:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "userAddresses",
												"nameLocation": "703:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "686:30:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 848,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "686:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 849,
													"nodeType": "ArrayTypeName",
													"src": "686:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "685:32:5"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "738:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:9:5"
									},
									"scope": 885,
									"src": "659:306:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 886,
							"src": "336:640:5",
							"usedErrors": []
						}
					],
					"src": "37:939:5"
				},
				"id": 5
			},
			"contracts/interfaces/IMasterEntertainer.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IMasterEntertainer.sol",
					"exportedSymbols": {
						"IMasterEntertainer": [
							909
						]
					},
					"id": 910,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 887,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "36:22:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 909,
							"linearizedBaseContracts": [
								909
							],
							"name": "IMasterEntertainer",
							"nameLocation": "70:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "673a7e28",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updatePrice",
									"nameLocation": "104:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "115:2:6"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "126:0:6"
									},
									"scope": 909,
									"src": "95:32:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "94d45b59",
									"id": 899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getBalanceOf",
									"nameLocation": "142:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "163:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "155:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "155:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "_vesting",
												"nameLocation": "178:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "170:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "170:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "154:33:6"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "211:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "210:9:6"
									},
									"scope": 909,
									"src": "133:87:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a3f30d27",
									"id": 908,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositForUser",
									"nameLocation": "234:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "257:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "249:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "249:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "271:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "263:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "288:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "280:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "280:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "248:46:6"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:0:6"
									},
									"scope": 909,
									"src": "225:79:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 910,
							"src": "60:246:6",
							"usedErrors": []
						}
					],
					"src": "36:270:6"
				},
				"id": 6
			}
		}
	}
}